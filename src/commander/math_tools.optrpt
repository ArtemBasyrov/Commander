Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.3.222 Build 20180410

Compiler options: -I/mn/stornext/u3/hke/owl/local/src/dagsshealpix/include -I/mn/stornext/u3/hke/owl/local/include -I/astro/local/opt/Intel/compilers_and_libraries_2018.3.222/linux/mpi/intel64/include -I/astro/local/opt/Intel/compilers_and_libraries_2018.3.222/linux/mpi/intel64/include -O3 -traceback -qopenmp -qopt-report=5 -parallel -c

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: math_tools._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (math_tools._) [1/30=3.3%] math_tools.f90(1,8)


    Report from: Code generation optimizations [cg]

math_tools.f90(1,8):remark #34051: REGISTER ALLOCATION : [math_tools._] math_tools.f90:1

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::INVERT_MATRIX_DPC

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::INVERT_MATRIX_DPC) [2/30=6.7%] math_tools.f90(18,14)
  -> EXTERN: (30,5) for_alloc_allocatable
  -> EXTERN: (30,5) for_check_mult_overflow64
  -> EXTERN: (31,5) for_alloc_allocatable
  -> EXTERN: (31,5) for_check_mult_overflow64
  -> EXTERN: (33,10) __resetsp_inlined
  -> EXTERN: (33,10) zgetrf_
  -> EXTERN: (33,10) __getsp_inlined
  -> EXTERN: (33,23) _alloca
  -> EXTERN: (35,8) for_write_seq_lis
  -> EXTERN: (35,8) for_write_seq_lis_xmit
  -> EXTERN: (36,8) for_stop_core
  -> EXTERN: (39,13) __resetsp_inlined
  -> EXTERN: (39,13) zgetri_
  -> EXTERN: (39,13) __getsp_inlined
  -> EXTERN: (39,23) _alloca
  -> EXTERN: (42,11) for_write_seq_lis
  -> EXTERN: (42,11) for_write_seq_lis_xmit
  -> EXTERN: (43,11) for_stop_core
  -> EXTERN: (48,5) for_dealloc_allocatable
  -> EXTERN: (49,5) for_dealloc_allocatable
  -> EXTERN: (51,3) for_dealloc_allocatable
  -> EXTERN: (51,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(33,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (33:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(33,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.740 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(33,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(33,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (33:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(33,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.750 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(33,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(33,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (33:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(33,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 2.320 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(33,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(33,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (33:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(33,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 5.000 
      remark #15478: estimated potential speedup: 1.400 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(33,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(39,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (39:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(39,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.740 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(39,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(39,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (39:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(39,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.750 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(39,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(39,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (39:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(39,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 2.320 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(39,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(39,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (39:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(39,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 5.000 
      remark #15478: estimated potential speedup: 1.400 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(39,23)
   <Remainder>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(25,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(24,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(18,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_invert_matrix_dpc_] math_tools.f90:18

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     430
            Global    :     138
            Local     :     292
        Regenerable   :      85
        Spilled       :      23
        
    Routine stack
        Variables     :     288 bytes*
            Reads     :      15 [1.48e+01 ~ 1.9%]
            Writes    :      39 [3.14e+01 ~ 4.0%]
        Spills        :     144 bytes*
            Reads     :      40 [2.53e+01 ~ 3.2%]
            Writes    :      30 [8.00e+00 ~ 1.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::INVERT_MATRIX_DP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::INVERT_MATRIX_DP) [3/30=10.0%] math_tools.f90(54,14)
  -> EXTERN: (74,5) for_alloc_allocatable
  -> EXTERN: (74,5) for_check_mult_overflow64
  -> EXTERN: (75,5) for_alloc_allocatable
  -> EXTERN: (75,5) for_check_mult_overflow64
  -> EXTERN: (78,13) dpotrf_
  -> EXTERN: (78,13) __resetsp_inlined
  -> EXTERN: (78,13) __getsp_inlined
  -> EXTERN: (78,29) _alloca
  -> EXTERN: (80,13) __resetsp_inlined
  -> EXTERN: (80,13) dgetrf_
  -> EXTERN: (80,13) __getsp_inlined
  -> EXTERN: (80,26) _alloca
  -> EXTERN: (87,8) for_write_seq_lis_xmit
  -> EXTERN: (87,8) for_write_seq_lis
  -> EXTERN: (88,8) for_stop_core
  -> EXTERN: (92,16) dpotri_
  -> EXTERN: (92,16) __resetsp_inlined
  -> EXTERN: (92,16) __getsp_inlined
  -> EXTERN: (92,32) _alloca
  -> EXTERN: (94,16) __resetsp_inlined
  -> EXTERN: (94,16) dgetri_
  -> EXTERN: (94,16) __getsp_inlined
  -> EXTERN: (94,26) _alloca
  -> EXTERN: (102,11) for_write_seq_lis
  -> EXTERN: (102,11) for_write_seq_lis_xmit
  -> EXTERN: (103,11) for_stop_core
  -> EXTERN: (116,5) for_dealloc_allocatable
  -> EXTERN: (117,5) for_dealloc_allocatable
  -> EXTERN: (119,3) for_dealloc_allocatable
  -> EXTERN: (119,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(78,29)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(78,29)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(78,29)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (78:29) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(78,29)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(78,29)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(78,29)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(78,29)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(78,29)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (78:29) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(78,29)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(78,29)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(78,29)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(78,29)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference at (78:29) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(78,29)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(78,29)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(78,29)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(78,29)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(78,29)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (78:29) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(78,29)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(80,26)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(80,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(80,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (80:26) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(80,26)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(80,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(80,26)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(80,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(80,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (80:26) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(80,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(80,26)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(80,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(80,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference at (80:26) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(80,26)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(80,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(80,26)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(80,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(80,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (80:26) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(80,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(92,32)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(92,32)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(92,32)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (92:32) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(92,32)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(92,32)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(92,32)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(92,32)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(92,32)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (92:32) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(92,32)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(92,32)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(92,32)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(92,32)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference at (92:32) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(92,32)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(92,32)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(92,32)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(92,32)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(92,32)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (92:32) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(92,32)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(94,26)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(94,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(94,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (94:26) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(94,26)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(94,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(94,26)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(94,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(94,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (94:26) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(94,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(94,26)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(94,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(94,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference at (94:26) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(94,26)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(94,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(94,26)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(94,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(94,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (94:26) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(94,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(109,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(110,11)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(110,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(j,i) has aligned access   [ math_tools.f90(111,14) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(i,j)>, stride is unknown to compiler   [ math_tools.f90(111,14) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(110,11)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(109,8)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive   [ math_tools.f90(110,11) ]

   LOOP BEGIN at math_tools.f90(110,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(i,j)>, stride is unknown to compiler   [ math_tools.f90(111,14) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(j,i)>, stride is unknown to compiler   [ math_tools.f90(111,14) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(110,11)
   <Remainder>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(65,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(64,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(54,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_invert_matrix_dp_] math_tools.f90:54

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     734
            Global    :     235
            Local     :     499
        Regenerable   :      95
        Spilled       :      50
        
    Routine stack
        Variables     :     289 bytes*
            Reads     :      25 [1.20e+01 ~ 0.7%]
            Writes    :      47 [3.18e+01 ~ 2.0%]
        Spills        :     360 bytes*
            Reads     :     134 [1.60e+01 ~ 1.0%]
            Writes    :      90 [1.16e+01 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::INVERT_MATRIX_SP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::INVERT_MATRIX_SP) [4/30=13.3%] math_tools.f90(165,14)
  -> EXTERN: (177,5) for_alloc_allocatable
  -> EXTERN: (177,5) for_check_mult_overflow64
  -> EXTERN: (178,5) for_alloc_allocatable
  -> EXTERN: (178,5) for_check_mult_overflow64
  -> EXTERN: (180,10) __resetsp_inlined
  -> EXTERN: (180,10) sgetrf_
  -> EXTERN: (180,10) __getsp_inlined
  -> EXTERN: (180,23) _alloca
  -> EXTERN: (182,8) for_write_seq_lis
  -> EXTERN: (182,8) for_write_seq_lis_xmit
  -> EXTERN: (183,8) for_stop_core
  -> EXTERN: (186,13) __resetsp_inlined
  -> EXTERN: (186,13) sgetri_
  -> EXTERN: (186,13) __getsp_inlined
  -> EXTERN: (186,23) _alloca
  -> EXTERN: (189,11) for_write_seq_lis
  -> EXTERN: (189,11) for_write_seq_lis_xmit
  -> EXTERN: (190,11) for_stop_core
  -> EXTERN: (195,5) for_dealloc_allocatable
  -> EXTERN: (196,5) for_dealloc_allocatable
  -> EXTERN: (198,3) for_dealloc_allocatable
  -> EXTERN: (198,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(180,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(180,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at math_tools.f90(180,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (180:23) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 4.760 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(180,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(180,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(180,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (180:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 18.500 
   remark #15478: estimated potential speedup: 0.210 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(180,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference at (180:23) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.081
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 9.250 
      remark #15478: estimated potential speedup: 0.430 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(180,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(180,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(180,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at math_tools.f90(180,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference at (180:23) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 4.760 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(180,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(180,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(180,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (180:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 18.500 
   remark #15478: estimated potential speedup: 0.210 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(180,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference at (180:23) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.083
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.440 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(180,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(186,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(186,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at math_tools.f90(186,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (186:23) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 4.760 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(186,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(186,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(186,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (186:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 18.500 
   remark #15478: estimated potential speedup: 0.210 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(186,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference at (186:23) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.081
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 9.250 
      remark #15478: estimated potential speedup: 0.430 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(186,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(186,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(186,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at math_tools.f90(186,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference at (186:23) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 4.760 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(186,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(186,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(186,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (186:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 18.500 
   remark #15478: estimated potential speedup: 0.210 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(186,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference at (186:23) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.083
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.440 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(186,23)
   <Remainder>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(172,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(171,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(165,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_invert_matrix_sp_] math_tools.f90:165

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     433
            Global    :     129
            Local     :     304
        Regenerable   :      84
        Spilled       :      32
        
    Routine stack
        Variables     :     288 bytes*
            Reads     :      15 [1.48e+01 ~ 1.2%]
            Writes    :      39 [3.14e+01 ~ 2.6%]
        Spills        :     184 bytes*
            Reads     :      41 [2.70e+01 ~ 2.3%]
            Writes    :      34 [1.28e+01 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::COMPUTE_PSEUDO_INVERSE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::COMPUTE_PSEUDO_INVERSE) [5/30=16.7%] math_tools.f90(200,14)
  -> EXTERN: (216,5) for_alloc_allocatable
  -> EXTERN: (216,5) for_check_mult_overflow64
  -> EXTERN: (216,5) for_alloc_allocatable
  -> EXTERN: (216,5) for_check_mult_overflow64
  -> EXTERN: (216,5) for_alloc_allocatable
  -> EXTERN: (216,5) for_check_mult_overflow64
  -> EXTERN: (216,5) for_alloc_allocatable
  -> EXTERN: (216,5) for_check_mult_overflow64
  -> EXTERN: (216,5) for_alloc_allocatable
  -> EXTERN: (216,5) for_check_mult_overflow64
  -> EXTERN: (217,5) for_realloc_lhs
  -> EXTERN: (218,10) dgesvd_
  -> EXTERN: (219,20) for_write_seq_lis
  -> EXTERN: (219,20) for_write_seq_lis_xmit
  -> EXTERN: (236,5) __resetsp_inlined
  -> EXTERN: (236,5) __getsp_inlined
  -> EXTERN: (236,14) _alloca
  -> EXTERN: (238,5) for_dealloc_allocatable
  -> EXTERN: (238,5) for_dealloc_allocatable
  -> EXTERN: (238,5) for_dealloc_allocatable
  -> EXTERN: (238,5) for_dealloc_allocatable
  -> EXTERN: (238,5) for_dealloc_allocatable
  -> EXTERN: (240,3) for_dealloc_allocatable
  -> EXTERN: (240,3) for_dealloc_allocatable
  -> EXTERN: (240,3) for_dealloc_allocatable
  -> EXTERN: (240,3) for_dealloc_allocatable
  -> EXTERN: (240,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(217,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(217,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(217,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference ATMP(:,:) has aligned access
      remark #15388: vectorization support: reference a(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(217,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(217,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(217,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(217,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(217,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference ATMP(:,:) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(217,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(223,8)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between S(1) (223:22) and S(i) (225:11)
   remark #17106: parallel dependence: assumed ANTI dependence between S(1) (223:22) and S(i) (227:11)
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <S(i)>, stride is -1   [ math_tools.f90(223,16) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <S(i)>, stride is -1   [ math_tools.f90(225,11) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <S(i)>, stride is -1   [ math_tools.f90(225,23) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <S(i)>, stride is -1   [ math_tools.f90(225,11) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <S(i)>, stride is -1   [ math_tools.f90(227,11) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <S(i)>, stride is -1   [ math_tools.f90(227,11) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.049
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 4 
   remark #15453: unmasked strided stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 52 
   remark #15477: vector cost: 41.000 
   remark #15478: estimated potential speedup: 1.260 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(223,8)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at math_tools.f90(238,5)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(233,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <VT(i,:)>, stride is unknown to compiler
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(i,:)>, stride is unknown to compiler   [ math_tools.f90(233,18) ]
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.136
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 6 
      remark #15477: vector cost: 5.500 
      remark #15478: estimated potential speedup: 1.080 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(233,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(236,14)
   remark #25420: Collapsed with loop at line 236 
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (236:14) and at (236:14)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (236:14) and at (236:14)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(236,14)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (236:14) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.660 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at math_tools.f90(236,14)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at math_tools.f90(236,14)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(236,14)
   remark #25444: Loopnest Interchanged: ( 1 2 3 ) --> ( 2 1 3 )
   remark #17100: PERMUTED LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ } private={ } firstprivate={ ? ? ? ? VT U ? ? ? ? } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(236,14)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at math_tools.f90(236,14)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at math_tools.f90(236,14)
            remark #25442: blocked by 125   (pre-vector) 
            remark #25440: unrolled and jammed by 4   (pre-vector) 
            remark #15542: loop was not vectorized: inner loop was already vectorized
            remark #25015: Estimate of max trip count of loop=125

            LOOP BEGIN at math_tools.f90(236,14)
               remark #25442: blocked by 125   (pre-vector) 
               remark #25440: unrolled and jammed by 4   (pre-vector) 
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=125

               LOOP BEGIN at math_tools.f90(236,14)
               <Peeled loop for vectorization>
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
                  remark #25442: blocked by 128   (pre-vector) 
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15305: vectorization support: vector length 2
                  remark #15309: vectorization support: normalized vectorization overhead 0.448
                  remark #15300: LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 5 
                  remark #15449: unmasked aligned unit stride stores: 8 
                  remark #15450: unmasked unaligned unit stride loads: 5 
                  remark #15451: unmasked unaligned unit stride stores: 8 
                  remark #15452: unmasked strided loads: 16 
                  remark #15475: --- begin vector cost summary ---
                  remark #15476: scalar cost: 142 
                  remark #15477: vector cost: 90.500 
                  remark #15478: estimated potential speedup: 1.540 
                  remark #15488: --- end vector cost summary ---
                  remark #25456: Number of Array Refs Scalar Replaced In Loop: 24
                  remark #25015: Estimate of max trip count of loop=64
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
               <Alternate Alignment Vectorized Loop>
                  remark #25456: Number of Array Refs Scalar Replaced In Loop: 24
                  remark #25015: Estimate of max trip count of loop=64
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
               <Remainder loop for vectorization>
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END
            LOOP END

            LOOP BEGIN at math_tools.f90(236,14)
            <Remainder>
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=125

               LOOP BEGIN at math_tools.f90(236,14)
               <Peeled loop for vectorization>
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15305: vectorization support: vector length 2
                  remark #15309: vectorization support: normalized vectorization overhead 0.550
                  remark #15300: LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 4 
                  remark #15449: unmasked aligned unit stride stores: 4 
                  remark #15452: unmasked strided loads: 4 
                  remark #15475: --- begin vector cost summary ---
                  remark #15476: scalar cost: 36 
                  remark #15477: vector cost: 20.000 
                  remark #15478: estimated potential speedup: 1.760 
                  remark #15488: --- end vector cost summary ---
                  remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
                  remark #25015: Estimate of max trip count of loop=64
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
               <Alternate Alignment Vectorized Loop>
                  remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
                  remark #25015: Estimate of max trip count of loop=64
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
               <Remainder loop for vectorization>
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END
            LOOP END
         LOOP END

         LOOP BEGIN at math_tools.f90(236,14)
         <Remainder>
            remark #15542: loop was not vectorized: inner loop was already vectorized
            remark #25015: Estimate of max trip count of loop=125

            LOOP BEGIN at math_tools.f90(236,14)
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=125

               LOOP BEGIN at math_tools.f90(236,14)
               <Peeled loop for vectorization>
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15305: vectorization support: vector length 2
                  remark #15399: vectorization support: unroll factor set to 4
                  remark #15309: vectorization support: normalized vectorization overhead 0.300
                  remark #15300: LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15452: unmasked strided loads: 1 
                  remark #15475: --- begin vector cost summary ---
                  remark #15476: scalar cost: 9 
                  remark #15477: vector cost: 5.000 
                  remark #15478: estimated potential speedup: 1.680 
                  remark #15488: --- end vector cost summary ---
                  remark #25015: Estimate of max trip count of loop=16
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
               <Remainder loop for vectorization>
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
                  remark #15305: vectorization support: vector length 2
                  remark #15309: vectorization support: normalized vectorization overhead 0.857
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(236,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(236,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(236,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference across(:,:) has aligned access
      remark #15388: vectorization support: reference at (236:5) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(236,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(236,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(236,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(236,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(236,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (236:5) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <across(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(236,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(236,14)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(236,14)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between at (236:14) and at (236:14)
      remark #17106: parallel dependence: assumed OUTPUT dependence between at (236:14) and at (236:14)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at math_tools.f90(236,14)
         remark #17107: loop was not parallelized: inner loop
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at math_tools.f90(236,14)
            remark #25442: blocked by 125   (pre-vector) 
            remark #25440: unrolled and jammed by 4   (pre-vector) 
            remark #15542: loop was not vectorized: inner loop was already vectorized
            remark #25015: Estimate of max trip count of loop=125

            LOOP BEGIN at math_tools.f90(236,14)
               remark #25442: blocked by 125   (pre-vector) 
               remark #25440: unrolled and jammed by 4   (pre-vector) 
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=125

               LOOP BEGIN at math_tools.f90(236,14)
               <Peeled loop for vectorization>
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
                  remark #25442: blocked by 128   (pre-vector) 
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15389: vectorization support: reference at (236:14) has unaligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15305: vectorization support: vector length 2
                  remark #15309: vectorization support: normalized vectorization overhead 0.448
                  remark #15300: LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 5 
                  remark #15449: unmasked aligned unit stride stores: 8 
                  remark #15450: unmasked unaligned unit stride loads: 5 
                  remark #15451: unmasked unaligned unit stride stores: 8 
                  remark #15452: unmasked strided loads: 16 
                  remark #15475: --- begin vector cost summary ---
                  remark #15476: scalar cost: 142 
                  remark #15477: vector cost: 90.500 
                  remark #15478: estimated potential speedup: 1.540 
                  remark #15488: --- end vector cost summary ---
                  remark #25456: Number of Array Refs Scalar Replaced In Loop: 24
                  remark #25015: Estimate of max trip count of loop=64
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
               <Alternate Alignment Vectorized Loop>
                  remark #25456: Number of Array Refs Scalar Replaced In Loop: 24
                  remark #25015: Estimate of max trip count of loop=64
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
               <Remainder loop for vectorization>
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END
            LOOP END

            LOOP BEGIN at math_tools.f90(236,14)
            <Remainder>
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=125

               LOOP BEGIN at math_tools.f90(236,14)
               <Peeled loop for vectorization>
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15305: vectorization support: vector length 2
                  remark #15309: vectorization support: normalized vectorization overhead 0.550
                  remark #15300: LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 4 
                  remark #15449: unmasked aligned unit stride stores: 4 
                  remark #15452: unmasked strided loads: 4 
                  remark #15475: --- begin vector cost summary ---
                  remark #15476: scalar cost: 36 
                  remark #15477: vector cost: 20.000 
                  remark #15478: estimated potential speedup: 1.760 
                  remark #15488: --- end vector cost summary ---
                  remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
                  remark #25015: Estimate of max trip count of loop=64
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
               <Alternate Alignment Vectorized Loop>
                  remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
                  remark #25015: Estimate of max trip count of loop=64
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
               <Remainder loop for vectorization>
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END
            LOOP END
         LOOP END

         LOOP BEGIN at math_tools.f90(236,14)
         <Remainder>
            remark #15542: loop was not vectorized: inner loop was already vectorized
            remark #25015: Estimate of max trip count of loop=125

            LOOP BEGIN at math_tools.f90(236,14)
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=125

               LOOP BEGIN at math_tools.f90(236,14)
               <Peeled loop for vectorization>
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15328: vectorization support: non-unit strided load was emulated for the variable <VT(:,:)>, stride is unknown to compiler
                  remark #15305: vectorization support: vector length 2
                  remark #15399: vectorization support: unroll factor set to 4
                  remark #15309: vectorization support: normalized vectorization overhead 0.300
                  remark #15300: LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15452: unmasked strided loads: 1 
                  remark #15475: --- begin vector cost summary ---
                  remark #15476: scalar cost: 9 
                  remark #15477: vector cost: 5.000 
                  remark #15478: estimated potential speedup: 1.680 
                  remark #15488: --- end vector cost summary ---
                  remark #25015: Estimate of max trip count of loop=16
               LOOP END

               LOOP BEGIN at math_tools.f90(236,14)
               <Remainder loop for vectorization>
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15388: vectorization support: reference at (236:14) has aligned access
                  remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
                  remark #15305: vectorization support: vector length 2
                  remark #15309: vectorization support: normalized vectorization overhead 0.857
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(236,14):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { unknown }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
math_tools.f90(236,14):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { unknown }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
math_tools.f90(236,14):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { unknown }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
math_tools.f90(236,14):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { unknown }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
math_tools.f90(236,14):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { unknown }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
math_tools.f90(236,14):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { unknown }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
math_tools.f90(236,14):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { unknown }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
math_tools.f90(236,14):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { unknown }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
math_tools.f90(208,59):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(208,56):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(208,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(207,56):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(207,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(236,14):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(236,14):remark #34026: call to memset implemented as a call to optimized library version
math_tools.f90(200,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_compute_pseudo_inverse_] math_tools.f90:200

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1917
            Global    :     602
            Local     :    1315
        Regenerable   :     152
        Spilled       :     249
        
    Routine stack
        Variables     :     764 bytes*
            Reads     :      48 [5.30e+01 ~ 0.0%]
            Writes    :     118 [9.20e+01 ~ 0.1%]
        Spills        :    2256 bytes*
            Reads     :     492 [1.46e+04 ~ 9.8%]
            Writes    :     313 [3.24e+03 ~ 2.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::COMPUTE_PSEUDO_INVERSE2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::COMPUTE_PSEUDO_INVERSE2) [6/30=20.0%] math_tools.f90(242,14)
  -> EXTERN: (257,5) for_alloc_allocatable
  -> EXTERN: (257,5) for_check_mult_overflow64
  -> EXTERN: (257,5) for_alloc_allocatable
  -> EXTERN: (257,5) for_check_mult_overflow64
  -> EXTERN: (257,5) for_alloc_allocatable
  -> EXTERN: (257,5) for_check_mult_overflow64
  -> EXTERN: (257,5) for_alloc_allocatable
  -> EXTERN: (257,5) for_check_mult_overflow64
  -> EXTERN: (257,5) for_alloc_allocatable
  -> EXTERN: (257,5) for_check_mult_overflow64
  -> EXTERN: (258,5) for_realloc_lhs
  -> EXTERN: (259,10) dgeqrf_
  -> EXTERN: (260,20) for_write_seq_lis
  -> EXTERN: (260,20) for_write_seq_lis_xmit
  -> EXTERN: (281,10) __resetsp_inlined
  -> EXTERN: (281,10) dtrtrs_
  -> EXTERN: (281,10) __getsp_inlined
  -> EXTERN: (281,44) _alloca
  -> EXTERN: (282,20) for_write_seq_lis
  -> EXTERN: (282,20) for_write_seq_lis_xmit
  -> EXTERN: (285,10) __resetsp_inlined
  -> EXTERN: (285,10) dtrtrs_
  -> EXTERN: (285,10) __getsp_inlined
  -> EXTERN: (285,44) _alloca
  -> EXTERN: (286,20) for_write_seq_lis
  -> EXTERN: (286,20) for_write_seq_lis_xmit
  -> EXTERN: (296,5) for_dealloc_allocatable
  -> EXTERN: (296,5) for_dealloc_allocatable
  -> EXTERN: (296,5) for_dealloc_allocatable
  -> EXTERN: (296,5) for_dealloc_allocatable
  -> EXTERN: (296,5) for_dealloc_allocatable
  -> EXTERN: (298,3) for_dealloc_allocatable
  -> EXTERN: (298,3) for_dealloc_allocatable
  -> EXTERN: (298,3) for_dealloc_allocatable
  -> EXTERN: (298,3) for_dealloc_allocatable
  -> EXTERN: (298,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(258,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(258,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(258,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference ATMP(:,:) has aligned access
      remark #15388: vectorization support: reference a(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(258,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(258,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(258,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(258,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(258,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference ATMP(:,:) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(258,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(263,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(263,5)
      remark #25408: memset generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between R(:,:) (263:5) and R(:,:) (263:5)
      remark #17106: parallel dependence: assumed OUTPUT dependence between R(:,:) (263:5) and R(:,:) (263:5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=1

      LOOP BEGIN at math_tools.f90(263,5)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference R(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.300
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.450 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at math_tools.f90(263,5)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=12
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(264,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between R(:,i) (265:8) and R(:,i) (265:8)
   remark #17106: parallel dependence: assumed OUTPUT dependence between R(:,i) (265:8) and R(:,i) (265:8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(265,8)
      remark #25399: memcopy generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between R(:,i) (265:8) and R(:,i) (265:8)
      remark #17106: parallel dependence: assumed OUTPUT dependence between R(:,i) (265:8) and R(:,i) (265:8)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at math_tools.f90(265,8)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at math_tools.f90(265,8)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference R(:,i) has aligned access
         remark #15388: vectorization support: reference ATMP(:,i) has aligned access
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 4.667
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 1.500 
         remark #15478: estimated potential speedup: 1.290 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=6
      LOOP END

      LOOP BEGIN at math_tools.f90(265,8)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=6
      LOOP END

      LOOP BEGIN at math_tools.f90(265,8)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=12
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(269,5)
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between MASK(:) (269:5) and MASK(:) (269:5)
   remark #17106: parallel dependence: assumed OUTPUT dependence between MASK(:) (269:5) and MASK(:) (269:5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(269,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference MASK(:) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 2.660 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=6
   LOOP END

   LOOP BEGIN at math_tools.f90(269,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=24
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(270,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between R(i,:) (273:11) and R(:,i) (274:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between R(:,i) (274:11) and R(i,:) (273:11)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(273,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <R(i,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(273,11)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at math_tools.f90(274,11)
      remark #25408: memset generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between R(:,i) (274:11) and R(:,i) (274:11)
      remark #17106: parallel dependence: assumed OUTPUT dependence between R(:,i) (274:11) and R(:,i) (274:11)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=1

      LOOP BEGIN at math_tools.f90(274,11)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference R(:,i) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.300
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.450 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at math_tools.f90(274,11)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=12
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(280,5)
<Multiversioned v1>
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(280,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(280,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference across(:,:) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(280,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(280,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <across(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(280,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <across(:,:)>, stride is unknown to compiler
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(280,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(281,44)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(281,44)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(281,44)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (281:44) has aligned access
      remark #15388: vectorization support: reference across(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(281,44)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(281,44)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(281,44)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(281,44)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(281,44)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (281:44) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <across(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(281,44)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(281,44)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(281,44)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(281,44)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference across(:,:) has aligned access
      remark #15388: vectorization support: reference at (281:44) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(281,44)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(281,44)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(281,44)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(281,44)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(281,44)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (281:44) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <across(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(281,44)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(285,44)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(285,44)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(285,44)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (285:44) has aligned access
      remark #15388: vectorization support: reference across(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(285,44)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(285,44)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(285,44)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(285,44)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(285,44)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (285:44) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <across(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(285,44)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(285,44)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(285,44)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(285,44)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference across(:,:) has aligned access
      remark #15388: vectorization support: reference at (285:44) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(285,44)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(285,44)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(285,44)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(285,44)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(285,44)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (285:44) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <across(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(285,44)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(292,11)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between across(i,:) (291:11) and across(:,i) (292:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between across(:,i) (292:11) and across(i,:) (291:11)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(291,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <across(i,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(291,11)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at math_tools.f90(292,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <across(:,i)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(292,11)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(250,56):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(249,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(248,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(250,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(249,55):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(263,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(263,5):remark #34026: call to memset implemented as a call to optimized library version
math_tools.f90(265,8):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(265,8):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(265,8):remark #34026: call to memcpy implemented as a call to optimized library version
math_tools.f90(269,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(269,5):remark #34026: call to memset implemented as a call to optimized library version
math_tools.f90(274,11):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(274,11):remark #34026: call to memset implemented as a call to optimized library version
math_tools.f90(242,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_compute_pseudo_inverse2_] math_tools.f90:242

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm9]
        
    Routine temporaries
        Total         :     934
            Global    :     275
            Local     :     659
        Regenerable   :     136
        Spilled       :      64
        
    Routine stack
        Variables     :     600 bytes*
            Reads     :      55 [5.16e+01 ~ 0.9%]
            Writes    :      98 [9.20e+01 ~ 1.6%]
        Spills        :     448 bytes*
            Reads     :     110 [1.56e+02 ~ 2.7%]
            Writes    :      90 [7.63e+01 ~ 1.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::INVERT_MATRIX_WITH_MASK_DPC

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::INVERT_MATRIX_WITH_MASK_DPC) [7/30=23.3%] math_tools.f90(301,14)
  -> EXTERN: (314,5) for_alloc_allocatable
  -> EXTERN: (314,5) for_check_mult_overflow64
  -> EXTERN: (315,5) for_alloc_allocatable
  -> EXTERN: (315,5) for_check_mult_overflow64
  -> EXTERN: (316,5) for_alloc_allocatable
  -> EXTERN: (316,5) for_check_mult_overflow64
  -> EXTERN: (326,10) __resetsp_inlined
  -> EXTERN: (326,10) zgetrf_
  -> EXTERN: (326,10) __getsp_inlined
  -> EXTERN: (326,23) _alloca
  -> EXTERN: (328,8) for_write_seq_lis
  -> EXTERN: (328,8) for_write_seq_lis_xmit
  -> EXTERN: (329,8) for_stop_core
  -> EXTERN: (332,13) __resetsp_inlined
  -> EXTERN: (332,13) zgetri_
  -> EXTERN: (332,13) __getsp_inlined
  -> EXTERN: (332,23) _alloca
  -> EXTERN: (335,11) for_write_seq_lis
  -> EXTERN: (335,11) for_write_seq_lis_xmit
  -> EXTERN: (336,11) for_stop_core
  -> EXTERN: (347,5) for_dealloc_allocatable
  -> EXTERN: (348,5) for_dealloc_allocatable
  -> EXTERN: (349,5) for_dealloc_allocatable
  -> EXTERN: (351,3) for_dealloc_allocatable
  -> EXTERN: (351,3) for_dealloc_allocatable
  -> EXTERN: (351,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(318,5)
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between MASK(:) (318:5) and MASK(:) (318:5)
   remark #17106: parallel dependence: assumed OUTPUT dependence between MASK(:) (318:5) and MASK(:) (318:5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(318,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference MASK(:) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 2.660 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=6
   LOOP END

   LOOP BEGIN at math_tools.f90(318,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=24
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(319,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference MASK(i) has aligned access   [ math_tools.f90(321,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(i,i)>, stride is unknown to compiler   [ math_tools.f90(320,16) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(i,i)>, stride is unknown to compiler   [ math_tools.f90(322,11) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(i,i)>, stride is unknown to compiler   [ math_tools.f90(322,11) ]
   remark #15305: vectorization support: vector length 1
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.014
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 1 
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 126 
   remark #15477: vector cost: 148.000 
   remark #15478: estimated potential speedup: 0.850 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at math_tools.f90(319,5)
<Remainder>
LOOP END

LOOP BEGIN at math_tools.f90(326,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (326:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(326,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.740 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(326,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(326,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (326:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(326,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.750 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(326,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(326,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (326:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(326,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 2.320 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(326,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(326,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (326:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(326,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 5.000 
      remark #15478: estimated potential speedup: 1.400 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(326,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(332,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (332:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(332,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.740 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(332,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(332,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (332:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(332,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.750 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(332,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(332,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (332:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(332,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 2.320 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(332,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(332,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (332:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(332,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 5.000 
      remark #15478: estimated potential speedup: 1.400 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(332,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(343,11)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(i,i)>, masked, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15399: vectorization support: unroll factor set to 4
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 24 
   remark #15477: vector cost: 33.000 
   remark #15478: estimated potential speedup: 0.720 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at math_tools.f90(343,11)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(309,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(308,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(307,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(318,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(318,5):remark #34026: call to memset implemented as a call to optimized library version
math_tools.f90(301,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_invert_matrix_with_mask_dpc_] math_tools.f90:301

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   21[ rax rdx rcx rbx rsi rdi r8-r15 mm0-mm2 zmm0-zmm3]
        
    Routine temporaries
        Total         :     604
            Global    :     182
            Local     :     422
        Regenerable   :      98
        Spilled       :      24
        
    Routine stack
        Variables     :     376 bytes*
            Reads     :      32 [3.77e+01 ~ 3.2%]
            Writes    :      62 [6.12e+01 ~ 5.2%]
        Spills        :     152 bytes*
            Reads     :      48 [2.66e+01 ~ 2.3%]
            Writes    :      36 [8.78e+00 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::INVERT_MATRIX_WITH_MASK_DP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::INVERT_MATRIX_WITH_MASK_DP) [8/30=26.7%] math_tools.f90(354,14)
  -> EXTERN: (367,5) for_alloc_allocatable
  -> EXTERN: (367,5) for_check_mult_overflow64
  -> EXTERN: (368,5) for_alloc_allocatable
  -> EXTERN: (368,5) for_check_mult_overflow64
  -> EXTERN: (369,5) for_alloc_allocatable
  -> EXTERN: (369,5) for_check_mult_overflow64
  -> EXTERN: (379,10) __resetsp_inlined
  -> EXTERN: (379,10) dgetrf_
  -> EXTERN: (379,10) __getsp_inlined
  -> EXTERN: (379,23) _alloca
  -> EXTERN: (381,8) for_write_seq_lis
  -> EXTERN: (381,8) for_write_seq_lis_xmit
  -> EXTERN: (382,8) for_stop_core
  -> EXTERN: (385,13) __resetsp_inlined
  -> EXTERN: (385,13) dgetri_
  -> EXTERN: (385,13) __getsp_inlined
  -> EXTERN: (385,23) _alloca
  -> EXTERN: (388,11) for_write_seq_lis
  -> EXTERN: (388,11) for_write_seq_lis_xmit
  -> EXTERN: (389,11) for_stop_core
  -> EXTERN: (400,5) for_dealloc_allocatable
  -> EXTERN: (401,5) for_dealloc_allocatable
  -> EXTERN: (402,5) for_dealloc_allocatable
  -> EXTERN: (404,3) for_dealloc_allocatable
  -> EXTERN: (404,3) for_dealloc_allocatable
  -> EXTERN: (404,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(371,5)
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between MASK(:) (371:5) and MASK(:) (371:5)
   remark #17106: parallel dependence: assumed OUTPUT dependence between MASK(:) (371:5) and MASK(:) (371:5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(371,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference MASK(:) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 2.660 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=6
   LOOP END

   LOOP BEGIN at math_tools.f90(371,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=24
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(372,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference MASK(i) has aligned access   [ math_tools.f90(374,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(i,i)>, stride is unknown to compiler   [ math_tools.f90(373,16) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(i,i)>, stride is unknown to compiler   [ math_tools.f90(375,11) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(i,i)>, stride is unknown to compiler   [ math_tools.f90(375,11) ]
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.014
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 1 
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 28 
   remark #15477: vector cost: 35.500 
   remark #15478: estimated potential speedup: 0.790 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at math_tools.f90(372,5)
<Remainder>
LOOP END

LOOP BEGIN at math_tools.f90(379,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(379,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(379,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (379:23) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(379,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(379,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(379,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(379,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(379,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (379:23) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(379,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(379,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(379,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(379,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference at (379:23) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(379,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(379,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(379,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(379,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(379,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (379:23) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(379,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(385,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(385,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(385,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (385:23) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(385,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(385,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(385,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(385,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(385,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (385:23) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(385,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(385,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(385,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(385,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference at (385:23) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(385,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(385,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(385,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(385,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(385,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (385:23) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(385,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(396,11)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(i,i)>, masked, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 21 
   remark #15477: vector cost: 48.500 
   remark #15478: estimated potential speedup: 0.430 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at math_tools.f90(396,11)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(362,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(361,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(360,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(371,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(371,5):remark #34026: call to memset implemented as a call to optimized library version
math_tools.f90(354,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_invert_matrix_with_mask_dp_] math_tools.f90:354

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     552
            Global    :     149
            Local     :     403
        Regenerable   :      98
        Spilled       :      18
        
    Routine stack
        Variables     :     368 bytes*
            Reads     :      26 [2.48e+01 ~ 1.3%]
            Writes    :      56 [4.84e+01 ~ 2.5%]
        Spills        :     104 bytes*
            Reads     :      32 [7.02e+00 ~ 0.4%]
            Writes    :      26 [7.02e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::INVERT_MATRIX_WITH_MASK_SP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::INVERT_MATRIX_WITH_MASK_SP) [9/30=30.0%] math_tools.f90(406,14)
  -> EXTERN: (419,5) for_alloc_allocatable
  -> EXTERN: (419,5) for_check_mult_overflow64
  -> EXTERN: (420,5) for_alloc_allocatable
  -> EXTERN: (420,5) for_check_mult_overflow64
  -> EXTERN: (421,5) for_alloc_allocatable
  -> EXTERN: (421,5) for_check_mult_overflow64
  -> EXTERN: (431,10) __resetsp_inlined
  -> EXTERN: (431,10) sgetrf_
  -> EXTERN: (431,10) __getsp_inlined
  -> EXTERN: (431,23) _alloca
  -> EXTERN: (433,8) for_write_seq_lis
  -> EXTERN: (433,8) for_write_seq_lis_xmit
  -> EXTERN: (434,8) for_stop_core
  -> EXTERN: (437,13) __resetsp_inlined
  -> EXTERN: (437,13) sgetri_
  -> EXTERN: (437,13) __getsp_inlined
  -> EXTERN: (437,23) _alloca
  -> EXTERN: (440,11) for_write_seq_lis
  -> EXTERN: (440,11) for_write_seq_lis_xmit
  -> EXTERN: (441,11) for_stop_core
  -> EXTERN: (452,5) for_dealloc_allocatable
  -> EXTERN: (453,5) for_dealloc_allocatable
  -> EXTERN: (454,5) for_dealloc_allocatable
  -> EXTERN: (456,3) for_dealloc_allocatable
  -> EXTERN: (456,3) for_dealloc_allocatable
  -> EXTERN: (456,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(423,5)
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between MASK(:) (423:5) and MASK(:) (423:5)
   remark #17106: parallel dependence: assumed OUTPUT dependence between MASK(:) (423:5) and MASK(:) (423:5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(423,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference MASK(:) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 2.660 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=6
   LOOP END

   LOOP BEGIN at math_tools.f90(423,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=24
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(424,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference MASK(i) has aligned access   [ math_tools.f90(426,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(i,i)>, stride is unknown to compiler   [ math_tools.f90(425,16) ]
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(i,i)>, stride is unknown to compiler   [ math_tools.f90(427,11) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(i,i)>, stride is unknown to compiler   [ math_tools.f90(427,11) ]
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.011
   remark #15452: unmasked strided loads: 2 
   remark #15453: unmasked strided stores: 1 
   remark #15457: masked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 27 
   remark #15477: vector cost: 46.250 
   remark #15478: estimated potential speedup: 0.580 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at math_tools.f90(424,5)
<Remainder>
LOOP END

LOOP BEGIN at math_tools.f90(431,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(431,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at math_tools.f90(431,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (431:23) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 4.760 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(431,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(431,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(431,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (431:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 18.500 
   remark #15478: estimated potential speedup: 0.210 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(431,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference at (431:23) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.081
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 9.250 
      remark #15478: estimated potential speedup: 0.430 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(431,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(431,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(431,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at math_tools.f90(431,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference at (431:23) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 4.760 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(431,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(431,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(431,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (431:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 18.500 
   remark #15478: estimated potential speedup: 0.210 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(431,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference at (431:23) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.083
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.440 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(431,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(437,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(437,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at math_tools.f90(437,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (437:23) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 4.760 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(437,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(437,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(437,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <at (437:23)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 18.500 
   remark #15478: estimated potential speedup: 0.210 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(437,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference at (437:23) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.081
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 9.250 
      remark #15478: estimated potential speedup: 0.430 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(437,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(437,23)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(437,23)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at math_tools.f90(437,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference at (437:23) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 4.760 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(437,23)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(437,23)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(437,23)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <at (437:23)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 18.500 
   remark #15478: estimated potential speedup: 0.210 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(437,23)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference at (437:23) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 0.083
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 9.000 
      remark #15478: estimated potential speedup: 0.440 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(437,23)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(448,11)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(i,i)>, masked, stride is unknown to compiler
   remark #15305: vectorization support: vector length 4
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 21 
   remark #15477: vector cost: 25.000 
   remark #15478: estimated potential speedup: 0.840 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at math_tools.f90(448,11)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(414,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(413,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(412,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(423,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(423,5):remark #34026: call to memset implemented as a call to optimized library version
math_tools.f90(406,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_invert_matrix_with_mask_sp_] math_tools.f90:406

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     581
            Global    :     172
            Local     :     409
        Regenerable   :      97
        Spilled       :      32
        
    Routine stack
        Variables     :     368 bytes*
            Reads     :      26 [2.48e+01 ~ 1.6%]
            Writes    :      56 [4.84e+01 ~ 3.2%]
        Spills        :     184 bytes*
            Reads     :      44 [2.69e+01 ~ 1.8%]
            Writes    :      36 [1.27e+01 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::GET_EIGENVALUES

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::GET_EIGENVALUES) [10/30=33.3%] math_tools.f90(503,14)
  -> EXTERN: (534,8) for_alloc_allocatable
  -> EXTERN: (534,8) for_check_mult_overflow64
  -> EXTERN: (535,8) for_alloc_allocatable
  -> EXTERN: (535,8) for_check_mult_overflow64
  -> EXTERN: (536,8) for_alloc_allocatable
  -> EXTERN: (536,8) for_check_mult_overflow64
  -> EXTERN: (537,8) for_realloc_lhs
  -> EXTERN: (538,13) __resetsp_inlined
  -> EXTERN: (538,13) dsyevd_
  -> EXTERN: (538,13) __getsp_inlined
  -> EXTERN: (538,47) _alloca
  -> EXTERN: (539,23) for_write_seq_lis
  -> EXTERN: (539,23) for_write_seq_lis_xmit
  -> EXTERN: (541,8) for_dealloc_allocatable
  -> EXTERN: (542,8) for_dealloc_allocatable
  -> EXTERN: (543,8) for_dealloc_allocatable
  -> EXTERN: (547,3) for_dealloc_allocatable
  -> EXTERN: (547,3) for_dealloc_allocatable
  -> EXTERN: (547,3) for_dealloc_allocatable
  -> EXTERN: (547,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(537,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(537,8)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(537,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference A_COPY(:,:) has aligned access
      remark #15388: vectorization support: reference a(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(537,8)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(537,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(537,8)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(537,8)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(537,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference A_COPY(:,:) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(537,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(538,47)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference at (538:47) has aligned access
   remark #15389: vectorization support: reference eigenvals(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.750
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 1.990 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(538,47)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(538,47)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference at (538:47) has aligned access
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <eigenvals(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(538,47)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at math_tools.f90(538,47)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference eigenvals(:) has aligned access
   remark #15388: vectorization support: reference at (538:47) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.640 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(538,47)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(538,47)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(538,47)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference at (538:47) has aligned access
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <eigenvals(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(538,47)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(510,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(512,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(511,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(511,53):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(503,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_get_eigenvalues_] math_tools.f90:503

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     573
            Global    :      81
            Local     :     492
        Regenerable   :      63
        Spilled       :       9
        
    Routine stack
        Variables     :     446 bytes*
            Reads     :      35 [1.08e+01 ~ 2.3%]
            Writes    :      72 [3.56e+01 ~ 7.6%]
        Spills        :      32 bytes*
            Reads     :       6 [3.47e+00 ~ 0.7%]
            Writes    :       6 [2.10e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::EIGEN_DECOMP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::EIGEN_DECOMP) [11/30=36.7%] math_tools.f90(549,14)
  -> EXTERN: (555,5) for_alloc_allocatable
  -> EXTERN: (555,5) for_check_mult_overflow64
  -> EXTERN: (555,5) for_alloc_allocatable
  -> EXTERN: (555,5) for_check_mult_overflow64
  -> EXTERN: (557,10) __resetsp_inlined
  -> EXTERN: (557,10) dsyevd_
  -> EXTERN: (557,10) __getsp_inlined
  -> EXTERN: (557,30) _alloca
  -> EXTERN: (557,47) _alloca
  -> EXTERN: (559,5) for_dealloc_allocatable
  -> EXTERN: (559,5) for_dealloc_allocatable
  -> EXTERN: (560,3) for_dealloc_allocatable
  -> EXTERN: (560,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(556,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(556,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(556,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference eigenvectors(:,:) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(556,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(556,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(556,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <eigenvectors(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(556,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <eigenvectors(:,:)>, stride is unknown to compiler
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(556,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(557,30)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(557,30)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(557,30)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (557:30) has aligned access
      remark #15388: vectorization support: reference eigenvectors(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(557,30)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(557,30)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(557,30)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(557,30)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(557,30)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (557:30) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <eigenvectors(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(557,30)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(557,47)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference at (557:47) has aligned access
   remark #15389: vectorization support: reference eigenvals(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.750
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 1.990 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(557,47)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(557,47)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference at (557:47) has aligned access
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <eigenvals(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(557,47)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at math_tools.f90(557,30)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(557,30)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(557,30)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference eigenvectors(:,:) has aligned access
      remark #15388: vectorization support: reference at (557:30) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(557,30)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(557,30)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(557,30)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(557,30)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(557,30)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (557:30) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <eigenvectors(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(557,30)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(557,47)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference eigenvals(:) has aligned access
   remark #15388: vectorization support: reference at (557:47) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.640 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(557,47)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(557,47)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(557,47)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference at (557:47) has aligned access
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <eigenvals(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(557,47)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(552,39):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(552,30):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(549,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_eigen_decomp_] math_tools.f90:549

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     368
            Global    :     110
            Local     :     258
        Regenerable   :      37
        Spilled       :      24
        
    Routine stack
        Variables     :     172 bytes*
            Reads     :      14 [1.40e+01 ~ 0.9%]
            Writes    :      33 [3.30e+01 ~ 2.2%]
        Spills        :     152 bytes*
            Reads     :      38 [3.38e+01 ~ 2.2%]
            Writes    :      28 [1.38e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::COMPUTE_HERMITIAN_ROOT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::COMPUTE_HERMITIAN_ROOT) [12/30=40.0%] math_tools.f90(562,14)
  -> EXTERN: (584,5) for_alloc_allocatable
  -> EXTERN: (584,5) for_check_mult_overflow64
  -> EXTERN: (585,5) for_alloc_allocatable
  -> EXTERN: (585,5) for_check_mult_overflow64
  -> EXTERN: (586,5) for_alloc_allocatable
  -> EXTERN: (586,5) for_check_mult_overflow64
  -> EXTERN: (587,5) for_alloc_allocatable
  -> EXTERN: (587,5) for_check_mult_overflow64
  -> EXTERN: (588,5) for_realloc_lhs
  -> EXTERN: (589,10) dsyevd_
  -> EXTERN: (599,21) pow
  -> EXTERN: (601,5) __resetsp_inlined
  -> EXTERN: (601,5) __getsp_inlined
  -> EXTERN: (601,9) _alloca
  -> EXTERN: (603,5) for_dealloc_allocatable
  -> EXTERN: (604,5) for_dealloc_allocatable
  -> EXTERN: (605,5) for_dealloc_allocatable
  -> EXTERN: (606,5) for_dealloc_allocatable
  -> EXTERN: (608,3) for_dealloc_allocatable
  -> EXTERN: (608,3) for_dealloc_allocatable
  -> EXTERN: (608,3) for_dealloc_allocatable
  -> EXTERN: (608,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(588,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(588,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(588,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference V(:,:) has aligned access
      remark #15388: vectorization support: reference a(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(588,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(588,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(588,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(588,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(588,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference V(:,:) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(588,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(591,9)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.596
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 20 
   remark #15477: vector cost: 6.500 
   remark #15478: estimated potential speedup: 2.940 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(591,9)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.261
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at math_tools.f90(591,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at math_tools.f90(599,23)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ } private={ } firstprivate={ n ? ? W V i } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(599,8)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(599,8)
      remark #15388: vectorization support: reference V(:,i) has aligned access   [ math_tools.f90(599,21) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(i,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.024
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 111 
      remark #15477: vector cost: 57.500 
      remark #15478: estimated potential speedup: 1.900 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(599,8)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference V(:,i) has aligned access   [ math_tools.f90(599,21) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.094
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at math_tools.f90(599,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(601,9)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(601,9)
      remark #25408: memset generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between at (601:9) and at (601:9)
      remark #17106: parallel dependence: assumed OUTPUT dependence between at (601:9) and at (601:9)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=1

      LOOP BEGIN at math_tools.f90(601,9)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference at (601:9) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.300
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.450 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=12
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(601,9)
   remark #25444: Loopnest Interchanged: ( 1 2 3 ) --> ( 2 1 3 )
   remark #17100: PERMUTED LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ } private={ } firstprivate={ ? ? ? V ? ? ? } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(601,9)
   <Multiversioned v1>
      remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at math_tools.f90(601,9)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference V(:,:) has aligned access
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 9 
         remark #15477: vector cost: 4.000 
         remark #15478: estimated potential speedup: 2.180 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15389: vectorization support: reference V(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.000
      LOOP END
   LOOP END

   LOOP BEGIN at math_tools.f90(601,9)
   <Multiversioned v2>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at math_tools.f90(601,9)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference V(:,:) has aligned access
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 9 
         remark #15477: vector cost: 4.000 
         remark #15478: estimated potential speedup: 2.180 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15389: vectorization support: reference V(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.000
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(601,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(601,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(601,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference a(:,:) has aligned access
      remark #15388: vectorization support: reference at (601:5) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(601,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(601,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(601,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(601,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(601,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (601:5) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(601,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(599,23)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(599,8)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(599,8)
      remark #17107: loop was not parallelized: inner loop
      remark #15388: vectorization support: reference V(:,i) has aligned access   [ math_tools.f90(599,21) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(i,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.024
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 111 
      remark #15477: vector cost: 57.500 
      remark #15478: estimated potential speedup: 1.900 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(599,8)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference V(:,i) has aligned access   [ math_tools.f90(599,21) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.094
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at math_tools.f90(599,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(601,9)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(601,9)
   <Multiversioned v1>
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between at (601:9) and at (601:9)
      remark #17106: parallel dependence: assumed OUTPUT dependence between at (601:9) and at (601:9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at math_tools.f90(601,9)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
         remark #17107: loop was not parallelized: inner loop
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference V(:,:) has aligned access
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 9 
         remark #15477: vector cost: 4.000 
         remark #15478: estimated potential speedup: 2.180 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15389: vectorization support: reference V(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.000
      LOOP END
   LOOP END

   LOOP BEGIN at math_tools.f90(601,9)
   <Multiversioned v2>
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between at (601:9) and at (601:9)
      remark #17106: parallel dependence: assumed OUTPUT dependence between at (601:9) and at (601:9)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at math_tools.f90(601,9)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
         remark #17107: loop was not parallelized: inner loop
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference V(:,:) has aligned access
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 4
         remark #15309: vectorization support: normalized vectorization overhead 0.500
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 9 
         remark #15477: vector cost: 4.000 
         remark #15478: estimated potential speedup: 2.180 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at math_tools.f90(601,9)
      <Remainder loop for vectorization>
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15388: vectorization support: reference at (601:9) has aligned access
         remark #15389: vectorization support: reference V(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 1.000
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(571,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(573,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(572,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(572,53):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(601,9):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(601,9):remark #34026: call to memset implemented as a call to optimized library version
math_tools.f90(562,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_compute_hermitian_root_] math_tools.f90:562

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm11]
        
    Routine temporaries
        Total         :    1326
            Global    :     334
            Local     :     992
        Regenerable   :     181
        Spilled       :     100
        
    Routine stack
        Variables     :     762 bytes*
            Reads     :      52 [4.34e+01 ~ 0.3%]
            Writes    :     126 [6.71e+01 ~ 0.4%]
        Spills        :     800 bytes*
            Reads     :     267 [5.94e+02 ~ 3.8%]
            Writes    :     158 [1.25e+02 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::SOLVE_SYSTEM

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::SOLVE_SYSTEM) [13/30=43.3%] math_tools.f90(616,14)
  -> EXTERN: (616,14) _alloca
  -> EXTERN: (616,14) _alloca
  -> EXTERN: (616,14) __getsp_inlined
  -> EXTERN: (636,11) __resetsp_inlined
  -> EXTERN: (636,11) _alloca
  -> EXTERN: (636,11) __getsp_inlined
  -> EXTERN: (654,3) __resetsp_inlined


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(628,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <m(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(628,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.740 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(628,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(628,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <m(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 1
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 1.000 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(628,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.750 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(628,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(629,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 1.740 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at math_tools.f90(629,5)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(629,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 7 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 1.750 
   remark #15488: --- end vector cost summary ---
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at math_tools.f90(629,5)
<Remainder, Multiversioned v2>
LOOP END

LOOP BEGIN at math_tools.f90(631,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between m(:,k) (633:18) and m(i,:) (642:11)
   remark #17106: parallel dependence: assumed FLOW dependence between m(i,:) (642:11) and m(:,k) (633:18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between m(:,k) (633:18) and m(i,:) (642:11)
   remark #15346: vector dependence: assumed FLOW dependence between m(i,:) (642:11) and m(:,k) (633:18)

   LOOP BEGIN at math_tools.f90(633,18)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference m(:,k) has aligned access
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.117
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 189 
      remark #15477: vector cost: 223.000 
      remark #15478: estimated potential speedup: 0.840 
      remark #15487: type converts: 1 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(633,18)
   <Remainder>
   LOOP END

   LOOP BEGIN at math_tools.f90(635,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.750 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(635,11)
   <Remainder>
   LOOP END

   LOOP BEGIN at math_tools.f90(636,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.750 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(636,11)
   <Remainder>
   LOOP END

   LOOP BEGIN at math_tools.f90(636,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 5.000 
      remark #15478: estimated potential speedup: 1.400 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(636,11)
   <Remainder>
   LOOP END

   LOOP BEGIN at math_tools.f90(637,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 7 
      remark #15477: vector cost: 5.000 
      remark #15478: estimated potential speedup: 1.400 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(637,11)
   <Remainder>
   LOOP END

   LOOP BEGIN at math_tools.f90(640,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 59 
      remark #15477: vector cost: 35.000 
      remark #15478: estimated potential speedup: 1.680 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(640,8)
   <Remainder>
   LOOP END

   LOOP BEGIN at math_tools.f90(641,8)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 24 
      remark #15477: vector cost: 22.000 
      remark #15478: estimated potential speedup: 1.080 
      remark #15488: --- end vector cost summary ---

      LOOP BEGIN at math_tools.f90(642,11)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 17 
         remark #15477: vector cost: 16.000 
         remark #15478: estimated potential speedup: 1.060 
         remark #15488: --- end vector cost summary ---
         remark #25439: unrolled with remainder by 4  
      LOOP END

      LOOP BEGIN at math_tools.f90(642,11)
      <Remainder>
      LOOP END
   LOOP END

   LOOP BEGIN at math_tools.f90(645,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 6 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 2.000 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(645,8)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(649,5)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between x(:) (651:13) and x(k) (650:8)
   remark #17106: parallel dependence: assumed FLOW dependence between x(k) (650:8) and x(:) (651:13)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between x(:) (651:13) and x(k) (650:8)
   remark #15346: vector dependence: assumed FLOW dependence between x(k) (650:8) and x(:) (651:13)

   LOOP BEGIN at math_tools.f90(651,13)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15516: loop was not vectorized: cost model has chosen vectorlength of 1 -- maybe possible to override via pragma/directive with vectorlength clause
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 15 
      remark #15477: vector cost: 14.000 
      remark #15478: estimated potential speedup: 1.060 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 4  
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      remark #25457: Number of partial sums replaced: 1
   LOOP END

   LOOP BEGIN at math_tools.f90(651,13)
   <Remainder>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(640,8):remark #34046: complex divide implemented using x87 instructions to maintain precision.
math_tools.f90(640,8):remark #34048: consider using complex-limited-range option to boost run time performance.
math_tools.f90(640,8):remark #34046: complex divide implemented using x87 instructions to maintain precision.
math_tools.f90(640,8):remark #34048: consider using complex-limited-range option to boost run time performance.
math_tools.f90(640,8):remark #34046: complex divide implemented using x87 instructions to maintain precision.
math_tools.f90(640,8):remark #34048: consider using complex-limited-range option to boost run time performance.
math_tools.f90(650,8):remark #34046: complex divide implemented using x87 instructions to maintain precision.
math_tools.f90(650,8):remark #34048: consider using complex-limited-range option to boost run time performance.
math_tools.f90(616,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_solve_system_] math_tools.f90:616

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   38[ rax rdx rcx rbx rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        
    Routine temporaries
        Total         :     559
            Global    :     207
            Local     :     352
        Regenerable   :       6
        Spilled       :      77
        
    Routine stack
        Variables     :      16 bytes*
            Reads     :      18 [1.77e+02 ~ 2.0%]
            Writes    :      18 [1.77e+02 ~ 2.0%]
        Spills        :     520 bytes*
            Reads     :     137 [8.33e+02 ~ 9.2%]
            Writes    :      86 [2.53e+02 ~ 2.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::GET_EIGEN_DECOMPOSITION

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::GET_EIGEN_DECOMPOSITION) [14/30=46.7%] math_tools.f90(460,14)
  -> EXTERN: (483,5) for_alloc_allocatable
  -> EXTERN: (483,5) for_check_mult_overflow64
  -> EXTERN: (484,5) for_alloc_allocatable
  -> EXTERN: (484,5) for_check_mult_overflow64
  -> EXTERN: (485,10) for_cpusec_t
  -> EXTERN: (487,10) __resetsp_inlined
  -> EXTERN: (487,10) dsyevd_
  -> EXTERN: (487,10) __getsp_inlined
  -> EXTERN: (487,31) _alloca
  -> EXTERN: (487,50) _alloca
  -> EXTERN: (488,10) for_cpusec_t
  -> EXTERN: (490,8) for_write_seq_lis
  -> EXTERN: (490,8) for_write_seq_lis_xmit
  -> EXTERN: (492,11) for_write_seq_lis
  -> EXTERN: (492,11) _alloca
  -> EXTERN: (492,11) __getsp_inlined
  -> EXTERN: (492,11) __resetsp_inlined
  -> EXTERN: (494,8) for_stop_core
  -> EXTERN: (497,5) for_dealloc_allocatable
  -> EXTERN: (498,5) for_dealloc_allocatable
  -> EXTERN: (500,3) for_dealloc_allocatable
  -> EXTERN: (500,3) for_dealloc_allocatable
  -> EXTERN: (500,3) for_dealloc_allocatable
  -> EXTERN: (500,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(486,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(486,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(486,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference eigenvectors(:,:) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(486,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(486,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(486,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <eigenvectors(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(486,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <eigenvectors(:,:)>, stride is unknown to compiler
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(486,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(487,31)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(487,31)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(487,31)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (487:31) has aligned access
      remark #15388: vectorization support: reference eigenvectors(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(487,31)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(487,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(487,31)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(487,31)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(487,31)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (487:31) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <eigenvectors(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(487,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(487,50)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference at (487:50) has aligned access
   remark #15389: vectorization support: reference eigenvals(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.750
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 1.990 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(487,50)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(487,50)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference at (487:50) has aligned access
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <eigenvals(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(487,50)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at math_tools.f90(487,31)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(487,31)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(487,31)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference eigenvectors(:,:) has aligned access
      remark #15388: vectorization support: reference at (487:31) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(487,31)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(487,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(487,31)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(487,31)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(487,31)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (487:31) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <eigenvectors(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(487,31)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(487,50)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference eigenvals(:) has aligned access
   remark #15388: vectorization support: reference at (487:50) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.640 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(487,50)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(487,50)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(487,50)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference at (487:50) has aligned access
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <eigenvals(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(487,50)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at math_tools.f90(491,8)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (492:11) and at (492:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (492:11) and at (492:11)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(492,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (492:22) has aligned access   [ math_tools.f90(492,22) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(i,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ math_tools.f90(492,22) ]
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 5 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.650 
      remark #15487: type converts: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(492,11)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference at (492:22) has aligned access   [ math_tools.f90(492,22) ]
      remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.300
      remark #15418: vectorization support: number of FP down converts: double precision to single precision 1   [ math_tools.f90(492,22) ]
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(471,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(470,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(469,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(470,53):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(460,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_get_eigen_decomposition_] math_tools.f90:460

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm9]
        
    Routine temporaries
        Total         :     531
            Global    :     143
            Local     :     388
        Regenerable   :      80
        Spilled       :      35
        
    Routine stack
        Variables     :     490 bytes*
            Reads     :      18 [1.51e+01 ~ 0.9%]
            Writes    :      59 [4.92e+01 ~ 3.0%]
        Spills        :     240 bytes*
            Reads     :      52 [3.70e+01 ~ 2.3%]
            Writes    :      39 [1.47e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::INVERT_SINGULAR_MATRIX

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::INVERT_SINGULAR_MATRIX) [15/30=50.0%] math_tools.f90(657,14)
  -> EXTERN: (670,5) for_alloc_allocatable
  -> EXTERN: (670,5) for_check_mult_overflow64
  -> EXTERN: (671,5) for_alloc_allocatable
  -> EXTERN: (671,5) for_check_mult_overflow64
  -> EXTERN: (672,5) for_alloc_allocatable
  -> EXTERN: (672,5) for_check_mult_overflow64
  -> (673,10) MATH_TOOLS::GET_EIGEN_DECOMPOSITION (isz = 949) (sz = 958)
     [[ Inlining inhibited by overrideable criterion  <1>]]
  -> EXTERN: (689,10) __resetsp_inlined
  -> EXTERN: (689,10) dgemm_
  -> EXTERN: (689,10) __getsp_inlined
  -> EXTERN: (689,58) _alloca
  -> EXTERN: (692,5) for_dealloc_allocatable
  -> EXTERN: (693,5) for_dealloc_allocatable
  -> EXTERN: (694,5) for_dealloc_allocatable
  -> EXTERN: (696,3) for_dealloc_allocatable
  -> EXTERN: (696,3) for_dealloc_allocatable
  -> EXTERN: (696,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(674,19)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ math_tools.f90(674,19) ]
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EIGENVALS(:) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.279
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 9 
   remark #15477: vector cost: 8.500 
   remark #15478: estimated potential speedup: 1.050 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(674,19)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at math_tools.f90(675,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EIGENVALS(i) has aligned access   [ math_tools.f90(681,11) ]
   remark #15388: vectorization support: reference EIGENVALS(i) has aligned access   [ math_tools.f90(679,11) ]
   remark #15388: vectorization support: reference EIGENVALS(i) has aligned access   [ math_tools.f90(679,31) ]
   remark #15388: vectorization support: reference EIGENVALS(i) has aligned access   [ math_tools.f90(681,11) ]
   remark #15388: vectorization support: reference EIGENVALS(i) has aligned access   [ math_tools.f90(679,11) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.048
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 2 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 31 
   remark #15477: vector cost: 41.500 
   remark #15478: estimated potential speedup: 0.740 
   remark #15486: divides: 1 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(685,5)
<Multiversioned v1>
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(685,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(685,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <EIGENVECTORS(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(685,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(685,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15389: vectorization support: reference EIGENVECTORS(:,:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.375
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.000 
   remark #15478: estimated potential speedup: 0.990 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(685,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <EIGENVECTORS(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(685,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(686,5)
<Multiversioned v1>
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(687,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(i,:)>, stride is unknown to compiler
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(i,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.136
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 6 
      remark #15477: vector cost: 5.500 
      remark #15478: estimated potential speedup: 1.080 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(687,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(686,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(687,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(i,:)>, stride is unknown to compiler
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(i,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.136
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 6 
      remark #15477: vector cost: 5.500 
      remark #15478: estimated potential speedup: 1.080 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(687,8)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(689,58)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(689,58)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(689,58)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (689:58) has aligned access
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(689,58)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(689,58)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(689,58)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(689,58)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(689,58)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (689:58) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(689,58)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(689,58)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(689,58)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(689,58)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference at (689:58) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(689,58)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(689,58)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(689,58)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(689,58)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(689,58)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (689:58) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(689,58)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(690,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(690,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(690,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference matrix(:,:) has aligned access
      remark #15388: vectorization support: reference MATRIX2(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(690,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(690,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(690,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(690,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(690,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference MATRIX2(:,:) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <matrix(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(690,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(664,72):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(664,58):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(663,58):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(657,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_invert_singular_matrix_] math_tools.f90:657

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     536
            Global    :     158
            Local     :     378
        Regenerable   :      55
        Spilled       :      28
        
    Routine stack
        Variables     :     292 bytes*
            Reads     :      28 [2.17e+01 ~ 0.6%]
            Writes    :      54 [5.40e+01 ~ 1.5%]
        Spills        :     168 bytes*
            Reads     :      66 [5.16e+01 ~ 1.5%]
            Writes    :      38 [4.75e+01 ~ 1.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::SOLVE_SYSTEM_REAL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::SOLVE_SYSTEM_REAL) [16/30=53.3%] math_tools.f90(704,14)
  -> EXTERN: (724,5) for_alloc_allocatable
  -> EXTERN: (724,5) for_check_mult_overflow64
  -> EXTERN: (725,5) for_alloc_allocatable
  -> EXTERN: (725,5) for_check_mult_overflow64
  -> EXTERN: (726,5) for_alloc_allocatable
  -> EXTERN: (726,5) for_check_mult_overflow64
  -> EXTERN: (728,5) for_realloc_lhs
  -> EXTERN: (731,10) dgesv_
  -> EXTERN: (733,8) for_write_seq_lis
  -> EXTERN: (733,8) for_write_seq_lis_xmit
  -> EXTERN: (734,8) for_stop_core
  -> EXTERN: (739,5) for_dealloc_allocatable
  -> EXTERN: (740,5) for_dealloc_allocatable
  -> EXTERN: (741,5) for_dealloc_allocatable
  -> EXTERN: (776,3) for_dealloc_allocatable
  -> EXTERN: (776,3) for_dealloc_allocatable
  -> EXTERN: (776,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(728,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(728,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(728,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference A_INT(:,:) has aligned access
      remark #15388: vectorization support: reference a(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(728,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(728,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(728,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(728,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(728,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference A_INT(:,:) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(728,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(729,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference B_INT(:,1) has aligned access
   remark #15389: vectorization support: reference b(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.750
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 1.990 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(729,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(729,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference B_INT(:,1) has aligned access
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <b(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(729,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at math_tools.f90(737,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference x(:) has aligned access
   remark #15388: vectorization support: reference B_INT(:,1) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.640 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(737,5)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(737,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(737,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference B_INT(:,1) has aligned access
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <x(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(737,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(712,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(712,57):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(711,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(704,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_solve_system_real_] math_tools.f90:704

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     402
            Global    :      78
            Local     :     324
        Regenerable   :      73
        Spilled       :      10
        
    Routine stack
        Variables     :     396 bytes*
            Reads     :      24 [2.30e+01 ~ 1.9%]
            Writes    :      61 [5.72e+01 ~ 4.7%]
        Spills        :      40 bytes*
            Reads     :       7 [1.04e+01 ~ 0.8%]
            Writes    :       7 [7.30e+00 ~ 0.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::COMP_NORMALISED_PLM

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::COMP_NORMALISED_PLM) [17/30=56.7%] math_tools.f90(786,14)
  -> EXTERN: (786,14) _alloca
  -> EXTERN: (786,14) __getsp_inlined
  -> EXTERN: (831,11) cos
  -> EXTERN: (832,11) sin
  -> EXTERN: (890,3) __resetsp_inlined


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(826,5)
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between lambda(:) (826:5) and lambda(:) (826:5)
   remark #17106: parallel dependence: assumed OUTPUT dependence between lambda(:) (826:5) and lambda(:) (826:5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(826,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference lambda(:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.660 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at math_tools.f90(826,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(834,5)
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between plm(:) (834:5) and plm(:) (834:5)
   remark #17106: parallel dependence: assumed OUTPUT dependence between plm(:) (834:5) and plm(:) (834:5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(834,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference plm(:) has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.300
      remark #15300: LOOP WAS VECTORIZED
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.450 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at math_tools.f90(834,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(850,8)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between lam_mm (852:11) and lam_mm (852:11)
   remark #17106: parallel dependence: assumed FLOW dependence between lam_mm (852:11) and lam_mm (852:11)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between lam_mm (852:11) and lam_mm (852:11)
   remark #15346: vector dependence: assumed FLOW dependence between lam_mm (852:11) and lam_mm (852:11)
LOOP END

LOOP BEGIN at math_tools.f90(867,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between lam_2 (875:8) and lam_2 (881:8)
   remark #17106: parallel dependence: assumed FLOW dependence between lam_2 (881:8) and lam_2 (875:8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between lam_2 (875:8) and lam_2 (881:8)
   remark #15346: vector dependence: assumed FLOW dependence between lam_2 (881:8) and lam_2 (875:8)
LOOP END

LOOP BEGIN at math_tools.f90(887,5)
   remark #25399: memcopy generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between plm(:) (887:5) and plm(:) (887:5)
   remark #17106: parallel dependence: assumed OUTPUT dependence between plm(:) (887:5) and plm(:) (887:5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(887,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference plm(:) has aligned access
      remark #15388: vectorization support: reference lambda(:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.333
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.180 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=6
   LOOP END

   LOOP BEGIN at math_tools.f90(887,5)
   <Alternate Alignment Vectorized Loop>
      remark #25015: Estimate of max trip count of loop=6
   LOOP END

   LOOP BEGIN at math_tools.f90(887,5)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(826,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(826,5):remark #34026: call to memset implemented as a call to optimized library version
math_tools.f90(834,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(834,5):remark #34026: call to memset implemented as a call to optimized library version
math_tools.f90(887,5):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(887,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
math_tools.f90(887,5):remark #34026: call to memcpy implemented as a call to optimized library version
math_tools.f90(786,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_comp_normalised_plm_] math_tools.f90:786

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r12-r15 zmm0-zmm9]
        
    Routine temporaries
        Total         :     103
            Global    :      45
            Local     :      58
        Regenerable   :      10
        Spilled       :      10
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      40 bytes*
            Reads     :       5 [5.00e+00 ~ 1.1%]
            Writes    :       5 [5.00e+00 ~ 1.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::CONVERT_SIGMA2FRAC

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::CONVERT_SIGMA2FRAC) [18/30=60.0%] math_tools.f90(893,14)
  -> INLINE: (903,16) MATH_TOOLS::CORR_ERF (isz = 42) (sz = 47)
    -> EXTERN: (1021,13) exp


    Report from: Code generation optimizations [cg]

math_tools.f90(893,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_convert_sigma2frac_] math_tools.f90:893

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    8[ rbx rsi rdi zmm0-zmm4]
        
    Routine temporaries
        Total         :      51
            Global    :      11
            Local     :      40
        Regenerable   :       4
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 3.1%]
            Writes    :       2 [2.00e+00 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::CONVERT_FRACT2SIGMA_DP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::CONVERT_FRACT2SIGMA_DP) [19/30=63.3%] math_tools.f90(910,14)
  -> INLINE: (932,13) MATH_TOOLS::CORR_ERF (isz = 42) (sz = 47)
    -> EXTERN: (1021,13) exp
  -> INLINE: (938,16) MATH_TOOLS::CORR_ERF (isz = 42) (sz = 47)
    -> EXTERN: (1021,13) exp
  -> EXTERN: (951,11) for_write_seq_lis


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(934,8)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between xl (935:26) and xl (944:14)
   remark #17106: parallel dependence: assumed FLOW dependence between xl (944:14) and xl (935:26)
   remark #17106: parallel dependence: assumed ANTI dependence between xl (935:26) and xl (944:14)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ math_tools.f90(948,8) ]
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(910,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_convert_fract2sigma_dp_] math_tools.f90:910

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rsi rdi r8 r12 zmm0-zmm15]
        
    Routine temporaries
        Total         :      80
            Global    :      29
            Local     :      51
        Regenerable   :      26
        Spilled       :       8
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       3 [3.75e-01 ~ 0.6%]
        Spills        :      56 bytes*
            Reads     :       9 [3.87e+00 ~ 5.9%]
            Writes    :       9 [3.44e+00 ~ 5.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::CONVERT_FRACT2SIGMA_SP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::CONVERT_FRACT2SIGMA_SP) [20/30=66.7%] math_tools.f90(961,14)
  -> INLINE: (983,13) MATH_TOOLS::CORR_ERF (isz = 42) (sz = 47)
    -> EXTERN: (1021,13) exp
  -> INLINE: (989,16) MATH_TOOLS::CORR_ERF (isz = 42) (sz = 47)
    -> EXTERN: (1021,13) exp
  -> EXTERN: (1002,11) for_write_seq_lis


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(985,8)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between xl (986:26) and xl (995:14)
   remark #17106: parallel dependence: assumed FLOW dependence between xl (995:14) and xl (986:26)
   remark #17106: parallel dependence: assumed ANTI dependence between xl (986:26) and xl (995:14)
   remark #15520: loop was not vectorized: loop with multiple exits cannot be vectorized unless it meets search loop idiom criteria   [ math_tools.f90(999,8) ]
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(961,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_convert_fract2sigma_sp_] math_tools.f90:961

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rsi rdi r8 r12 r14 zmm0-zmm15]
        
    Routine temporaries
        Total         :      83
            Global    :      30
            Local     :      53
        Regenerable   :      26
        Spilled       :       8
        
    Routine stack
        Variables     :      80 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       3 [3.75e-01 ~ 0.6%]
        Spills        :      56 bytes*
            Reads     :       9 [3.87e+00 ~ 5.8%]
            Writes    :       9 [3.44e+00 ~ 5.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::CORR_ERF

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::CORR_ERF) [21/30=70.0%] math_tools.f90(1012,21)
  -> EXTERN: (1021,13) exp


    Report from: Code generation optimizations [cg]

math_tools.f90(1012,21):remark #34051: REGISTER ALLOCATION : [math_tools_mp_corr_erf_] math_tools.f90:1012

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    5[ rdi zmm0-zmm3]
        
    Routine temporaries
        Total         :      46
            Global    :      10
            Local     :      36
        Regenerable   :       4
        Spilled       :       2
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      16 bytes*
            Reads     :       2 [2.00e+00 ~ 3.7%]
            Writes    :       2 [2.00e+00 ~ 3.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::CHOLESKY_DECOMPOSE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::CHOLESKY_DECOMPOSE) [22/30=73.3%] math_tools.f90(1062,14)
  -> EXTERN: (1076,10) __resetsp_inlined
  -> EXTERN: (1076,10) dpotrf_
  -> EXTERN: (1076,10) __getsp_inlined
  -> EXTERN: (1076,26) _alloca
  -> EXTERN: (1087,11) for_write_seq_lis
  -> EXTERN: (1087,11) for_write_seq_lis_xmit
  -> EXTERN: (1088,11) for_stop_core
  -> EXTERN: (1122,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(1075,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1075,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1075,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference l(:,:) has aligned access
      remark #15388: vectorization support: reference a(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1075,5)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1075,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1075,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <l(:,:)>, stride is unknown to compiler
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 4.500 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---

   LOOP BEGIN at math_tools.f90(1075,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <l(:,:)>, stride is unknown to compiler
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector cost summary ---
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at math_tools.f90(1075,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1076,26)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1076,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1076,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1076:26) has aligned access
      remark #15388: vectorization support: reference l(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1076,26)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1076,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1076,26)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1076,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1076,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1076:26) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <l(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1076,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1076,26)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1076,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1076,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference l(:,:) has aligned access
      remark #15388: vectorization support: reference at (1076:26) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1076,26)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1076,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1076,26)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1076,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1076,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1076:26) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <l(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1076,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1093,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1094,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <l(i,j)>, stride is unknown to compiler   [ math_tools.f90(1095,14) ]
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1094,11)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1093,8)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1094,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <l(i,j)>, stride is unknown to compiler   [ math_tools.f90(1095,14) ]
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1094,11)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(1071,44):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(1062,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_cholesky_decompose_] math_tools.f90:1062

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     290
            Global    :     120
            Local     :     170
        Regenerable   :      42
        Spilled       :      28
        
    Routine stack
        Variables     :     168 bytes*
            Reads     :       4 [2.52e+00 ~ 0.2%]
            Writes    :      12 [6.11e+00 ~ 0.4%]
        Spills        :     184 bytes*
            Reads     :      37 [3.93e+01 ~ 2.5%]
            Writes    :      30 [1.42e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::CHOLESKY_DECOMPOSE_SINGLE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::CHOLESKY_DECOMPOSE_SINGLE) [23/30=76.7%] math_tools.f90(1125,14)
  -> EXTERN: (1137,10) __resetsp_inlined
  -> EXTERN: (1137,10) dpotrf_
  -> EXTERN: (1137,10) __getsp_inlined
  -> EXTERN: (1137,26) _alloca
  -> EXTERN: (1143,11) for_write_seq_lis
  -> EXTERN: (1143,11) for_write_seq_lis_xmit
  -> EXTERN: (1144,11) for_stop_core
  -> EXTERN: (1156,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(1137,26)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1137,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1137,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1137:26) has aligned access
      remark #15388: vectorization support: reference a(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1137,26)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1137,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1137,26)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1137,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1137,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1137:26) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1137,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1137,26)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1137,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1137,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference a(:,:) has aligned access
      remark #15388: vectorization support: reference at (1137:26) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1137,26)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1137,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1137,26)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1137,26)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1137,26)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1137:26) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1137,26)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1149,8)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1150,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(i,j)>, stride is unknown to compiler   [ math_tools.f90(1151,14) ]
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1150,11)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1149,8)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1150,11)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(i,j)>, stride is unknown to compiler   [ math_tools.f90(1151,14) ]
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.320 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1150,11)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(1133,44):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(1125,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_cholesky_decompose_single_] math_tools.f90:1125

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     242
            Global    :      95
            Local     :     147
        Regenerable   :      42
        Spilled       :      20
        
    Routine stack
        Variables     :     168 bytes*
            Reads     :       4 [2.52e+00 ~ 0.2%]
            Writes    :      12 [6.21e+00 ~ 0.6%]
        Spills        :     120 bytes*
            Reads     :      24 [1.52e+01 ~ 1.4%]
            Writes    :      21 [8.31e+00 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::CHOLESKY_SOLVE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::CHOLESKY_SOLVE) [24/30=80.0%] math_tools.f90(1158,14)
  -> EXTERN: (1169,5) for_alloc_allocatable
  -> EXTERN: (1169,5) for_check_mult_overflow64
  -> EXTERN: (1171,10) __resetsp_inlined
  -> EXTERN: (1171,10) dpotrs_
  -> EXTERN: (1171,10) __getsp_inlined
  -> EXTERN: (1171,28) _alloca
  -> EXTERN: (1173,5) for_dealloc_allocatable
  -> EXTERN: (1175,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(1170,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference B_INT(:,1) has aligned access
   remark #15389: vectorization support: reference b(:) has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.750
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.000 
   remark #15478: estimated potential speedup: 1.990 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(1170,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(1170,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference B_INT(:,1) has aligned access
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <b(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(1170,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at math_tools.f90(1171,28)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1171,28)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1171,28)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1171:28) has aligned access
      remark #15388: vectorization support: reference l(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1171,28)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1171,28)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1171,28)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1171,28)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1171,28)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1171:28) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <l(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1171,28)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1172,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference x(:) has aligned access
   remark #15388: vectorization support: reference B_INT(:,1) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.333
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.640 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(1172,5)
<Alternate Alignment Vectorized Loop, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(1172,5)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(1172,5)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference B_INT(:,1) has aligned access
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <x(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(1172,5)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(1166,46):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
math_tools.f90(1158,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_cholesky_solve_] math_tools.f90:1158

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     191
            Global    :      54
            Local     :     137
        Regenerable   :      29
        Spilled       :      10
        
    Routine stack
        Variables     :     112 bytes*
            Reads     :       6 [6.00e+00 ~ 0.9%]
            Writes    :      18 [1.80e+01 ~ 2.8%]
        Spills        :      40 bytes*
            Reads     :       8 [1.58e+00 ~ 0.2%]
            Writes    :       8 [2.58e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::MATMUL_SYMM

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::MATMUL_SYMM) [25/30=83.3%] math_tools.f90(1178,14)
  -> EXTERN: (1188,10) __resetsp_inlined
  -> EXTERN: (1188,10) dsymm_
  -> EXTERN: (1188,10) __getsp_inlined
  -> EXTERN: (1188,38) _alloca
  -> EXTERN: (1188,44) _alloca
  -> EXTERN: (1188,56) _alloca


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(1188,38)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1188,38)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,38)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1188:38) has aligned access
      remark #15388: vectorization support: reference a(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,38)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,38)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1188,38)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1188,38)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,38)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1188:38) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,38)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1188,44)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1188,44)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,44)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1188:44) has aligned access
      remark #15388: vectorization support: reference b(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,44)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,44)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1188,44)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1188,44)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,44)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1188:44) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <b(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,44)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1188,56)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1188,56)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,56)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1188:56) has aligned access
      remark #15388: vectorization support: reference c(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,56)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,56)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1188,56)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1188,56)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,56)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1188:56) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <c(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,56)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1188,56)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1188,56)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,56)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference c(:,:) has aligned access
      remark #15388: vectorization support: reference at (1188:56) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,56)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,56)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1188,56)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1188,56)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,56)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1188:56) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <c(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1188,56)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(1178,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_matmul_symm_] math_tools.f90:1178

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     185
            Global    :      86
            Local     :      99
        Regenerable   :      12
        Spilled       :      15
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 0.1%]
        Spills        :      80 bytes*
            Reads     :      23 [5.95e+00 ~ 0.4%]
            Writes    :      21 [5.95e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::MATMUL_GEN

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::MATMUL_GEN) [26/30=86.7%] math_tools.f90(1192,14)
  -> EXTERN: (1202,10) __resetsp_inlined
  -> EXTERN: (1202,10) dgemm_
  -> EXTERN: (1202,10) __getsp_inlined
  -> EXTERN: (1202,35) _alloca
  -> EXTERN: (1202,39) _alloca
  -> EXTERN: (1202,48) _alloca


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(1202,35)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1202,35)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,35)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1202:35) has aligned access
      remark #15388: vectorization support: reference a(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,35)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,35)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1202,35)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1202,35)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,35)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1202:35) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <a(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,35)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1202,39)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1202,39)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,39)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1202:39) has aligned access
      remark #15388: vectorization support: reference b(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,39)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,39)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1202,39)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1202,39)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,39)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1202:39) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <b(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,39)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1202,48)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1202,48)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,48)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1202:48) has aligned access
      remark #15388: vectorization support: reference c(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,48)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1202,48)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1202,48)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,48)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1202:48) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <c(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 2.000
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 2.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1202,48)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1202,48)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,48)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference c(:,:) has aligned access
      remark #15388: vectorization support: reference at (1202:48) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 4.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 1.500 
      remark #15478: estimated potential speedup: 2.550 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,48)
   <Alternate Alignment Vectorized Loop>
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at math_tools.f90(1202,48)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at math_tools.f90(1202,48)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,48)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (1202:48) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <c(:,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 1.667
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.310 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at math_tools.f90(1202,48)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(1192,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_matmul_gen_] math_tools.f90:1192

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     185
            Global    :      86
            Local     :      99
        Regenerable   :      13
        Spilled       :      15
        
    Routine stack
        Variables     :       4 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       1 [1.00e+00 ~ 0.1%]
        Spills        :      80 bytes*
            Reads     :      23 [5.95e+00 ~ 0.4%]
            Writes    :      21 [5.95e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::MEAN

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::MEAN) [27/30=90.0%] math_tools.f90(1206,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(1209,11)
<Peeled loop for vectorization, Multiversioned v1>
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at math_tools.f90(1209,11)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference array(:) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 1.450
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 2.260 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(1209,11)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(1209,11)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <array(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.679
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 1.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(1209,11)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(1206,12):remark #34051: REGISTER ALLOCATION : [math_tools_mp_mean_] math_tools.f90:1206

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rsi rdi r8-r11 zmm0-zmm7]
        
    Routine temporaries
        Total         :      65
            Global    :      26
            Local     :      39
        Regenerable   :       2
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::VARIANCE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::VARIANCE) [28/30=93.3%] math_tools.f90(1212,12)
  -> INLINE: (1215,22) MATH_TOOLS::MEAN (isz = 42) (sz = 47)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(1209,11) inlined into math_tools.f90(1215,22)
<Peeled loop for vectorization, Multiversioned v1>
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at math_tools.f90(1209,11) inlined into math_tools.f90(1215,22)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference array(:) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 1.450
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 2.500 
   remark #15478: estimated potential speedup: 2.260 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(1209,11) inlined into math_tools.f90(1215,22)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(1209,11) inlined into math_tools.f90(1215,22)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <array(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.679
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.500 
   remark #15478: estimated potential speedup: 1.660 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(1209,11) inlined into math_tools.f90(1215,22)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

LOOP BEGIN at math_tools.f90(1215,11)
<Peeled loop for vectorization, Multiversioned v1>
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at math_tools.f90(1215,11)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference array(:) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.635
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 14 
   remark #15477: vector cost: 6.500 
   remark #15478: estimated potential speedup: 2.080 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(1215,11)
<Remainder loop for vectorization, Multiversioned v1>
   remark #15388: vectorization support: reference array(:) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 2.200
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at math_tools.f90(1215,11)
<Remainder loop for vectorization, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(1215,11)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <array(:)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.383
   remark #15300: LOOP WAS VECTORIZED
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 14 
   remark #15477: vector cost: 7.500 
   remark #15478: estimated potential speedup: 1.820 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at math_tools.f90(1215,11)
<Remainder loop for vectorization, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(1212,12):remark #34051: REGISTER ALLOCATION : [math_tools_mp_variance_] math_tools.f90:1212

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rsi rdi r8-r11 zmm0-zmm9]
        
    Routine temporaries
        Total         :     163
            Global    :      55
            Local     :     108
        Regenerable   :       5
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::TRIDAG

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::TRIDAG) [29/30=96.7%] math_tools.f90(1219,14)
  -> EXTERN: (1219,14) _alloca
  -> EXTERN: (1219,14) __getsp_inlined
  -> EXTERN: (1243,3) __resetsp_inlined


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at math_tools.f90(1233,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between u(j) (1236:8) and u(j-1) (1236:8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between u(j) (1236:8) and u(j-1) (1236:8)
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at math_tools.f90(1233,5)
<Multiversioned v2>
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between u(j) (1236:8) and u(j-1) (1236:8)
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at math_tools.f90(1239,5)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between u(j) (1240:8) and u(j+1) (1240:8)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between u(j) (1240:8) and u(j+1) (1240:8)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at math_tools.f90(1239,5)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at math_tools.f90(1239,5)
<Multiversioned v2>
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between u(j) (1240:8) and u(j+1) (1240:8)
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at math_tools.f90(1239,5)
<Remainder, Multiversioned v2>
LOOP END

    Report from: Code generation optimizations [cg]

math_tools.f90(1219,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_tridag_] math_tools.f90:1219

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :     134
            Global    :      63
            Local     :      71
        Regenerable   :       1
        Spilled       :      18
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      96 bytes*
            Reads     :      14 [1.78e+01 ~ 7.2%]
            Writes    :      12 [7.20e+00 ~ 2.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: MATH_TOOLS::MOV3

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (MATH_TOOLS::MOV3) [30/30=100.0%] math_tools.f90(1247,14)


    Report from: Code generation optimizations [cg]

math_tools.f90(1247,14):remark #34051: REGISTER ALLOCATION : [math_tools_mp_mov3_] math_tools.f90:1247

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    9[ rax rdx rcx rsi rdi r8-r11]
        
    Routine temporaries
        Total         :      24
            Global    :       0
            Local     :      24
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> The compiler's heuristics predict that it is not profitable to inline the
    call.  Add "!DIR$ATTRIBUTES FORCEINLINE" to the declaration of the called 
    subprogram, or add "!DIR$ FORCEINLINE" before the call site.

