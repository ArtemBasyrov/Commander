Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.3.222 Build 20180410

Compiler options: -I/mn/stornext/u3/hke/owl/local/src/dagsshealpix/include -I/mn/stornext/u3/hke/owl/local/include -I/astro/local/opt/Intel/compilers_and_libraries_2018.3.222/linux/mpi/intel64/include -I/astro/local/opt/Intel/compilers_and_libraries_2018.3.222/linux/mpi/intel64/include -O3 -traceback -qopenmp -qopt-report=5 -parallel -c

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: comm_param_mod._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (comm_param_mod._) [1/22=4.5%] comm_param_mod.f90(5,8)


    Report from: Code generation optimizations [cg]

comm_param_mod.f90(5,8):remark #34051: REGISTER ALLOCATION : [comm_param_mod._] comm_param_mod.f90:5

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::READ_COMM_PARAMS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::READ_COMM_PARAMS) [2/22=9.1%] comm_param_mod.f90(153,14)
  -> EXTERN: (162,10) for_getarg
  -> (166,13) COMM_PARAM_MOD::GET_FILE_LENGTH (isz = 742) (sz = 751)
     [[ Inlining would exceed -inline-max-size value (751>253) <1>]]
  -> EXTERN: (169,10) mpi_bcast_
  -> EXTERN: (170,5) for_alloc_allocatable
  -> EXTERN: (170,5) for_check_mult_overflow64
  -> (173,13) COMM_PARAM_MOD::READ_PARAMFILE_TO_ASCII (isz = 764) (sz = 773)
     [[ Inlining would exceed -inline-max-size value (773>253) <1>]]
  -> EXTERN: (176,13) mpi_bcast_
  -> EXTERN: (180,10) INIT_HASH_TBL_SLL
  -> (182,10) COMM_PARAM_MOD::PUT_ASCII_INTO_HASHTABLE (isz = 1379) (sz = 1386)
     [[ Inlining would exceed -inline-max-size value (1386>253) <1>]]
  -> EXTERN: (183,5) for_dealloc_allocatable
  -> (186,10) COMM_PARAM_MOD::READ_GLOBAL_PARAMS_HASH (isz = 2337) (sz = 2344)
     [[ Inlining would exceed -inline-max-size value (2344>253) <1>]]
  -> (187,10) COMM_PARAM_MOD::READ_DATA_PARAMS_HASH (isz = 4213) (sz = 4220)
     [[ Inlining would exceed -inline-max-size value (4220>230) <1>]]
  -> (188,10) COMM_PARAM_MOD::READ_COMPONENT_PARAMS_HASH (isz = 13610) (sz = 13617)
     [[ Inlining would exceed -inline-max-size value (13617>230) <1>]]
  -> EXTERN: (191,10) FREE_HASH_TBL_SLL
  -> EXTERN: (192,3) for_dealloc_allocatable
  -> EXTERN: (192,3) for_dealloc_all_nocheck


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(175,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #15382: vectorization support: call to function mpi_bcast_ cannot be vectorized   [ comm_param_mod.f90(176,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(160,54):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
comm_param_mod.f90(153,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
comm_param_mod.f90(153,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_read_comm_params_] comm_param_mod.f90:153

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :     202
            Global    :      28
            Local     :     174
        Regenerable   :      65
        Spilled       :       6
        
    Routine stack
        Variables     :     940 bytes*
            Reads     :      11 [1.45e+01 ~ 3.9%]
            Writes    :      51 [4.91e+01 ~ 13.3%]
        Spills        :      16 bytes*
            Reads     :       2 [1.96e+00 ~ 0.5%]
            Writes    :       2 [1.96e+00 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::GET_FILE_LENGTH

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::GET_FILE_LENGTH) [3/22=13.6%] comm_param_mod.f90(1181,14)
  -> EXTERN: (1193,20) GETLUN
  -> EXTERN: (1194,5) memcpy
  -> EXTERN: (1195,5) for_open
  -> EXTERN: (1195,28) for_trim
  -> EXTERN: (1197,8) for_read_seq_lis
  -> EXTERN: (1199,18) for_backspace
  -> EXTERN: (1202,18) for_cpstr
  -> EXTERN: (1204,14) for_read_seq_lis_xmit
  -> EXTERN: (1204,14) for_read_seq_lis
  -> EXTERN: (1206,29) GETLUN
  -> EXTERN: (1207,14) memcpy
  -> EXTERN: (1208,14) for_open
  -> EXTERN: (1213,11) for_read_seq_fmt
  -> EXTERN: (1220,14) for_close
  -> EXTERN: (1228,5) __getsp_inlined
  -> EXTERN: (1228,5) for_write_seq_lis
  -> EXTERN: (1228,5) __resetsp_inlined
  -> EXTERN: (1228,55) for_trim
  -> EXTERN: (1228,67) _alloca
  -> EXTERN: (1228,67) for_concat
  -> EXTERN: (1229,5) __getsp_inlined
  -> EXTERN: (1229,5) for_write_seq_lis
  -> EXTERN: (1229,5) __resetsp_inlined
  -> EXTERN: (1229,28) _alloca
  -> EXTERN: (1229,28) for_concat
  -> EXTERN: (1229,31) for_trim
  -> EXTERN: (1230,28) for_write_seq_lis
  -> EXTERN: (1230,28) __getsp_inlined
  -> EXTERN: (1230,28) __resetsp_inlined
  -> EXTERN: (1230,57) for_concat
  -> EXTERN: (1230,57) _alloca
  -> EXTERN: (1230,60) for_trim
  -> EXTERN: (1231,34) for_close
  -> EXTERN: (1232,5) for_stop_core
  -> EXTERN: (1235,5) __resetsp_inlined
  -> EXTERN: (1235,5) for_write_seq_lis
  -> EXTERN: (1235,5) __getsp_inlined
  -> EXTERN: (1235,53) for_trim
  -> EXTERN: (1235,63) for_concat
  -> EXTERN: (1235,63) _alloca
  -> EXTERN: (1236,5) __resetsp_inlined
  -> EXTERN: (1236,5) for_write_seq_lis
  -> EXTERN: (1236,5) __getsp_inlined
  -> EXTERN: (1236,28) for_concat
  -> EXTERN: (1236,28) _alloca
  -> EXTERN: (1236,31) for_trim
  -> EXTERN: (1237,28) for_write_seq_lis
  -> EXTERN: (1237,28) __resetsp_inlined
  -> EXTERN: (1237,28) __getsp_inlined
  -> EXTERN: (1237,57) _alloca
  -> EXTERN: (1237,57) for_concat
  -> EXTERN: (1237,60) for_trim
  -> EXTERN: (1238,32) for_close
  -> EXTERN: (1239,5) for_stop_core
  -> EXTERN: (1242,5) __resetsp_inlined
  -> EXTERN: (1242,5) for_write_seq_lis
  -> EXTERN: (1242,5) __getsp_inlined
  -> EXTERN: (1242,57) for_trim
  -> EXTERN: (1242,72) for_concat
  -> EXTERN: (1242,72) _alloca
  -> EXTERN: (1243,5) for_stop_core


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(1230,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1230:57) and at (1230:57)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1230:57) and at (1230:57)
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1230,60) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1230,57) ]
   remark #15382: vectorization support: call to function for_write_seq_lis cannot be vectorized   [ comm_param_mod.f90(1230,28) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1230:57) and at (1230:57)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1230:57) and at (1230:57)
LOOP END

LOOP BEGIN at comm_param_mod.f90(1231,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1231:34) and at (1231:34)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1231:34) and at (1231:34)
   remark #15382: vectorization support: call to function for_close cannot be vectorized   [ comm_param_mod.f90(1231,34) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1231:34) and at (1231:34)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1231:34) and at (1231:34)
   remark #25015: Estimate of max trip count of loop=256
LOOP END

LOOP BEGIN at comm_param_mod.f90(1237,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1237:57) and at (1237:57)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1237:57) and at (1237:57)
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1237,60) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1237,57) ]
   remark #15382: vectorization support: call to function for_write_seq_lis cannot be vectorized   [ comm_param_mod.f90(1237,28) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1237:57) and at (1237:57)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1237:57) and at (1237:57)
LOOP END

LOOP BEGIN at comm_param_mod.f90(1238,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1238:32) and at (1238:32)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1238:32) and at (1238:32)
   remark #15382: vectorization support: call to function for_close cannot be vectorized   [ comm_param_mod.f90(1238,32) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1238:32) and at (1238:32)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1238:32) and at (1238:32)
   remark #25015: Estimate of max trip count of loop=256
LOOP END


Non-optimizable loops:


LOOP BEGIN at comm_param_mod.f90(1196,5)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   remark #17102: loop was not parallelized: not a parallelization candidate
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(1194,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to increase the width of loads
comm_param_mod.f90(1194,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
comm_param_mod.f90(1207,14):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to increase the width of stores
comm_param_mod.f90(1207,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
comm_param_mod.f90(1181,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_get_file_length_] comm_param_mod.f90:1181

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   17[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     365
            Global    :     103
            Local     :     262
        Regenerable   :     210
        Spilled       :      11
        
    Routine stack
        Variables     :   138304 bytes*
            Reads     :      15 [7.01e+01 ~ 1.4%]
            Writes    :      86 [8.48e+02 ~ 17.5%]
        Spills        :      48 bytes*
            Reads     :      13 [1.27e+00 ~ 0.0%]
            Writes    :      13 [1.31e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::READ_PARAMFILE_TO_ASCII

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::READ_PARAMFILE_TO_ASCII) [4/22=18.2%] comm_param_mod.f90(1112,14)
  -> EXTERN: (1125,20) GETLUN
  -> EXTERN: (1126,5) memcpy
  -> EXTERN: (1127,5) for_open
  -> EXTERN: (1127,28) for_trim
  -> EXTERN: (1129,8) for_read_seq_lis
  -> EXTERN: (1131,18) for_backspace
  -> EXTERN: (1134,18) for_cpstr
  -> EXTERN: (1136,14) for_read_seq_lis_xmit
  -> EXTERN: (1136,14) for_read_seq_lis
  -> EXTERN: (1138,29) GETLUN
  -> EXTERN: (1139,14) memcpy
  -> EXTERN: (1140,14) for_open
  -> EXTERN: (1145,11) for_read_seq_fmt
  -> EXTERN: (1148,11) for_write_int_fmt
  -> EXTERN: (1153,14) for_close
  -> EXTERN: (1162,5) __getsp_inlined
  -> EXTERN: (1162,5) for_write_seq_lis
  -> EXTERN: (1162,5) __resetsp_inlined
  -> EXTERN: (1162,55) for_trim
  -> EXTERN: (1162,67) _alloca
  -> EXTERN: (1162,67) for_concat
  -> EXTERN: (1163,5) __getsp_inlined
  -> EXTERN: (1163,5) for_write_seq_lis
  -> EXTERN: (1163,5) __resetsp_inlined
  -> EXTERN: (1163,28) _alloca
  -> EXTERN: (1163,28) for_concat
  -> EXTERN: (1163,31) for_trim
  -> EXTERN: (1164,28) for_write_seq_lis
  -> EXTERN: (1164,28) __getsp_inlined
  -> EXTERN: (1164,28) __resetsp_inlined
  -> EXTERN: (1164,57) for_concat
  -> EXTERN: (1164,57) _alloca
  -> EXTERN: (1164,60) for_trim
  -> EXTERN: (1165,34) for_close
  -> EXTERN: (1166,5) for_stop_core
  -> EXTERN: (1169,5) __resetsp_inlined
  -> EXTERN: (1169,5) for_write_seq_lis
  -> EXTERN: (1169,5) __getsp_inlined
  -> EXTERN: (1169,53) for_trim
  -> EXTERN: (1169,63) for_concat
  -> EXTERN: (1169,63) _alloca
  -> EXTERN: (1170,5) __resetsp_inlined
  -> EXTERN: (1170,5) for_write_seq_lis
  -> EXTERN: (1170,5) __getsp_inlined
  -> EXTERN: (1170,28) for_concat
  -> EXTERN: (1170,28) _alloca
  -> EXTERN: (1170,31) for_trim
  -> EXTERN: (1171,28) for_write_seq_lis
  -> EXTERN: (1171,28) __resetsp_inlined
  -> EXTERN: (1171,28) __getsp_inlined
  -> EXTERN: (1171,57) _alloca
  -> EXTERN: (1171,57) for_concat
  -> EXTERN: (1171,60) for_trim
  -> EXTERN: (1172,32) for_close
  -> EXTERN: (1173,5) for_stop_core
  -> EXTERN: (1176,5) __resetsp_inlined
  -> EXTERN: (1176,5) for_write_seq_lis
  -> EXTERN: (1176,5) __getsp_inlined
  -> EXTERN: (1176,57) for_trim
  -> EXTERN: (1176,73) for_concat
  -> EXTERN: (1176,73) _alloca
  -> EXTERN: (1177,5) for_stop_core


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(1164,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1164:57) and at (1164:57)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1164:57) and at (1164:57)
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1164,60) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1164,57) ]
   remark #15382: vectorization support: call to function for_write_seq_lis cannot be vectorized   [ comm_param_mod.f90(1164,28) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1164:57) and at (1164:57)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1164:57) and at (1164:57)
LOOP END

LOOP BEGIN at comm_param_mod.f90(1165,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1165:34) and at (1165:34)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1165:34) and at (1165:34)
   remark #15382: vectorization support: call to function for_close cannot be vectorized   [ comm_param_mod.f90(1165,34) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1165:34) and at (1165:34)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1165:34) and at (1165:34)
   remark #25015: Estimate of max trip count of loop=256
LOOP END

LOOP BEGIN at comm_param_mod.f90(1171,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1171:57) and at (1171:57)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1171:57) and at (1171:57)
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1171,60) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1171,57) ]
   remark #15382: vectorization support: call to function for_write_seq_lis cannot be vectorized   [ comm_param_mod.f90(1171,28) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1171:57) and at (1171:57)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1171:57) and at (1171:57)
LOOP END

LOOP BEGIN at comm_param_mod.f90(1172,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1172:32) and at (1172:32)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (1172:32) and at (1172:32)
   remark #15382: vectorization support: call to function for_close cannot be vectorized   [ comm_param_mod.f90(1172,32) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1172:32) and at (1172:32)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (1172:32) and at (1172:32)
   remark #25015: Estimate of max trip count of loop=256
LOOP END


Non-optimizable loops:


LOOP BEGIN at comm_param_mod.f90(1128,5)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   remark #17102: loop was not parallelized: not a parallelization candidate
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(1126,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to increase the width of loads
comm_param_mod.f90(1126,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (16, 0)
comm_param_mod.f90(1139,14):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to increase the width of stores
comm_param_mod.f90(1139,14):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
comm_param_mod.f90(1112,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_read_paramfile_to_ascii_] comm_param_mod.f90:1112

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     380
            Global    :     105
            Local     :     275
        Regenerable   :     219
        Spilled       :      12
        
    Routine stack
        Variables     :   138344 bytes*
            Reads     :      15 [7.01e+01 ~ 1.4%]
            Writes    :      92 [8.51e+02 ~ 17.5%]
        Spills        :      56 bytes*
            Reads     :      14 [1.71e+00 ~ 0.0%]
            Writes    :      14 [1.47e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::PUT_ASCII_INTO_HASHTABLE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::PUT_ASCII_INTO_HASHTABLE) [5/22=22.7%] comm_param_mod.f90(1264,14)
  -> INLINE: (1272,13) COMM_PARAM_MOD::GET_TOKENS (isz = 118) (sz = 141)
    -> (879,10) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
       [[ Inlining would exceed -inline-max-size value (440>230) <1>]]
    -> EXTERN: (882,8) for_cpystr
    -> (883,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
       [[ Inlining would exceed -inline-max-size value (440>230) <1>]]
  -> EXTERN: (1272,13) __resetsp_inlined
  -> EXTERN: (1272,13) __getsp_inlined
  -> EXTERN: (1272,24) for_trim
  -> EXTERN: (1272,59) _alloca
  -> EXTERN: (1272,59) memmove
  -> EXTERN: (1276,8) __resetsp_inlined
  -> EXTERN: (1276,8) for_cpystr
  -> EXTERN: (1276,8) __getsp_inlined
  -> INLINE: (1276,14) COMM_PARAM_MOD::GET_TOKEN (isz = 486) (sz = 509)
    -> INLINE: (862,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
      -> EXTERN: (940,13) for_len_trim
      -> EXTERN: (942,11) for_cpystr
      -> EXTERN: (943,11) for_cpystr
      -> EXTERN: (953,12) for_f90_index
      -> EXTERN: (961,14) for_f90_index
      -> EXTERN: (980,12) for_f90_index
    -> EXTERN: (864,5) for_cpystr
  -> EXTERN: (1276,14) _alloca
  -> EXTERN: (1276,52) memmove
  -> EXTERN: (1276,52) _alloca
  -> EXTERN: (1277,8) __resetsp_inlined
  -> EXTERN: (1277,8) for_cpystr
  -> EXTERN: (1277,8) __getsp_inlined
  -> INLINE: (1277,14) COMM_PARAM_MOD::GET_TOKEN (isz = 486) (sz = 509)
    -> INLINE: (862,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
      -> EXTERN: (940,13) for_len_trim
      -> EXTERN: (942,11) for_cpystr
      -> EXTERN: (943,11) for_cpystr
      -> EXTERN: (953,12) for_f90_index
      -> EXTERN: (961,14) for_f90_index
      -> EXTERN: (980,12) for_f90_index
    -> EXTERN: (864,5) for_cpystr
  -> EXTERN: (1277,14) _alloca
  -> EXTERN: (1277,52) memmove
  -> EXTERN: (1277,52) _alloca
  -> EXTERN: (1278,13) tolower_
  -> EXTERN: (1279,15) for_cpstr
  -> EXTERN: (1280,13) PUT_HASH_TBL_SLL
  -> EXTERN: (1280,35) for_trim
  -> EXTERN: (1280,45) for_trim


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(876,5) inlined into comm_param_mod.f90(1272,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(880,5) inlined into comm_param_mod.f90(1272,13)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15523: loop was not vectorized: loop control variable N was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at comm_param_mod.f90(860,5) inlined into comm_param_mod.f90(1276,14)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(935,8) inlined into comm_param_mod.f90(1276,14)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (935:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(941,8) inlined into comm_param_mod.f90(1276,14)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (942:11) and at (943:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (943:11) and at (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(942,11) ]
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(943,11) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (942:11) and at (943:11)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (943:11) and at (942:11)
LOOP END

LOOP BEGIN at comm_param_mod.f90(947,8) inlined into comm_param_mod.f90(1276,14)
   remark #25408: memset generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at comm_param_mod.f90(972,17) inlined into comm_param_mod.f90(1276,14)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (972:17) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(988,8) inlined into comm_param_mod.f90(1276,14)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (988:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(992,8) inlined into comm_param_mod.f90(1276,14)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (992:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(860,5) inlined into comm_param_mod.f90(1277,14)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(935,8) inlined into comm_param_mod.f90(1277,14)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (935:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(941,8) inlined into comm_param_mod.f90(1277,14)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (942:11) and at (943:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (943:11) and at (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(942,11) ]
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(943,11) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (942:11) and at (943:11)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (943:11) and at (942:11)
LOOP END

LOOP BEGIN at comm_param_mod.f90(947,8) inlined into comm_param_mod.f90(1277,14)
   remark #25408: memset generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at comm_param_mod.f90(972,17) inlined into comm_param_mod.f90(1277,14)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (972:17) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(988,8) inlined into comm_param_mod.f90(1277,14)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (988:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(992,8) inlined into comm_param_mod.f90(1277,14)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (992:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END


Non-optimizable loops:


LOOP BEGIN at comm_param_mod.f90(1271,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ comm_param_mod.f90(985,5) ]
   remark #17102: loop was not parallelized: not a parallelization candidate

   LOOP BEGIN at comm_param_mod.f90(985,5) inlined into comm_param_mod.f90(1276,14)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      remark #17102: loop was not parallelized: not a parallelization candidate
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(985,5) inlined into comm_param_mod.f90(1277,14)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      remark #17102: loop was not parallelized: not a parallelization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(1272,59):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(1276,52):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(947,8):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 0)
comm_param_mod.f90(1277,52):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(947,8):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 0)
comm_param_mod.f90(1264,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_put_ascii_into_hashtable_] comm_param_mod.f90:1264

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     321
            Global    :     107
            Local     :     214
        Regenerable   :     117
        Spilled       :      22
        
    Routine stack
        Variables     :    4304 bytes*
            Reads     :       5 [5.50e+01 ~ 1.8%]
            Writes    :      24 [6.28e+01 ~ 2.1%]
        Spills        :     176 bytes*
            Reads     :      45 [1.37e+02 ~ 4.6%]
            Writes    :      32 [6.97e+01 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::READ_GLOBAL_PARAMS_HASH

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::READ_GLOBAL_PARAMS_HASH) [6/22=27.3%] comm_param_mod.f90(248,14)
  -> (258,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (259,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (261,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (262,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (263,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (264,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (265,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (266,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (267,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (268,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (269,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (271,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (272,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (273,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (274,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (275,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (276,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (277,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (278,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> INLINE: (279,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>253) <1>]]
  -> INLINE: (280,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (282,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (283,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (285,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (287,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (288,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (291,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (292,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (293,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (294,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (295,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (296,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (297,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (298,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (299,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (301,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> INLINE: (303,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> EXTERN: (305,5) for_alloc_allocatable
  -> EXTERN: (305,5) for_check_mult_overflow64
  -> EXTERN: (306,5) for_alloc_allocatable
  -> EXTERN: (306,5) for_check_mult_overflow64
  -> EXTERN: (307,5) for_alloc_allocatable
  -> EXTERN: (307,5) for_check_mult_overflow64
  -> EXTERN: (308,5) for_alloc_allocatable
  -> EXTERN: (308,5) for_check_mult_overflow64
  -> EXTERN: (309,5) for_alloc_allocatable
  -> EXTERN: (309,5) for_check_mult_overflow64
  -> EXTERN: (311,13) INT2STRING
  -> EXTERN: (312,13) __getsp_inlined
  -> INLINE: (312,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> EXTERN: (312,13) __resetsp_inlined
  -> EXTERN: (312,65) _alloca
  -> EXTERN: (312,65) for_concat
  -> EXTERN: (313,13) __getsp_inlined
  -> INLINE: (313,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> EXTERN: (313,13) __resetsp_inlined
  -> EXTERN: (313,74) _alloca
  -> EXTERN: (313,74) for_concat
  -> EXTERN: (314,13) __getsp_inlined
  -> INLINE: (314,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> EXTERN: (314,13) __resetsp_inlined
  -> EXTERN: (314,65) _alloca
  -> EXTERN: (314,65) for_concat
  -> EXTERN: (315,13) __getsp_inlined
  -> INLINE: (315,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> EXTERN: (315,13) __resetsp_inlined
  -> EXTERN: (315,66) _alloca
  -> EXTERN: (315,66) for_concat
  -> EXTERN: (316,13) __getsp_inlined
  -> INLINE: (316,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
    -> (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
       [[ Inlining would exceed -inline-max-size value (478>230) <1>]]
  -> EXTERN: (316,13) __resetsp_inlined
  -> EXTERN: (316,67) _alloca
  -> EXTERN: (316,67) for_concat


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(310,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(248,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_read_global_params_hash_] comm_param_mod.f90:248

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :     823
            Global    :      95
            Local     :     728
        Regenerable   :     424
        Spilled       :       7
        
    Routine stack
        Variables     :     298 bytes*
            Reads     :      34 [8.28e+01 ~ 3.2%]
            Writes    :      45 [1.59e+02 ~ 6.1%]
        Spills        :      16 bytes*
            Reads     :       6 [2.18e+01 ~ 0.8%]
            Writes    :       2 [1.96e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH) [7/22=31.8%] comm_param_mod.f90(1316,14)
  -> EXTERN: (1332,5) __resetsp_inlined
  -> EXTERN: (1332,5) for_cpystr
  -> EXTERN: (1332,5) __getsp_inlined
  -> EXTERN: (1332,9) for_trim
  -> EXTERN: (1332,14) _alloca
  -> EXTERN: (1333,10) tolower_
  -> EXTERN: (1334,10) GET_HASH_TBL_SLL
  -> EXTERN: (1334,32) for_trim
  -> EXTERN: (1336,8) for_write_seq_lis
  -> EXTERN: (1336,8) __resetsp_inlined
  -> EXTERN: (1336,8) __getsp_inlined
  -> EXTERN: (1336,58) for_trim
  -> EXTERN: (1336,63) _alloca
  -> EXTERN: (1336,72) _alloca
  -> EXTERN: (1336,72) for_concat
  -> EXTERN: (1337,8) for_write_seq_lis
  -> EXTERN: (1338,8) for_stop_core
  -> EXTERN: (1342,8) for_read_int_lis
  -> EXTERN: (1344,8) for_read_int_lis
  -> EXTERN: (1346,8) for_read_int_lis
  -> EXTERN: (1348,8) for_read_int_lis
  -> EXTERN: (1350,8) for_read_int_lis
  -> EXTERN: (1352,8) for_read_int_lis
  -> EXTERN: (1354,8) for_write_seq_lis
  -> EXTERN: (1357,5) for_dealloc_allocatable
  -> EXTERN: (1358,3) for_dealloc_allocatable


    Report from: Code generation optimizations [cg]

comm_param_mod.f90(1330,40):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (16, 0)
comm_param_mod.f90(1316,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_get_parameter_from_hash_] comm_param_mod.f90:1316

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0-zmm2]
        
    Routine temporaries
        Total         :     204
            Global    :      35
            Local     :     169
        Regenerable   :     109
        Spilled       :      10
        
    Routine stack
        Variables     :    1008 bytes*
            Reads     :      15 [4.91e+00 ~ 2.3%]
            Writes    :      58 [2.85e+01 ~ 13.5%]
        Spills        :      40 bytes*
            Reads     :       6 [3.50e+00 ~ 1.7%]
            Writes    :       5 [4.20e+00 ~ 2.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::GET_PARAMETER_ARG

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::GET_PARAMETER_ARG) [8/22=36.4%] comm_param_mod.f90(775,14)
  -> EXTERN: (791,15) for_iargc
  -> EXTERN: (792,13) for_getarg
  -> INLINE: (794,13) COMM_PARAM_MOD::PARSE_PARAMETER (isz = 1013) (sz = 1042)
    -> EXTERN: (742,10) __getsp_inlined
    -> INLINE: (742,10) COMM_PARAM_MOD::GET_TOKENS (isz = 118) (sz = 141)
      -> (879,10) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
         [[ Inlining would exceed -inline-max-size value (440>230) <1>]]
      -> EXTERN: (882,8) for_cpystr
      -> (883,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
         [[ Inlining would exceed -inline-max-size value (440>230) <1>]]
    -> EXTERN: (742,10) __resetsp_inlined
    -> EXTERN: (742,21) for_trim
    -> EXTERN: (742,26) _alloca
    -> EXTERN: (742,49) _alloca
    -> EXTERN: (742,49) memmove
    -> EXTERN: (747,5) __getsp_inlined
    -> EXTERN: (747,5) memmove
    -> EXTERN: (747,5) __resetsp_inlined
    -> EXTERN: (747,11) _alloca
    -> INLINE: (747,11) COMM_PARAM_MOD::GET_TOKEN (isz = 486) (sz = 509)
      -> (862,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
         [[ Inlining inhibited by overrideable criterion  <2>]]
      -> EXTERN: (864,5) for_cpystr
    -> EXTERN: (747,49) _alloca
    -> EXTERN: (747,49) memmove
    -> EXTERN: (748,5) __getsp_inlined
    -> EXTERN: (748,5) memmove
    -> EXTERN: (748,5) __resetsp_inlined
    -> EXTERN: (748,13) _alloca
    -> INLINE: (748,13) COMM_PARAM_MOD::GET_TOKEN (isz = 486) (sz = 509)
      -> INLINE: (862,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
        -> EXTERN: (940,13) for_len_trim
        -> EXTERN: (942,11) for_cpystr
        -> EXTERN: (943,11) for_cpystr
        -> EXTERN: (953,12) for_f90_index
        -> EXTERN: (961,14) for_f90_index
        -> EXTERN: (980,12) for_f90_index
      -> EXTERN: (864,5) for_cpystr
    -> EXTERN: (748,51) _alloca
    -> EXTERN: (748,51) memmove
    -> EXTERN: (749,5) for_cpystr
    -> EXTERN: (750,10) tolower_
    -> EXTERN: (751,10) tolower_
    -> EXTERN: (752,9) for_trim
    -> EXTERN: (752,19) for_cpstr
    -> EXTERN: (752,22) for_trim
    -> EXTERN: (754,11) for_read_int_lis
    -> EXTERN: (756,11) for_read_int_lis
    -> EXTERN: (758,11) for_read_int_lis
    -> EXTERN: (760,11) for_read_int_lis
    -> EXTERN: (762,11) for_read_int_lis
    -> EXTERN: (764,11) for_read_int_lis
    -> EXTERN: (766,11) for_write_seq_lis
  -> EXTERN: (803,8) __getsp_inlined
  -> EXTERN: (803,8) for_write_seq_lis
  -> EXTERN: (803,8) __resetsp_inlined
  -> EXTERN: (803,69) for_trim
  -> EXTERN: (803,74) _alloca
  -> EXTERN: (803,83) _alloca
  -> EXTERN: (803,83) for_concat
  -> EXTERN: (804,26) for_write_seq_lis
  -> EXTERN: (804,26) __getsp_inlined
  -> EXTERN: (804,26) __resetsp_inlined
  -> EXTERN: (804,37) for_trim
  -> EXTERN: (804,42) _alloca
  -> EXTERN: (805,8) for_stop_core


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(876,5) inlined into comm_param_mod.f90(794,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(880,5) inlined into comm_param_mod.f90(794,13)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15523: loop was not vectorized: loop control variable N was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at comm_param_mod.f90(860,5) inlined into comm_param_mod.f90(794,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 0.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(860,5) inlined into comm_param_mod.f90(794,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(935,8) inlined into comm_param_mod.f90(794,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (935:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(941,8) inlined into comm_param_mod.f90(794,13)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (942:11) and at (943:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (943:11) and at (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(942,11) ]
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(943,11) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (942:11) and at (943:11)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (943:11) and at (942:11)
LOOP END

LOOP BEGIN at comm_param_mod.f90(947,8) inlined into comm_param_mod.f90(794,13)
   remark #25408: memset generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at comm_param_mod.f90(972,17) inlined into comm_param_mod.f90(794,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (972:17) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(988,8) inlined into comm_param_mod.f90(794,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (988:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(992,8) inlined into comm_param_mod.f90(794,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (992:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END


Non-optimizable loops:


LOOP BEGIN at comm_param_mod.f90(791,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ comm_param_mod.f90(985,5) ]
   remark #17102: loop was not parallelized: not a parallelization candidate

   LOOP BEGIN at comm_param_mod.f90(985,5) inlined into comm_param_mod.f90(794,13)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      remark #17102: loop was not parallelized: not a parallelization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(742,49):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(747,49):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(747,5):remark #34014: optimization advice for memmove: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
comm_param_mod.f90(747,5):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(748,51):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(947,8):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 0)
comm_param_mod.f90(748,5):remark #34014: optimization advice for memmove: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
comm_param_mod.f90(748,5):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(775,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_get_parameter_arg_] comm_param_mod.f90:775

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     396
            Global    :     109
            Local     :     287
        Regenerable   :     208
        Spilled       :      22
        
    Routine stack
        Variables     :    3292 bytes*
            Reads     :       9 [3.08e+01 ~ 3.9%]
            Writes    :      48 [2.77e+01 ~ 3.5%]
        Spills        :     136 bytes*
            Reads     :      40 [3.61e+01 ~ 4.5%]
            Writes    :      23 [2.37e+01 ~ 3.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::TOKENIZE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::TOKENIZE) [9/22=40.9%] comm_param_mod.f90(920,14)
  -> EXTERN: (940,13) for_len_trim
  -> EXTERN: (942,11) for_cpystr
  -> EXTERN: (943,11) for_cpystr
  -> EXTERN: (953,12) for_f90_index
  -> EXTERN: (961,14) for_f90_index
  -> EXTERN: (980,12) for_f90_index


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(935,8)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15389: vectorization support: reference ext(:) has unaligned access
   remark #15388: vectorization support: reference at (935:8) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(941,8)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between group(:) (942:11) and group(:) (943:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between group(:) (943:11) and group(:) (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between op(i-1) (942:11) and op(i-1) (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between op(i-1) (942:11) and op(i-1) (942:11)
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(942,11) ]
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(943,11) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between group(:) (942:11) and group(:) (943:11)
   remark #15346: vector dependence: assumed OUTPUT dependence between group(:) (943:11) and group(:) (942:11)
LOOP END

LOOP BEGIN at comm_param_mod.f90(947,8)
   remark #25408: memset generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at comm_param_mod.f90(972,17)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15389: vectorization support: reference ext(:) has unaligned access
   remark #15388: vectorization support: reference at (972:17) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(975,17)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15389: vectorization support: reference ext(:) has unaligned access
   remark #15388: vectorization support: reference at (975:17) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(988,8)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15389: vectorization support: reference ext(:) has unaligned access
   remark #15388: vectorization support: reference at (988:8) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(990,8)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15389: vectorization support: reference ext(:) has unaligned access
   remark #15388: vectorization support: reference at (990:8) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(992,8)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15389: vectorization support: reference ext(:) has unaligned access
   remark #15388: vectorization support: reference at (992:8) has aligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 0.500
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END


Non-optimizable loops:


LOOP BEGIN at comm_param_mod.f90(985,5)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   remark #17102: loop was not parallelized: not a parallelization candidate
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(947,8):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 0)
comm_param_mod.f90(920,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_tokenize_] comm_param_mod.f90:920

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     108
            Global    :      44
            Local     :      64
        Regenerable   :      22
        Spilled       :      16
        
    Routine stack
        Variables     :     512 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      88 bytes*
            Reads     :      24 [1.44e+01 ~ 9.1%]
            Writes    :      18 [5.81e+00 ~ 3.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::READ_DATA_PARAMS_HASH

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::READ_DATA_PARAMS_HASH) [10/22=45.5%] comm_param_mod.f90(322,14)
  -> (332,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (333,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (334,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (335,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (336,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (339,5) for_alloc_allocatable
  -> EXTERN: (339,5) for_check_mult_overflow64
  -> EXTERN: (339,5) for_alloc_allocatable
  -> EXTERN: (339,5) for_check_mult_overflow64
  -> EXTERN: (340,5) for_alloc_allocatable
  -> EXTERN: (340,5) for_check_mult_overflow64
  -> EXTERN: (340,5) for_alloc_allocatable
  -> EXTERN: (340,5) for_check_mult_overflow64
  -> EXTERN: (340,5) for_alloc_allocatable
  -> EXTERN: (340,5) for_check_mult_overflow64
  -> EXTERN: (341,5) for_alloc_allocatable
  -> EXTERN: (341,5) for_check_mult_overflow64
  -> EXTERN: (341,5) for_alloc_allocatable
  -> EXTERN: (341,5) for_check_mult_overflow64
  -> EXTERN: (341,5) for_alloc_allocatable
  -> EXTERN: (341,5) for_check_mult_overflow64
  -> EXTERN: (342,5) for_alloc_allocatable
  -> EXTERN: (342,5) for_check_mult_overflow64
  -> EXTERN: (342,5) for_alloc_allocatable
  -> EXTERN: (342,5) for_check_mult_overflow64
  -> EXTERN: (342,5) for_alloc_allocatable
  -> EXTERN: (342,5) for_check_mult_overflow64
  -> EXTERN: (343,5) for_alloc_allocatable
  -> EXTERN: (343,5) for_check_mult_overflow64
  -> EXTERN: (344,5) for_alloc_allocatable
  -> EXTERN: (344,5) for_check_mult_overflow64
  -> EXTERN: (344,5) for_alloc_allocatable
  -> EXTERN: (344,5) for_check_mult_overflow64
  -> EXTERN: (345,5) for_alloc_allocatable
  -> EXTERN: (345,5) for_check_mult_overflow64
  -> EXTERN: (345,5) for_alloc_allocatable
  -> EXTERN: (345,5) for_check_mult_overflow64
  -> EXTERN: (345,5) for_alloc_allocatable
  -> EXTERN: (345,5) for_check_mult_overflow64
  -> EXTERN: (345,5) for_alloc_allocatable
  -> EXTERN: (345,5) for_check_mult_overflow64
  -> EXTERN: (346,5) for_alloc_allocatable
  -> EXTERN: (346,5) for_check_mult_overflow64
  -> EXTERN: (346,5) for_alloc_allocatable
  -> EXTERN: (346,5) for_check_mult_overflow64
  -> EXTERN: (346,5) for_alloc_allocatable
  -> EXTERN: (346,5) for_check_mult_overflow64
  -> EXTERN: (347,5) for_alloc_allocatable
  -> EXTERN: (347,5) for_check_mult_overflow64
  -> EXTERN: (347,5) for_alloc_allocatable
  -> EXTERN: (347,5) for_check_mult_overflow64
  -> EXTERN: (348,5) for_alloc_allocatable
  -> EXTERN: (348,5) for_check_mult_overflow64
  -> EXTERN: (348,5) for_alloc_allocatable
  -> EXTERN: (348,5) for_check_mult_overflow64
  -> EXTERN: (348,5) for_alloc_allocatable
  -> EXTERN: (348,5) for_check_mult_overflow64
  -> EXTERN: (349,5) for_alloc_allocatable
  -> EXTERN: (349,5) for_check_mult_overflow64
  -> EXTERN: (349,5) for_alloc_allocatable
  -> EXTERN: (349,5) for_check_mult_overflow64
  -> EXTERN: (349,5) for_alloc_allocatable
  -> EXTERN: (349,5) for_check_mult_overflow64
  -> EXTERN: (350,5) for_alloc_allocatable
  -> EXTERN: (350,5) for_check_mult_overflow64
  -> EXTERN: (351,5) for_alloc_allocatable
  -> EXTERN: (351,5) for_check_mult_overflow64
  -> EXTERN: (354,13) INT2STRING
  -> EXTERN: (355,13) __getsp_inlined
  -> (355,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (355,13) __resetsp_inlined
  -> EXTERN: (355,57) _alloca
  -> EXTERN: (355,57) for_concat
  -> EXTERN: (356,13) __getsp_inlined
  -> (356,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (356,13) __resetsp_inlined
  -> EXTERN: (356,60) _alloca
  -> EXTERN: (356,60) for_concat
  -> EXTERN: (357,13) __getsp_inlined
  -> (357,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (357,13) __resetsp_inlined
  -> EXTERN: (357,55) _alloca
  -> EXTERN: (357,55) for_concat
  -> EXTERN: (358,13) __getsp_inlined
  -> (358,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (358,13) __resetsp_inlined
  -> EXTERN: (358,62) _alloca
  -> EXTERN: (358,62) for_concat
  -> EXTERN: (359,13) __getsp_inlined
  -> (359,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (359,13) __resetsp_inlined
  -> EXTERN: (359,55) _alloca
  -> EXTERN: (359,55) for_concat
  -> EXTERN: (360,13) __getsp_inlined
  -> (360,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (360,13) __resetsp_inlined
  -> EXTERN: (360,54) _alloca
  -> EXTERN: (360,54) for_concat
  -> EXTERN: (361,13) __getsp_inlined
  -> (361,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (361,13) __resetsp_inlined
  -> EXTERN: (361,54) _alloca
  -> EXTERN: (361,54) for_concat
  -> EXTERN: (362,13) __getsp_inlined
  -> (362,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (362,13) __resetsp_inlined
  -> EXTERN: (362,62) _alloca
  -> EXTERN: (362,62) for_concat
  -> EXTERN: (363,13) __getsp_inlined
  -> (363,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (363,13) __resetsp_inlined
  -> EXTERN: (363,57) _alloca
  -> EXTERN: (363,57) for_concat
  -> EXTERN: (364,13) __getsp_inlined
  -> (364,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (364,13) __resetsp_inlined
  -> EXTERN: (364,59) _alloca
  -> EXTERN: (364,59) for_concat
  -> EXTERN: (365,13) __getsp_inlined
  -> (365,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (365,13) __resetsp_inlined
  -> EXTERN: (365,71) _alloca
  -> EXTERN: (365,71) for_concat
  -> EXTERN: (366,13) __getsp_inlined
  -> (366,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (366,13) __resetsp_inlined
  -> EXTERN: (366,58) _alloca
  -> EXTERN: (366,58) for_concat
  -> EXTERN: (367,13) __getsp_inlined
  -> (367,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (367,13) __resetsp_inlined
  -> EXTERN: (367,64) _alloca
  -> EXTERN: (367,64) for_concat
  -> EXTERN: (368,13) __getsp_inlined
  -> (368,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (368,13) __resetsp_inlined
  -> EXTERN: (368,58) _alloca
  -> EXTERN: (368,58) for_concat
  -> EXTERN: (369,13) __getsp_inlined
  -> (369,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (369,13) __resetsp_inlined
  -> EXTERN: (369,63) _alloca
  -> EXTERN: (369,63) for_concat
  -> EXTERN: (370,13) __getsp_inlined
  -> (370,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (370,13) __resetsp_inlined
  -> EXTERN: (370,67) _alloca
  -> EXTERN: (370,67) for_concat
  -> EXTERN: (371,13) __getsp_inlined
  -> (371,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (371,13) __resetsp_inlined
  -> EXTERN: (371,62) _alloca
  -> EXTERN: (371,62) for_concat
  -> EXTERN: (372,13) __getsp_inlined
  -> (372,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (372,13) __resetsp_inlined
  -> EXTERN: (372,64) _alloca
  -> EXTERN: (372,64) for_concat
  -> EXTERN: (373,13) __getsp_inlined
  -> (373,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (373,13) __resetsp_inlined
  -> EXTERN: (373,63) _alloca
  -> EXTERN: (373,63) for_concat
  -> EXTERN: (374,13) __getsp_inlined
  -> (374,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (374,13) __resetsp_inlined
  -> EXTERN: (374,62) _alloca
  -> EXTERN: (374,62) for_concat
  -> EXTERN: (375,13) __getsp_inlined
  -> (375,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (375,13) __resetsp_inlined
  -> EXTERN: (375,62) _alloca
  -> EXTERN: (375,62) for_concat
  -> EXTERN: (376,13) __getsp_inlined
  -> (376,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (376,13) __resetsp_inlined
  -> EXTERN: (376,64) _alloca
  -> EXTERN: (376,64) for_concat
  -> EXTERN: (377,13) __getsp_inlined
  -> (377,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (377,13) __resetsp_inlined
  -> EXTERN: (377,59) _alloca
  -> EXTERN: (377,59) for_concat
  -> EXTERN: (378,13) __getsp_inlined
  -> (378,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (378,13) __resetsp_inlined
  -> EXTERN: (378,65) _alloca
  -> EXTERN: (378,65) for_concat
  -> EXTERN: (379,13) __getsp_inlined
  -> (379,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (379,13) __resetsp_inlined
  -> EXTERN: (379,59) _alloca
  -> EXTERN: (379,59) for_concat
  -> EXTERN: (380,13) __getsp_inlined
  -> (380,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (380,13) __resetsp_inlined
  -> EXTERN: (380,59) _alloca
  -> EXTERN: (380,59) for_concat
  -> EXTERN: (381,13) __getsp_inlined
  -> (381,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (381,13) __resetsp_inlined
  -> EXTERN: (381,64) _alloca
  -> EXTERN: (381,64) for_concat
  -> EXTERN: (382,13) __getsp_inlined
  -> (382,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (382,13) __resetsp_inlined
  -> EXTERN: (382,64) _alloca
  -> EXTERN: (382,64) for_concat
  -> EXTERN: (383,13) __getsp_inlined
  -> (383,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (383,13) __resetsp_inlined
  -> EXTERN: (383,62) _alloca
  -> EXTERN: (383,62) for_concat
  -> EXTERN: (384,13) __getsp_inlined
  -> (384,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (384,13) __resetsp_inlined
  -> EXTERN: (384,66) _alloca
  -> EXTERN: (384,66) for_concat
  -> EXTERN: (385,13) __getsp_inlined
  -> (385,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (385,13) __resetsp_inlined
  -> EXTERN: (385,71) _alloca
  -> EXTERN: (385,71) for_concat
  -> EXTERN: (388,16) INT2STRING
  -> (389,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (389,16) __getsp_inlined
  -> EXTERN: (389,16) __resetsp_inlined
  -> EXTERN: (389,80) for_concat
  -> EXTERN: (389,80) _alloca
  -> EXTERN: (395,5) for_realloc_lhs


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(353,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at comm_param_mod.f90(387,8)
      remark #17102: loop was not parallelized: not a parallelization candidate
      remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
   LOOP END
LOOP END

LOOP BEGIN at comm_param_mod.f90(395,5)
<Peeled loop for vectorization>
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at comm_param_mod.f90(395,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference cpar(:) has aligned access
   remark #15388: vectorization support: reference cpar(:) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.417
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.950 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at comm_param_mod.f90(395,5)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(322,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_read_data_params_hash_] comm_param_mod.f90:322

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :    2226
            Global    :     223
            Local     :    2003
        Regenerable   :     469
        Spilled       :       9
        
    Routine stack
        Variables     :    1389 bytes*
            Reads     :      66 [2.94e+02 ~ 3.0%]
            Writes    :     144 [9.61e+02 ~ 9.8%]
        Spills        :      32 bytes*
            Reads     :      39 [2.38e+02 ~ 2.4%]
            Writes    :       4 [8.31e+00 ~ 0.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::READ_COMPONENT_PARAMS_HASH

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::READ_COMPONENT_PARAMS_HASH) [11/22=50.0%] comm_param_mod.f90(400,14)
  -> (410,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (411,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> (412,10) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (415,5) for_alloc_allocatable
  -> EXTERN: (415,5) for_check_mult_overflow64
  -> EXTERN: (415,5) for_alloc_allocatable
  -> EXTERN: (415,5) for_check_mult_overflow64
  -> EXTERN: (415,5) for_alloc_allocatable
  -> EXTERN: (415,5) for_check_mult_overflow64
  -> EXTERN: (415,5) for_alloc_allocatable
  -> EXTERN: (415,5) for_check_mult_overflow64
  -> EXTERN: (416,5) for_alloc_allocatable
  -> EXTERN: (416,5) for_check_mult_overflow64
  -> EXTERN: (416,5) for_alloc_allocatable
  -> EXTERN: (416,5) for_check_mult_overflow64
  -> EXTERN: (416,5) for_alloc_allocatable
  -> EXTERN: (416,5) for_check_mult_overflow64
  -> EXTERN: (416,5) for_alloc_allocatable
  -> EXTERN: (416,5) for_check_mult_overflow64
  -> EXTERN: (417,5) for_alloc_allocatable
  -> EXTERN: (417,5) for_check_mult_overflow64
  -> EXTERN: (417,5) for_alloc_allocatable
  -> EXTERN: (417,5) for_check_mult_overflow64
  -> EXTERN: (417,5) for_alloc_allocatable
  -> EXTERN: (417,5) for_check_mult_overflow64
  -> EXTERN: (418,5) for_alloc_allocatable
  -> EXTERN: (418,5) for_check_mult_overflow64
  -> EXTERN: (418,5) for_alloc_allocatable
  -> EXTERN: (418,5) for_check_mult_overflow64
  -> EXTERN: (418,5) for_alloc_allocatable
  -> EXTERN: (418,5) for_check_mult_overflow64
  -> EXTERN: (418,5) for_alloc_allocatable
  -> EXTERN: (418,5) for_check_mult_overflow64
  -> EXTERN: (419,5) for_alloc_allocatable
  -> EXTERN: (419,5) for_check_mult_overflow64
  -> EXTERN: (419,5) for_alloc_allocatable
  -> EXTERN: (419,5) for_check_mult_overflow64
  -> EXTERN: (419,5) for_alloc_allocatable
  -> EXTERN: (419,5) for_check_mult_overflow64
  -> EXTERN: (420,5) for_alloc_allocatable
  -> EXTERN: (420,5) for_check_mult_overflow64
  -> EXTERN: (420,5) for_alloc_allocatable
  -> EXTERN: (420,5) for_check_mult_overflow64
  -> EXTERN: (420,5) for_alloc_allocatable
  -> EXTERN: (420,5) for_check_mult_overflow64
  -> EXTERN: (420,5) for_alloc_allocatable
  -> EXTERN: (420,5) for_check_mult_overflow64
  -> EXTERN: (421,5) for_alloc_allocatable
  -> EXTERN: (421,5) for_check_mult_overflow64
  -> EXTERN: (422,5) for_alloc_allocatable
  -> EXTERN: (422,5) for_check_mult_overflow64
  -> EXTERN: (422,5) for_alloc_allocatable
  -> EXTERN: (422,5) for_check_mult_overflow64
  -> EXTERN: (423,5) for_alloc_allocatable
  -> EXTERN: (423,5) for_check_mult_overflow64
  -> EXTERN: (423,5) for_alloc_allocatable
  -> EXTERN: (423,5) for_check_mult_overflow64
  -> EXTERN: (423,5) for_alloc_allocatable
  -> EXTERN: (423,5) for_check_mult_overflow64
  -> EXTERN: (424,5) for_alloc_allocatable
  -> EXTERN: (424,5) for_check_mult_overflow64
  -> EXTERN: (424,5) for_alloc_allocatable
  -> EXTERN: (424,5) for_check_mult_overflow64
  -> EXTERN: (424,5) for_alloc_allocatable
  -> EXTERN: (424,5) for_check_mult_overflow64
  -> EXTERN: (425,5) for_alloc_allocatable
  -> EXTERN: (425,5) for_check_mult_overflow64
  -> EXTERN: (425,5) for_alloc_allocatable
  -> EXTERN: (425,5) for_check_mult_overflow64
  -> EXTERN: (425,5) for_alloc_allocatable
  -> EXTERN: (425,5) for_check_mult_overflow64
  -> EXTERN: (426,5) for_alloc_allocatable
  -> EXTERN: (426,5) for_check_mult_overflow64
  -> EXTERN: (426,5) for_alloc_allocatable
  -> EXTERN: (426,5) for_check_mult_overflow64
  -> EXTERN: (426,5) for_alloc_allocatable
  -> EXTERN: (426,5) for_check_mult_overflow64
  -> EXTERN: (426,5) for_alloc_allocatable
  -> EXTERN: (426,5) for_check_mult_overflow64
  -> EXTERN: (427,5) for_alloc_allocatable
  -> EXTERN: (427,5) for_check_mult_overflow64
  -> EXTERN: (427,5) for_alloc_allocatable
  -> EXTERN: (427,5) for_check_mult_overflow64
  -> EXTERN: (427,5) for_alloc_allocatable
  -> EXTERN: (427,5) for_check_mult_overflow64
  -> EXTERN: (428,5) for_alloc_allocatable
  -> EXTERN: (428,5) for_check_mult_overflow64
  -> EXTERN: (428,5) for_alloc_allocatable
  -> EXTERN: (428,5) for_check_mult_overflow64
  -> EXTERN: (429,5) for_alloc_allocatable
  -> EXTERN: (429,5) for_check_mult_overflow64
  -> EXTERN: (429,5) for_alloc_allocatable
  -> EXTERN: (429,5) for_check_mult_overflow64
  -> EXTERN: (429,5) for_alloc_allocatable
  -> EXTERN: (429,5) for_check_mult_overflow64
  -> EXTERN: (430,5) for_alloc_allocatable
  -> EXTERN: (430,5) for_check_mult_overflow64
  -> EXTERN: (432,13) INT2STRING
  -> EXTERN: (433,13) __getsp_inlined
  -> (433,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (433,13) __resetsp_inlined
  -> EXTERN: (433,57) _alloca
  -> EXTERN: (433,57) for_concat
  -> EXTERN: (434,13) __getsp_inlined
  -> (434,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (434,13) __resetsp_inlined
  -> EXTERN: (434,63) _alloca
  -> EXTERN: (434,63) for_concat
  -> EXTERN: (435,13) __getsp_inlined
  -> (435,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (435,13) __resetsp_inlined
  -> EXTERN: (435,55) _alloca
  -> EXTERN: (435,55) for_concat
  -> EXTERN: (436,13) __getsp_inlined
  -> (436,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (436,13) __resetsp_inlined
  -> EXTERN: (436,54) _alloca
  -> EXTERN: (436,54) for_concat
  -> EXTERN: (437,13) __getsp_inlined
  -> (437,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (437,13) __resetsp_inlined
  -> EXTERN: (437,55) _alloca
  -> EXTERN: (437,55) for_concat
  -> EXTERN: (438,13) __getsp_inlined
  -> (438,13) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (438,13) __resetsp_inlined
  -> EXTERN: (438,65) _alloca
  -> EXTERN: (438,65) for_concat
  -> EXTERN: (439,12) for_trim
  -> EXTERN: (439,34) for_cpstr
  -> EXTERN: (440,16) __resetsp_inlined
  -> (440,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (440,16) __getsp_inlined
  -> EXTERN: (440,65) for_concat
  -> EXTERN: (440,65) _alloca
  -> (441,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (441,16) __getsp_inlined
  -> EXTERN: (441,16) __resetsp_inlined
  -> EXTERN: (441,71) for_concat
  -> EXTERN: (441,71) _alloca
  -> EXTERN: (442,17) for_trim
  -> EXTERN: (442,39) for_cpstr
  -> (443,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (443,16) __getsp_inlined
  -> EXTERN: (443,16) __resetsp_inlined
  -> EXTERN: (443,77) for_concat
  -> EXTERN: (443,77) _alloca
  -> EXTERN: (445,17) for_trim
  -> EXTERN: (445,40) for_cpstr
  -> EXTERN: (446,16) __resetsp_inlined
  -> (446,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (446,16) __getsp_inlined
  -> EXTERN: (446,65) for_concat
  -> EXTERN: (446,65) _alloca
  -> (448,18) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (448,18) __resetsp_inlined
  -> EXTERN: (448,18) __getsp_inlined
  -> EXTERN: (448,73) _alloca
  -> EXTERN: (448,73) for_concat
  -> EXTERN: (449,16) __resetsp_inlined
  -> (449,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (449,16) __getsp_inlined
  -> EXTERN: (449,61) for_concat
  -> EXTERN: (449,61) _alloca
  -> EXTERN: (450,16) __resetsp_inlined
  -> (450,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (450,16) __getsp_inlined
  -> EXTERN: (450,58) for_concat
  -> EXTERN: (450,58) _alloca
  -> EXTERN: (451,16) __resetsp_inlined
  -> (451,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (451,16) __getsp_inlined
  -> EXTERN: (451,61) for_concat
  -> EXTERN: (451,61) _alloca
  -> EXTERN: (452,16) __resetsp_inlined
  -> (452,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (452,16) __getsp_inlined
  -> EXTERN: (452,59) for_concat
  -> EXTERN: (452,59) _alloca
  -> EXTERN: (453,16) __resetsp_inlined
  -> (453,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (453,16) __getsp_inlined
  -> EXTERN: (453,61) for_concat
  -> EXTERN: (453,61) _alloca
  -> EXTERN: (454,16) __resetsp_inlined
  -> (454,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (454,16) __getsp_inlined
  -> EXTERN: (454,57) for_concat
  -> EXTERN: (454,57) _alloca
  -> EXTERN: (455,16) __resetsp_inlined
  -> (455,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (455,16) __getsp_inlined
  -> EXTERN: (455,59) for_concat
  -> EXTERN: (455,59) _alloca
  -> EXTERN: (456,16) __resetsp_inlined
  -> (456,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (456,16) __getsp_inlined
  -> EXTERN: (456,60) for_concat
  -> EXTERN: (456,60) _alloca
  -> EXTERN: (457,16) __resetsp_inlined
  -> (457,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (457,16) __getsp_inlined
  -> EXTERN: (457,66) for_concat
  -> EXTERN: (457,66) _alloca
  -> EXTERN: (458,16) __resetsp_inlined
  -> (458,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (458,16) __getsp_inlined
  -> EXTERN: (458,66) for_concat
  -> EXTERN: (458,66) _alloca
  -> EXTERN: (459,16) __resetsp_inlined
  -> (459,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (459,16) __getsp_inlined
  -> EXTERN: (459,64) for_concat
  -> EXTERN: (459,64) _alloca
  -> EXTERN: (460,15) for_trim
  -> EXTERN: (460,39) for_cpstr
  -> (461,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (461,19) __resetsp_inlined
  -> EXTERN: (461,19) __getsp_inlined
  -> EXTERN: (461,67) _alloca
  -> EXTERN: (461,67) for_concat
  -> EXTERN: (462,19) __getsp_inlined
  -> (462,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (462,19) __resetsp_inlined
  -> EXTERN: (462,71) _alloca
  -> EXTERN: (462,71) for_concat
  -> EXTERN: (463,20) for_trim
  -> EXTERN: (463,44) for_cpstr
  -> EXTERN: (463,64) for_trim
  -> EXTERN: (463,88) for_cpstr
  -> EXTERN: (463,102) for_trim
  -> EXTERN: (463,125) for_cpstr
  -> (464,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (464,19) __resetsp_inlined
  -> EXTERN: (464,19) __getsp_inlined
  -> EXTERN: (464,66) _alloca
  -> EXTERN: (464,66) for_concat
  -> EXTERN: (465,19) __getsp_inlined
  -> (465,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (465,19) __resetsp_inlined
  -> EXTERN: (465,66) _alloca
  -> EXTERN: (465,66) for_concat
  -> EXTERN: (466,19) __getsp_inlined
  -> (466,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (466,19) __resetsp_inlined
  -> EXTERN: (466,74) _alloca
  -> EXTERN: (466,74) for_concat
  -> EXTERN: (467,19) __getsp_inlined
  -> (467,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (467,19) __resetsp_inlined
  -> EXTERN: (467,73) _alloca
  -> EXTERN: (467,73) for_concat
  -> EXTERN: (468,19) __getsp_inlined
  -> (468,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (468,19) __resetsp_inlined
  -> EXTERN: (468,72) _alloca
  -> EXTERN: (468,72) for_concat
  -> EXTERN: (469,19) __getsp_inlined
  -> (469,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (469,19) __resetsp_inlined
  -> EXTERN: (469,73) _alloca
  -> EXTERN: (469,73) for_concat
  -> EXTERN: (471,22) __resetsp_inlined
  -> (471,22) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (471,22) __getsp_inlined
  -> EXTERN: (471,75) for_concat
  -> EXTERN: (471,75) _alloca
  -> EXTERN: (472,22) __resetsp_inlined
  -> (472,22) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (472,22) __getsp_inlined
  -> EXTERN: (472,76) for_concat
  -> EXTERN: (472,76) _alloca
  -> EXTERN: (473,22) __resetsp_inlined
  -> (473,22) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (473,22) __getsp_inlined
  -> EXTERN: (473,75) for_concat
  -> EXTERN: (473,75) _alloca
  -> (474,22) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (474,22) __getsp_inlined
  -> EXTERN: (474,22) __resetsp_inlined
  -> EXTERN: (474,76) for_concat
  -> EXTERN: (474,76) _alloca
  -> EXTERN: (476,14) __getsp_inlined
  -> EXTERN: (476,14) _alloca
  -> EXTERN: (476,14) __resetsp_inlined
  -> EXTERN: (478,16) __resetsp_inlined
  -> (478,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (478,16) __getsp_inlined
  -> EXTERN: (478,57) for_concat
  -> EXTERN: (478,57) _alloca
  -> EXTERN: (479,11) __resetsp_inlined
  -> EXTERN: (479,11) for_cpystr
  -> EXTERN: (479,11) __getsp_inlined
  -> EXTERN: (479,22) for_adjustl
  -> EXTERN: (479,30) _alloca
  -> EXTERN: (479,30) for_trim
  -> EXTERN: (481,14) for_read_int_lis
  -> EXTERN: (486,11) for_cpystr
  -> EXTERN: (488,24) memmove
  -> EXTERN: (488,24) _alloca
  -> EXTERN: (488,24) for_trim
  -> EXTERN: (489,17) for_cpstr
  -> EXTERN: (490,19) __resetsp_inlined
  -> (490,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (490,19) __getsp_inlined
  -> EXTERN: (490,68) for_concat
  -> EXTERN: (490,68) _alloca
  -> EXTERN: (491,19) __resetsp_inlined
  -> (491,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (491,19) __getsp_inlined
  -> EXTERN: (491,70) for_concat
  -> EXTERN: (491,70) _alloca
  -> EXTERN: (493,19) __resetsp_inlined
  -> (493,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (493,19) __getsp_inlined
  -> EXTERN: (493,68) for_concat
  -> EXTERN: (493,68) _alloca
  -> EXTERN: (495,19) __resetsp_inlined
  -> (495,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (495,19) __getsp_inlined
  -> EXTERN: (495,74) for_concat
  -> EXTERN: (495,74) _alloca
  -> EXTERN: (497,19) __resetsp_inlined
  -> (497,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (497,19) __getsp_inlined
  -> EXTERN: (497,75) for_concat
  -> EXTERN: (497,75) _alloca
  -> EXTERN: (499,19) __resetsp_inlined
  -> (499,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (499,19) __getsp_inlined
  -> EXTERN: (499,77) for_concat
  -> EXTERN: (499,77) _alloca
  -> EXTERN: (501,19) __resetsp_inlined
  -> (501,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (501,19) __getsp_inlined
  -> EXTERN: (501,76) for_concat
  -> EXTERN: (501,76) _alloca
  -> EXTERN: (503,19) __resetsp_inlined
  -> (503,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (503,19) __getsp_inlined
  -> EXTERN: (503,63) for_concat
  -> EXTERN: (503,63) _alloca
  -> EXTERN: (505,19) __resetsp_inlined
  -> (505,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (505,19) __getsp_inlined
  -> EXTERN: (505,76) for_concat
  -> EXTERN: (505,76) _alloca
  -> EXTERN: (507,19) __resetsp_inlined
  -> (507,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (507,19) __getsp_inlined
  -> EXTERN: (507,67) for_concat
  -> EXTERN: (507,67) _alloca
  -> EXTERN: (508,19) __resetsp_inlined
  -> (508,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (508,19) __getsp_inlined
  -> EXTERN: (508,67) for_concat
  -> EXTERN: (508,67) _alloca
  -> EXTERN: (509,17) for_cpstr
  -> EXTERN: (510,19) __resetsp_inlined
  -> (510,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (510,19) __getsp_inlined
  -> EXTERN: (510,68) for_concat
  -> EXTERN: (510,68) _alloca
  -> EXTERN: (511,19) __resetsp_inlined
  -> (511,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (511,19) __getsp_inlined
  -> EXTERN: (511,70) for_concat
  -> EXTERN: (511,70) _alloca
  -> EXTERN: (513,19) __resetsp_inlined
  -> (513,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (513,19) __getsp_inlined
  -> EXTERN: (513,68) for_concat
  -> EXTERN: (513,68) _alloca
  -> EXTERN: (515,19) __resetsp_inlined
  -> (515,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (515,19) __getsp_inlined
  -> EXTERN: (515,74) for_concat
  -> EXTERN: (515,74) _alloca
  -> EXTERN: (517,19) __resetsp_inlined
  -> (517,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (517,19) __getsp_inlined
  -> EXTERN: (517,75) for_concat
  -> EXTERN: (517,75) _alloca
  -> EXTERN: (519,19) __resetsp_inlined
  -> (519,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (519,19) __getsp_inlined
  -> EXTERN: (519,77) for_concat
  -> EXTERN: (519,77) _alloca
  -> EXTERN: (521,19) __resetsp_inlined
  -> (521,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (521,19) __getsp_inlined
  -> EXTERN: (521,76) for_concat
  -> EXTERN: (521,76) _alloca
  -> EXTERN: (523,19) __resetsp_inlined
  -> (523,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (523,19) __getsp_inlined
  -> EXTERN: (523,60) for_concat
  -> EXTERN: (523,60) _alloca
  -> EXTERN: (524,19) __resetsp_inlined
  -> (524,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (524,19) __getsp_inlined
  -> EXTERN: (524,61) for_concat
  -> EXTERN: (524,61) _alloca
  -> EXTERN: (525,19) __resetsp_inlined
  -> (525,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (525,19) __getsp_inlined
  -> EXTERN: (525,61) for_concat
  -> EXTERN: (525,61) _alloca
  -> EXTERN: (526,19) __resetsp_inlined
  -> (526,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (526,19) __getsp_inlined
  -> EXTERN: (526,65) for_concat
  -> EXTERN: (526,65) _alloca
  -> EXTERN: (527,19) __resetsp_inlined
  -> (527,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (527,19) __getsp_inlined
  -> EXTERN: (527,65) for_concat
  -> EXTERN: (527,65) _alloca
  -> EXTERN: (528,19) __resetsp_inlined
  -> (528,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (528,19) __getsp_inlined
  -> EXTERN: (528,66) for_concat
  -> EXTERN: (528,66) _alloca
  -> EXTERN: (529,19) __resetsp_inlined
  -> (529,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (529,19) __getsp_inlined
  -> EXTERN: (529,66) for_concat
  -> EXTERN: (529,66) _alloca
  -> EXTERN: (530,19) __resetsp_inlined
  -> (530,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (530,19) __getsp_inlined
  -> EXTERN: (530,66) for_concat
  -> EXTERN: (530,66) _alloca
  -> EXTERN: (531,19) __resetsp_inlined
  -> (531,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (531,19) __getsp_inlined
  -> EXTERN: (531,66) for_concat
  -> EXTERN: (531,66) _alloca
  -> EXTERN: (532,19) __resetsp_inlined
  -> (532,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (532,19) __getsp_inlined
  -> EXTERN: (532,67) for_concat
  -> EXTERN: (532,67) _alloca
  -> EXTERN: (533,19) __resetsp_inlined
  -> (533,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (533,19) __getsp_inlined
  -> EXTERN: (533,67) for_concat
  -> EXTERN: (533,67) _alloca
  -> EXTERN: (534,19) __resetsp_inlined
  -> (534,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (534,19) __getsp_inlined
  -> EXTERN: (534,63) for_concat
  -> EXTERN: (534,63) _alloca
  -> EXTERN: (535,14) for_write_seq_lis
  -> EXTERN: (536,14) for_stop_core
  -> EXTERN: (537,17) for_cpstr
  -> EXTERN: (538,19) __resetsp_inlined
  -> (538,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (538,19) __getsp_inlined
  -> EXTERN: (538,68) for_concat
  -> EXTERN: (538,68) _alloca
  -> EXTERN: (539,19) __resetsp_inlined
  -> (539,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (539,19) __getsp_inlined
  -> EXTERN: (539,70) for_concat
  -> EXTERN: (539,70) _alloca
  -> EXTERN: (541,19) __resetsp_inlined
  -> (541,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (541,19) __getsp_inlined
  -> EXTERN: (541,68) for_concat
  -> EXTERN: (541,68) _alloca
  -> EXTERN: (543,19) __resetsp_inlined
  -> (543,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (543,19) __getsp_inlined
  -> EXTERN: (543,74) for_concat
  -> EXTERN: (543,74) _alloca
  -> EXTERN: (545,19) __resetsp_inlined
  -> (545,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (545,19) __getsp_inlined
  -> EXTERN: (545,75) for_concat
  -> EXTERN: (545,75) _alloca
  -> EXTERN: (547,19) __resetsp_inlined
  -> (547,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (547,19) __getsp_inlined
  -> EXTERN: (547,77) for_concat
  -> EXTERN: (547,77) _alloca
  -> EXTERN: (549,19) __resetsp_inlined
  -> (549,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (549,19) __getsp_inlined
  -> EXTERN: (549,76) for_concat
  -> EXTERN: (549,76) _alloca
  -> EXTERN: (551,19) __resetsp_inlined
  -> (551,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (551,19) __getsp_inlined
  -> EXTERN: (551,68) for_concat
  -> EXTERN: (551,68) _alloca
  -> EXTERN: (553,19) __resetsp_inlined
  -> (553,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (553,19) __getsp_inlined
  -> EXTERN: (553,63) for_concat
  -> EXTERN: (553,63) _alloca
  -> EXTERN: (554,19) __resetsp_inlined
  -> (554,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (554,19) __getsp_inlined
  -> EXTERN: (554,76) for_concat
  -> EXTERN: (554,76) _alloca
  -> EXTERN: (556,19) __resetsp_inlined
  -> (556,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (556,19) __getsp_inlined
  -> EXTERN: (556,67) for_concat
  -> EXTERN: (556,67) _alloca
  -> EXTERN: (557,19) __resetsp_inlined
  -> (557,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (557,19) __getsp_inlined
  -> EXTERN: (557,67) for_concat
  -> EXTERN: (557,67) _alloca
  -> EXTERN: (558,17) for_cpstr
  -> EXTERN: (559,19) __resetsp_inlined
  -> (559,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (559,19) __getsp_inlined
  -> EXTERN: (559,68) for_concat
  -> EXTERN: (559,68) _alloca
  -> EXTERN: (560,19) __resetsp_inlined
  -> (560,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (560,19) __getsp_inlined
  -> EXTERN: (560,70) for_concat
  -> EXTERN: (560,70) _alloca
  -> EXTERN: (562,19) __resetsp_inlined
  -> (562,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (562,19) __getsp_inlined
  -> EXTERN: (562,68) for_concat
  -> EXTERN: (562,68) _alloca
  -> EXTERN: (564,19) __resetsp_inlined
  -> (564,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (564,19) __getsp_inlined
  -> EXTERN: (564,74) for_concat
  -> EXTERN: (564,74) _alloca
  -> EXTERN: (566,19) __resetsp_inlined
  -> (566,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (566,19) __getsp_inlined
  -> EXTERN: (566,75) for_concat
  -> EXTERN: (566,75) _alloca
  -> EXTERN: (568,19) __resetsp_inlined
  -> (568,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (568,19) __getsp_inlined
  -> EXTERN: (568,77) for_concat
  -> EXTERN: (568,77) _alloca
  -> EXTERN: (570,19) __resetsp_inlined
  -> (570,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (570,19) __getsp_inlined
  -> EXTERN: (570,76) for_concat
  -> EXTERN: (570,76) _alloca
  -> EXTERN: (572,19) __resetsp_inlined
  -> (572,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (572,19) __getsp_inlined
  -> EXTERN: (572,65) for_concat
  -> EXTERN: (572,65) _alloca
  -> EXTERN: (573,19) __resetsp_inlined
  -> (573,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (573,19) __getsp_inlined
  -> EXTERN: (573,67) for_concat
  -> EXTERN: (573,67) _alloca
  -> EXTERN: (575,19) __resetsp_inlined
  -> (575,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (575,19) __getsp_inlined
  -> EXTERN: (575,65) for_concat
  -> EXTERN: (575,65) _alloca
  -> EXTERN: (577,19) __resetsp_inlined
  -> (577,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (577,19) __getsp_inlined
  -> EXTERN: (577,71) for_concat
  -> EXTERN: (577,71) _alloca
  -> EXTERN: (579,19) __resetsp_inlined
  -> (579,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (579,19) __getsp_inlined
  -> EXTERN: (579,72) for_concat
  -> EXTERN: (579,72) _alloca
  -> EXTERN: (581,19) __resetsp_inlined
  -> (581,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (581,19) __getsp_inlined
  -> EXTERN: (581,74) for_concat
  -> EXTERN: (581,74) _alloca
  -> EXTERN: (583,19) __resetsp_inlined
  -> (583,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (583,19) __getsp_inlined
  -> EXTERN: (583,73) for_concat
  -> EXTERN: (583,73) _alloca
  -> EXTERN: (585,19) __resetsp_inlined
  -> (585,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (585,19) __getsp_inlined
  -> EXTERN: (585,63) for_concat
  -> EXTERN: (585,63) _alloca
  -> EXTERN: (586,19) __resetsp_inlined
  -> (586,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (586,19) __getsp_inlined
  -> EXTERN: (586,76) for_concat
  -> EXTERN: (586,76) _alloca
  -> EXTERN: (588,19) __resetsp_inlined
  -> (588,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (588,19) __getsp_inlined
  -> EXTERN: (588,73) for_concat
  -> EXTERN: (588,73) _alloca
  -> EXTERN: (590,19) __resetsp_inlined
  -> (590,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (590,19) __getsp_inlined
  -> EXTERN: (590,67) for_concat
  -> EXTERN: (590,67) _alloca
  -> EXTERN: (591,19) __resetsp_inlined
  -> (591,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (591,19) __getsp_inlined
  -> EXTERN: (591,67) for_concat
  -> EXTERN: (591,67) _alloca
  -> EXTERN: (592,19) __resetsp_inlined
  -> (592,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (592,19) __getsp_inlined
  -> EXTERN: (592,64) for_concat
  -> EXTERN: (592,64) _alloca
  -> EXTERN: (593,19) __resetsp_inlined
  -> (593,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (593,19) __getsp_inlined
  -> EXTERN: (593,64) for_concat
  -> EXTERN: (593,64) _alloca
  -> EXTERN: (594,17) for_cpstr
  -> EXTERN: (595,19) __resetsp_inlined
  -> (595,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (595,19) __getsp_inlined
  -> EXTERN: (595,66) for_concat
  -> EXTERN: (595,66) _alloca
  -> EXTERN: (596,19) __resetsp_inlined
  -> (596,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (596,19) __getsp_inlined
  -> EXTERN: (596,68) for_concat
  -> EXTERN: (596,68) _alloca
  -> EXTERN: (598,19) __resetsp_inlined
  -> (598,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (598,19) __getsp_inlined
  -> EXTERN: (598,66) for_concat
  -> EXTERN: (598,66) _alloca
  -> EXTERN: (600,19) __resetsp_inlined
  -> (600,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (600,19) __getsp_inlined
  -> EXTERN: (600,72) for_concat
  -> EXTERN: (600,72) _alloca
  -> EXTERN: (602,19) __resetsp_inlined
  -> (602,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (602,19) __getsp_inlined
  -> EXTERN: (602,73) for_concat
  -> EXTERN: (602,73) _alloca
  -> EXTERN: (604,19) __resetsp_inlined
  -> (604,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (604,19) __getsp_inlined
  -> EXTERN: (604,75) for_concat
  -> EXTERN: (604,75) _alloca
  -> EXTERN: (606,19) __resetsp_inlined
  -> (606,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (606,19) __getsp_inlined
  -> EXTERN: (606,74) for_concat
  -> EXTERN: (606,74) _alloca
  -> EXTERN: (608,19) __resetsp_inlined
  -> (608,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (608,19) __getsp_inlined
  -> EXTERN: (608,66) for_concat
  -> EXTERN: (608,66) _alloca
  -> EXTERN: (609,19) __resetsp_inlined
  -> (609,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (609,19) __getsp_inlined
  -> EXTERN: (609,68) for_concat
  -> EXTERN: (609,68) _alloca
  -> EXTERN: (611,19) __resetsp_inlined
  -> (611,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (611,19) __getsp_inlined
  -> EXTERN: (611,66) for_concat
  -> EXTERN: (611,66) _alloca
  -> EXTERN: (613,19) __resetsp_inlined
  -> (613,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (613,19) __getsp_inlined
  -> EXTERN: (613,72) for_concat
  -> EXTERN: (613,72) _alloca
  -> EXTERN: (615,19) __resetsp_inlined
  -> (615,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (615,19) __getsp_inlined
  -> EXTERN: (615,73) for_concat
  -> EXTERN: (615,73) _alloca
  -> EXTERN: (617,19) __resetsp_inlined
  -> (617,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (617,19) __getsp_inlined
  -> EXTERN: (617,75) for_concat
  -> EXTERN: (617,75) _alloca
  -> EXTERN: (619,19) __resetsp_inlined
  -> (619,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (619,19) __getsp_inlined
  -> EXTERN: (619,74) for_concat
  -> EXTERN: (619,74) _alloca
  -> EXTERN: (621,19) __resetsp_inlined
  -> (621,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (621,19) __getsp_inlined
  -> EXTERN: (621,63) for_concat
  -> EXTERN: (621,63) _alloca
  -> EXTERN: (622,19) __resetsp_inlined
  -> (622,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (622,19) __getsp_inlined
  -> EXTERN: (622,74) for_concat
  -> EXTERN: (622,74) _alloca
  -> EXTERN: (624,19) __resetsp_inlined
  -> (624,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (624,19) __getsp_inlined
  -> EXTERN: (624,75) for_concat
  -> EXTERN: (624,75) _alloca
  -> EXTERN: (626,19) __resetsp_inlined
  -> (626,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (626,19) __getsp_inlined
  -> EXTERN: (626,65) for_concat
  -> EXTERN: (626,65) _alloca
  -> EXTERN: (627,19) __resetsp_inlined
  -> (627,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (627,19) __getsp_inlined
  -> EXTERN: (627,65) for_concat
  -> EXTERN: (627,65) _alloca
  -> EXTERN: (628,19) __resetsp_inlined
  -> (628,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (628,19) __getsp_inlined
  -> EXTERN: (628,66) for_concat
  -> EXTERN: (628,66) _alloca
  -> EXTERN: (629,19) __resetsp_inlined
  -> (629,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (629,19) __getsp_inlined
  -> EXTERN: (629,66) for_concat
  -> EXTERN: (629,66) _alloca
  -> EXTERN: (630,17) for_cpstr
  -> EXTERN: (631,19) __resetsp_inlined
  -> (631,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (631,19) __getsp_inlined
  -> EXTERN: (631,69) for_concat
  -> EXTERN: (631,69) _alloca
  -> EXTERN: (633,19) __resetsp_inlined
  -> (633,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (633,19) __getsp_inlined
  -> EXTERN: (633,64) for_concat
  -> EXTERN: (633,64) _alloca
  -> EXTERN: (635,19) __resetsp_inlined
  -> (635,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (635,19) __getsp_inlined
  -> EXTERN: (635,19) __getsp_inlined
  -> EXTERN: (635,19) __resetsp_inlined
  -> EXTERN: (635,63) for_concat
  -> EXTERN: (635,63) _alloca
  -> EXTERN: (638,17) for_trim
  -> EXTERN: (638,40) for_cpstr
  -> EXTERN: (639,16) __resetsp_inlined
  -> (639,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (639,16) __getsp_inlined
  -> EXTERN: (639,65) for_concat
  -> EXTERN: (639,65) _alloca
  -> EXTERN: (640,16) __resetsp_inlined
  -> (640,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (640,16) __getsp_inlined
  -> EXTERN: (640,60) for_concat
  -> EXTERN: (640,60) _alloca
  -> EXTERN: (641,16) __resetsp_inlined
  -> (641,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (641,16) __getsp_inlined
  -> EXTERN: (641,67) for_concat
  -> EXTERN: (641,67) _alloca
  -> EXTERN: (643,16) __resetsp_inlined
  -> (643,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (643,16) __getsp_inlined
  -> EXTERN: (643,76) for_concat
  -> EXTERN: (643,76) _alloca
  -> EXTERN: (644,16) __resetsp_inlined
  -> (644,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (644,16) __getsp_inlined
  -> EXTERN: (644,73) for_concat
  -> EXTERN: (644,73) _alloca
  -> EXTERN: (645,16) __resetsp_inlined
  -> (645,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (645,16) __getsp_inlined
  -> EXTERN: (645,74) for_concat
  -> EXTERN: (645,74) _alloca
  -> EXTERN: (647,16) __resetsp_inlined
  -> (647,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (647,16) __getsp_inlined
  -> EXTERN: (647,75) for_concat
  -> EXTERN: (647,75) _alloca
  -> EXTERN: (649,16) __resetsp_inlined
  -> (649,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (649,16) __getsp_inlined
  -> EXTERN: (649,73) for_concat
  -> EXTERN: (649,73) _alloca
  -> EXTERN: (650,16) __resetsp_inlined
  -> (650,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (650,16) __getsp_inlined
  -> EXTERN: (650,60) for_concat
  -> EXTERN: (650,60) _alloca
  -> EXTERN: (651,16) __resetsp_inlined
  -> (651,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (651,16) __getsp_inlined
  -> EXTERN: (651,58) for_concat
  -> EXTERN: (651,58) _alloca
  -> EXTERN: (652,16) __resetsp_inlined
  -> (652,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (652,16) __getsp_inlined
  -> EXTERN: (652,59) for_concat
  -> EXTERN: (652,59) _alloca
  -> EXTERN: (653,16) __resetsp_inlined
  -> (653,16) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (653,16) __getsp_inlined
  -> EXTERN: (653,61) for_concat
  -> EXTERN: (653,61) _alloca
  -> EXTERN: (654,24) memmove
  -> EXTERN: (654,24) _alloca
  -> EXTERN: (654,24) for_trim
  -> EXTERN: (655,17) for_cpstr
  -> EXTERN: (656,19) __resetsp_inlined
  -> (656,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (656,19) __getsp_inlined
  -> EXTERN: (656,75) for_concat
  -> EXTERN: (656,75) _alloca
  -> EXTERN: (658,19) __resetsp_inlined
  -> (658,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (658,19) __getsp_inlined
  -> EXTERN: (658,76) for_concat
  -> EXTERN: (658,76) _alloca
  -> EXTERN: (660,19) __resetsp_inlined
  -> (660,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (660,19) __getsp_inlined
  -> EXTERN: (660,78) for_concat
  -> EXTERN: (660,78) _alloca
  -> EXTERN: (662,19) __resetsp_inlined
  -> (662,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (662,19) __getsp_inlined
  -> EXTERN: (662,77) for_concat
  -> EXTERN: (662,77) _alloca
  -> EXTERN: (664,19) __resetsp_inlined
  -> (664,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (664,19) __getsp_inlined
  -> EXTERN: (664,69) for_concat
  -> EXTERN: (664,69) _alloca
  -> EXTERN: (666,19) __resetsp_inlined
  -> (666,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (666,19) __getsp_inlined
  -> EXTERN: (666,74) for_concat
  -> EXTERN: (666,74) _alloca
  -> EXTERN: (668,19) __resetsp_inlined
  -> (668,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (668,19) __getsp_inlined
  -> EXTERN: (668,75) for_concat
  -> EXTERN: (668,75) _alloca
  -> EXTERN: (670,19) __resetsp_inlined
  -> (670,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (670,19) __getsp_inlined
  -> EXTERN: (670,77) for_concat
  -> EXTERN: (670,77) _alloca
  -> EXTERN: (672,19) __resetsp_inlined
  -> (672,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (672,19) __getsp_inlined
  -> EXTERN: (672,76) for_concat
  -> EXTERN: (672,76) _alloca
  -> EXTERN: (674,19) __resetsp_inlined
  -> (674,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (674,19) __getsp_inlined
  -> EXTERN: (674,68) for_concat
  -> EXTERN: (674,68) _alloca
  -> EXTERN: (676,19) __resetsp_inlined
  -> (676,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (676,19) __getsp_inlined
  -> EXTERN: (676,68) for_concat
  -> EXTERN: (676,68) _alloca
  -> EXTERN: (677,19) __resetsp_inlined
  -> (677,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (677,19) __getsp_inlined
  -> EXTERN: (677,68) for_concat
  -> EXTERN: (677,68) _alloca
  -> EXTERN: (678,19) __resetsp_inlined
  -> (678,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (678,19) __getsp_inlined
  -> EXTERN: (678,67) for_concat
  -> EXTERN: (678,67) _alloca
  -> EXTERN: (679,19) __resetsp_inlined
  -> (679,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (679,19) __getsp_inlined
  -> EXTERN: (679,67) for_concat
  -> EXTERN: (679,67) _alloca
  -> EXTERN: (680,17) for_cpstr
  -> EXTERN: (681,19) __resetsp_inlined
  -> (681,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (681,19) __getsp_inlined
  -> EXTERN: (681,74) for_concat
  -> EXTERN: (681,74) _alloca
  -> EXTERN: (683,19) __resetsp_inlined
  -> (683,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (683,19) __getsp_inlined
  -> EXTERN: (683,75) for_concat
  -> EXTERN: (683,75) _alloca
  -> EXTERN: (685,19) __resetsp_inlined
  -> (685,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (685,19) __getsp_inlined
  -> EXTERN: (685,77) for_concat
  -> EXTERN: (685,77) _alloca
  -> EXTERN: (687,19) __resetsp_inlined
  -> (687,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (687,19) __getsp_inlined
  -> EXTERN: (687,76) for_concat
  -> EXTERN: (687,76) _alloca
  -> EXTERN: (689,19) __resetsp_inlined
  -> (689,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (689,19) __getsp_inlined
  -> EXTERN: (689,68) for_concat
  -> EXTERN: (689,68) _alloca
  -> EXTERN: (691,19) __resetsp_inlined
  -> (691,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (691,19) __getsp_inlined
  -> EXTERN: (691,71) for_concat
  -> EXTERN: (691,71) _alloca
  -> EXTERN: (693,19) __resetsp_inlined
  -> (693,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (693,19) __getsp_inlined
  -> EXTERN: (693,72) for_concat
  -> EXTERN: (693,72) _alloca
  -> EXTERN: (695,19) __resetsp_inlined
  -> (695,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (695,19) __getsp_inlined
  -> EXTERN: (695,74) for_concat
  -> EXTERN: (695,74) _alloca
  -> EXTERN: (697,19) __resetsp_inlined
  -> (697,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (697,19) __getsp_inlined
  -> EXTERN: (697,73) for_concat
  -> EXTERN: (697,73) _alloca
  -> EXTERN: (699,19) __resetsp_inlined
  -> (699,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (699,19) __getsp_inlined
  -> EXTERN: (699,65) for_concat
  -> EXTERN: (699,65) _alloca
  -> EXTERN: (701,19) __resetsp_inlined
  -> (701,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (701,19) __getsp_inlined
  -> EXTERN: (701,67) for_concat
  -> EXTERN: (701,67) _alloca
  -> EXTERN: (702,19) __resetsp_inlined
  -> (702,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (702,19) __getsp_inlined
  -> EXTERN: (702,67) for_concat
  -> EXTERN: (702,67) _alloca
  -> EXTERN: (703,19) __resetsp_inlined
  -> (703,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (703,19) __getsp_inlined
  -> EXTERN: (703,64) for_concat
  -> EXTERN: (703,64) _alloca
  -> EXTERN: (704,19) __resetsp_inlined
  -> (704,19) COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE (isz = 1241) (sz = 1272)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (704,19) __getsp_inlined
  -> EXTERN: (704,19) __getsp_inlined
  -> EXTERN: (704,19) __resetsp_inlined
  -> EXTERN: (704,64) for_concat
  -> EXTERN: (704,64) _alloca
  -> EXTERN: (713,5) for_realloc_lhs
  -> EXTERN: (714,5) for_realloc_lhs
  -> EXTERN: (715,5) for_realloc_lhs


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(431,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at comm_param_mod.f90(476,14)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (476:14) has aligned access
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <cpar(i,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.014
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 33 
      remark #15477: vector cost: 18.500 
      remark #15478: estimated potential speedup: 1.760 
      remark #15486: divides: 1 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(476,14)
   <Remainder loop for vectorization>
      remark #15388: vectorization support: reference at (476:14) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.308
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(476,14)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(476,14)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference at (476:14) has aligned access
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <cpar(i,:)>, stride is unknown to compiler
      remark #15305: vectorization support: vector length 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.330 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(476,14)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at comm_param_mod.f90(709,31)
<Peeled loop for vectorization>
   remark #25015: Estimate of max trip count of loop=3
LOOP END

LOOP BEGIN at comm_param_mod.f90(709,31)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.577
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 19 
   remark #15477: vector cost: 3.250 
   remark #15478: estimated potential speedup: 5.280 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at comm_param_mod.f90(709,31)
<Remainder loop for vectorization>
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.733
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at comm_param_mod.f90(709,31)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at comm_param_mod.f90(710,31)
<Peeled loop for vectorization>
   remark #25015: Estimate of max trip count of loop=3
LOOP END

LOOP BEGIN at comm_param_mod.f90(710,31)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference cpar(:) has aligned access
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 2.412
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 4.250 
   remark #15478: estimated potential speedup: 1.360 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at comm_param_mod.f90(710,31)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at comm_param_mod.f90(713,5)
<Peeled loop for vectorization>
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at comm_param_mod.f90(713,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference cpar(:) has aligned access
   remark #15388: vectorization support: reference cpar(:) has aligned access
   remark #15305: vectorization support: vector length 2
   remark #15399: vectorization support: unroll factor set to 4
   remark #15309: vectorization support: normalized vectorization overhead 0.417
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 1.950 
   remark #15488: --- end vector cost summary ---
LOOP END

LOOP BEGIN at comm_param_mod.f90(713,5)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at comm_param_mod.f90(714,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at comm_param_mod.f90(714,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(714,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference cpar(:,:) has aligned access
      remark #15388: vectorization support: reference cpar(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 6 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.950 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(714,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at comm_param_mod.f90(715,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at comm_param_mod.f90(715,5)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(715,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference cpar(:,:) has aligned access
      remark #15388: vectorization support: reference cpar(:,:) has aligned access
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 4
      remark #15309: vectorization support: normalized vectorization overhead 0.417
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 6 
      remark #15477: vector cost: 3.000 
      remark #15478: estimated potential speedup: 1.950 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(715,5)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(488,24):remark #34014: optimization advice for memmove: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
comm_param_mod.f90(488,24):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(654,24):remark #34014: optimization advice for memmove: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
comm_param_mod.f90(654,24):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(400,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_read_component_params_hash_] comm_param_mod.f90:400

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :    7015
            Global    :     785
            Local     :    6230
        Regenerable   :    1841
        Spilled       :     195
        
    Routine stack
        Variables     :   12086 bytes*
            Reads     :     232 [1.32e+02 ~ 1.6%]
            Writes    :     688 [2.83e+02 ~ 3.5%]
        Spills        :    1504 bytes*
            Reads     :     206 [8.56e+01 ~ 1.1%]
            Writes    :     192 [7.61e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::GET_PARAMETER_HASHTABLE) [12/22=54.5%] comm_param_mod.f90(1290,14)
  -> INLINE: (1307,10) COMM_PARAM_MOD::GET_PARAMETER_ARG (isz = 1199) (sz = 1228)
    -> EXTERN: (791,15) for_iargc
    -> EXTERN: (792,13) for_getarg
    -> INLINE: (794,13) COMM_PARAM_MOD::PARSE_PARAMETER (isz = 1013) (sz = 1042)
      -> EXTERN: (742,10) __getsp_inlined
      -> INLINE: (742,10) COMM_PARAM_MOD::GET_TOKENS (isz = 118) (sz = 141)
        -> (879,10) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
           [[ Inlining would exceed -inline-max-size value (440>230) <1>]]
        -> EXTERN: (882,8) for_cpystr
        -> (883,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
           [[ Inlining would exceed -inline-max-size value (440>230) <1>]]
      -> EXTERN: (742,10) __resetsp_inlined
      -> EXTERN: (742,21) for_trim
      -> EXTERN: (742,26) _alloca
      -> EXTERN: (742,49) _alloca
      -> EXTERN: (742,49) memmove
      -> EXTERN: (747,5) __getsp_inlined
      -> EXTERN: (747,5) memmove
      -> EXTERN: (747,5) __resetsp_inlined
      -> EXTERN: (747,11) _alloca
      -> INLINE: (747,11) COMM_PARAM_MOD::GET_TOKEN (isz = 486) (sz = 509)
        -> (862,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
           [[ Inlining inhibited by overrideable criterion  <2>]]
        -> EXTERN: (864,5) for_cpystr
      -> EXTERN: (747,49) _alloca
      -> EXTERN: (747,49) memmove
      -> EXTERN: (748,5) __getsp_inlined
      -> EXTERN: (748,5) memmove
      -> EXTERN: (748,5) __resetsp_inlined
      -> EXTERN: (748,13) _alloca
      -> INLINE: (748,13) COMM_PARAM_MOD::GET_TOKEN (isz = 486) (sz = 509)
        -> INLINE: (862,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
          -> EXTERN: (940,13) for_len_trim
          -> EXTERN: (942,11) for_cpystr
          -> EXTERN: (943,11) for_cpystr
          -> EXTERN: (953,12) for_f90_index
          -> EXTERN: (961,14) for_f90_index
          -> EXTERN: (980,12) for_f90_index
        -> EXTERN: (864,5) for_cpystr
      -> EXTERN: (748,51) _alloca
      -> EXTERN: (748,51) memmove
      -> EXTERN: (749,5) for_cpystr
      -> EXTERN: (750,10) tolower_
      -> EXTERN: (751,10) tolower_
      -> EXTERN: (752,9) for_trim
      -> EXTERN: (752,19) for_cpstr
      -> EXTERN: (752,22) for_trim
      -> EXTERN: (754,11) for_read_int_lis
      -> EXTERN: (756,11) for_read_int_lis
      -> EXTERN: (758,11) for_read_int_lis
      -> EXTERN: (760,11) for_read_int_lis
      -> EXTERN: (762,11) for_read_int_lis
      -> EXTERN: (764,11) for_read_int_lis
      -> EXTERN: (766,11) for_write_seq_lis
    -> EXTERN: (803,8) __resetsp_inlined
    -> EXTERN: (803,8) for_write_seq_lis
    -> EXTERN: (803,8) __getsp_inlined
    -> EXTERN: (803,69) for_trim
    -> EXTERN: (803,74) _alloca
    -> EXTERN: (803,83) for_concat
    -> EXTERN: (803,83) _alloca
    -> EXTERN: (804,26) __resetsp_inlined
    -> EXTERN: (804,26) __getsp_inlined
    -> EXTERN: (804,26) for_write_seq_lis
    -> EXTERN: (804,37) for_trim
    -> EXTERN: (804,42) _alloca
    -> EXTERN: (805,8) for_stop_core
  -> (1311,13) COMM_PARAM_MOD::GET_PARAMETER_FROM_HASH (isz = 447) (sz = 478)
     [[ Inlining would exceed -inline-max-size value (478>230) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(876,5) inlined into comm_param_mod.f90(1307,10)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(880,5) inlined into comm_param_mod.f90(1307,10)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15523: loop was not vectorized: loop control variable N was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at comm_param_mod.f90(860,5) inlined into comm_param_mod.f90(1307,10)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 0.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(860,5) inlined into comm_param_mod.f90(1307,10)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(935,8) inlined into comm_param_mod.f90(1307,10)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (935:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(941,8) inlined into comm_param_mod.f90(1307,10)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (942:11) and at (943:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (943:11) and at (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(942,11) ]
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(943,11) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (942:11) and at (943:11)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (943:11) and at (942:11)
LOOP END

LOOP BEGIN at comm_param_mod.f90(947,8) inlined into comm_param_mod.f90(1307,10)
   remark #25408: memset generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at comm_param_mod.f90(972,17) inlined into comm_param_mod.f90(1307,10)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (972:17) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(988,8) inlined into comm_param_mod.f90(1307,10)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (988:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(992,8) inlined into comm_param_mod.f90(1307,10)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (992:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END


Non-optimizable loops:


LOOP BEGIN at comm_param_mod.f90(791,5) inlined into comm_param_mod.f90(1307,10)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ comm_param_mod.f90(985,5) ]
   remark #17102: loop was not parallelized: not a parallelization candidate

   LOOP BEGIN at comm_param_mod.f90(985,5) inlined into comm_param_mod.f90(1307,10)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      remark #17102: loop was not parallelized: not a parallelization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(742,49):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(747,49):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(747,5):remark #34014: optimization advice for memmove: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
comm_param_mod.f90(747,5):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(748,51):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(947,8):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 0)
comm_param_mod.f90(748,5):remark #34014: optimization advice for memmove: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
comm_param_mod.f90(748,5):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(1290,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_get_parameter_hashtable_] comm_param_mod.f90:1290

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0]
        
    Routine temporaries
        Total         :     346
            Global    :      95
            Local     :     251
        Regenerable   :     172
        Spilled       :      23
        
    Routine stack
        Variables     :    3148 bytes*
            Reads     :       9 [3.08e+01 ~ 3.9%]
            Writes    :      36 [2.41e+01 ~ 3.0%]
        Spills        :     144 bytes*
            Reads     :      49 [4.15e+01 ~ 5.2%]
            Writes    :      24 [2.47e+01 ~ 3.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::PARSE_PARAMETER

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::PARSE_PARAMETER) [13/22=59.1%] comm_param_mod.f90(728,14)
  -> EXTERN: (742,10) __resetsp_inlined
  -> INLINE: (742,10) COMM_PARAM_MOD::GET_TOKENS (isz = 118) (sz = 141)
    -> (879,10) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
       [[ Inlining would exceed -inline-max-size value (440>230) <1>]]
    -> EXTERN: (882,8) for_cpystr
    -> (883,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
       [[ Inlining would exceed -inline-max-size value (440>230) <1>]]
  -> EXTERN: (742,10) __getsp_inlined
  -> EXTERN: (742,21) for_trim
  -> EXTERN: (742,26) _alloca
  -> EXTERN: (742,49) memmove
  -> EXTERN: (742,49) _alloca
  -> EXTERN: (747,5) __resetsp_inlined
  -> EXTERN: (747,5) memmove
  -> EXTERN: (747,5) __getsp_inlined
  -> INLINE: (747,11) COMM_PARAM_MOD::GET_TOKEN (isz = 486) (sz = 509)
    -> (862,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
       [[ Inlining inhibited by overrideable criterion  <2>]]
    -> EXTERN: (864,5) for_cpystr
  -> EXTERN: (747,11) _alloca
  -> EXTERN: (747,49) memmove
  -> EXTERN: (747,49) _alloca
  -> EXTERN: (748,5) __resetsp_inlined
  -> EXTERN: (748,5) memmove
  -> EXTERN: (748,5) __getsp_inlined
  -> INLINE: (748,13) COMM_PARAM_MOD::GET_TOKEN (isz = 486) (sz = 509)
    -> INLINE: (862,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
      -> EXTERN: (940,13) for_len_trim
      -> EXTERN: (942,11) for_cpystr
      -> EXTERN: (943,11) for_cpystr
      -> EXTERN: (953,12) for_f90_index
      -> EXTERN: (961,14) for_f90_index
      -> EXTERN: (980,12) for_f90_index
    -> EXTERN: (864,5) for_cpystr
  -> EXTERN: (748,13) _alloca
  -> EXTERN: (748,51) memmove
  -> EXTERN: (748,51) _alloca
  -> EXTERN: (749,5) for_cpystr
  -> EXTERN: (750,10) tolower_
  -> EXTERN: (751,10) tolower_
  -> EXTERN: (752,9) for_trim
  -> EXTERN: (752,19) for_cpstr
  -> EXTERN: (752,22) for_trim
  -> EXTERN: (754,11) for_read_int_lis
  -> EXTERN: (756,11) for_read_int_lis
  -> EXTERN: (758,11) for_read_int_lis
  -> EXTERN: (760,11) for_read_int_lis
  -> EXTERN: (762,11) for_read_int_lis
  -> EXTERN: (764,11) for_read_int_lis
  -> EXTERN: (766,11) for_write_seq_lis


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(876,5) inlined into comm_param_mod.f90(742,10)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(880,5) inlined into comm_param_mod.f90(742,10)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15523: loop was not vectorized: loop control variable N was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at comm_param_mod.f90(860,5) inlined into comm_param_mod.f90(747,11)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15309: vectorization support: normalized vectorization overhead 1.000
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 0.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(860,5) inlined into comm_param_mod.f90(748,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(935,8) inlined into comm_param_mod.f90(748,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (935:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(941,8) inlined into comm_param_mod.f90(748,13)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (942:11) and at (943:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (943:11) and at (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(942,11) ]
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(943,11) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (942:11) and at (943:11)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (943:11) and at (942:11)
LOOP END

LOOP BEGIN at comm_param_mod.f90(947,8) inlined into comm_param_mod.f90(748,13)
   remark #25408: memset generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at comm_param_mod.f90(972,17) inlined into comm_param_mod.f90(748,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (972:17) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(988,8) inlined into comm_param_mod.f90(748,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (988:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(992,8) inlined into comm_param_mod.f90(748,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference EXT(:) has aligned access
   remark #15388: vectorization support: reference at (992:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END


Non-optimizable loops:


LOOP BEGIN at comm_param_mod.f90(985,5) inlined into comm_param_mod.f90(748,13)
   remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
   remark #17102: loop was not parallelized: not a parallelization candidate
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(742,49):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(747,49):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(747,5):remark #34014: optimization advice for memmove: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
comm_param_mod.f90(747,5):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(748,51):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(947,8):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 0)
comm_param_mod.f90(748,5):remark #34014: optimization advice for memmove: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
comm_param_mod.f90(748,5):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(728,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_parse_parameter_] comm_param_mod.f90:728

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     322
            Global    :      84
            Local     :     238
        Regenerable   :     166
        Spilled       :      18
        
    Routine stack
        Variables     :    2632 bytes*
            Reads     :       7 [1.25e+01 ~ 3.2%]
            Writes    :      35 [1.09e+01 ~ 2.8%]
        Spills        :     104 bytes*
            Reads     :      34 [1.64e+01 ~ 4.2%]
            Writes    :      20 [1.22e+01 ~ 3.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::GET_TOKEN

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::GET_TOKEN) [14/22=63.6%] comm_param_mod.f90(853,12)
  -> INLINE: (862,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
    -> EXTERN: (940,13) for_len_trim
    -> EXTERN: (942,11) for_cpystr
    -> EXTERN: (943,11) for_cpystr
    -> EXTERN: (953,12) for_f90_index
    -> EXTERN: (961,14) for_f90_index
    -> EXTERN: (980,12) for_f90_index
  -> EXTERN: (864,5) for_cpystr


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(860,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference ext(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(935,8) inlined into comm_param_mod.f90(862,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference ext(:) has aligned access
   remark #15388: vectorization support: reference at (935:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(941,8) inlined into comm_param_mod.f90(862,13)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between group(:) (942:11) and group(:) (943:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between group(:) (943:11) and group(:) (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between OP(I-1) (942:11) and OP(I-1) (942:11)
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(942,11) ]
   remark #15382: vectorization support: call to function for_cpystr cannot be vectorized   [ comm_param_mod.f90(943,11) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between group(:) (942:11) and group(:) (943:11)
   remark #15346: vector dependence: assumed OUTPUT dependence between group(:) (943:11) and group(:) (942:11)
LOOP END

LOOP BEGIN at comm_param_mod.f90(947,8) inlined into comm_param_mod.f90(862,13)
   remark #25408: memset generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at comm_param_mod.f90(972,17) inlined into comm_param_mod.f90(862,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference ext(:) has aligned access
   remark #15388: vectorization support: reference at (972:17) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(975,17) inlined into comm_param_mod.f90(862,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference ext(:) has aligned access
   remark #15388: vectorization support: reference at (975:17) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(988,8) inlined into comm_param_mod.f90(862,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference ext(:) has aligned access
   remark #15388: vectorization support: reference at (988:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(990,8) inlined into comm_param_mod.f90(862,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference ext(:) has aligned access
   remark #15388: vectorization support: reference at (990:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(992,8) inlined into comm_param_mod.f90(862,13)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference ext(:) has aligned access
   remark #15388: vectorization support: reference at (992:8) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 2.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END


Non-optimizable loops:


LOOP BEGIN at comm_param_mod.f90(863,5)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.   [ comm_param_mod.f90(985,5) ]
   remark #17102: loop was not parallelized: not a parallelization candidate

   LOOP BEGIN at comm_param_mod.f90(985,5) inlined into comm_param_mod.f90(862,13)
      remark #15522: loop was not vectorized: loop control flow is too complex. Try using canonical loop form from OpenMP specification
      remark #17102: loop was not parallelized: not a parallelization candidate
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(947,8):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 0)
comm_param_mod.f90(853,12):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_get_token_] comm_param_mod.f90:853

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   15[ rax rdx rcx rbx rsi rdi r8-r15 zmm0]
        
    Routine temporaries
        Total         :     121
            Global    :      51
            Local     :      70
        Regenerable   :      27
        Spilled       :      19
        
    Routine stack
        Variables     :     512 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :     136 bytes*
            Reads     :      31 [9.66e+01 ~ 13.1%]
            Writes    :      19 [2.63e+01 ~ 3.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::GET_TOKENS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::GET_TOKENS) [15/22=68.2%] comm_param_mod.f90(868,14)
  -> (879,10) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
     [[ Inlining would exceed -inline-max-size value (440>230) <1>]]
  -> EXTERN: (882,8) for_cpystr
  -> (883,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
     [[ Inlining would exceed -inline-max-size value (440>230) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(876,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference ext(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(880,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15523: loop was not vectorized: loop control variable n was found, but loop iteration count cannot be computed before executing the loop
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(868,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_get_tokens_] comm_param_mod.f90:868

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :      58
            Global    :      21
            Local     :      37
        Regenerable   :      14
        Spilled       :       9
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       3 [5.55e+00 ~ 4.3%]
            Writes    :       2 [2.00e+00 ~ 1.5%]
        Spills        :      32 bytes*
            Reads     :       5 [8.38e+00 ~ 6.4%]
            Writes    :       5 [4.38e+00 ~ 3.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::HAS_TOKEN

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::HAS_TOKEN) [16/22=72.7%] comm_param_mod.f90(888,12)
  -> (897,10) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
     [[ Inlining would exceed -inline-max-size value (440>230) <1>]]
  -> EXTERN: (899,33) __getsp_inlined
  -> EXTERN: (899,33) __resetsp_inlined
  -> EXTERN: (899,33) for_cpstr
  -> EXTERN: (899,36) for_trim
  -> EXTERN: (899,41) _alloca
  -> (900,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
     [[ Inlining would exceed -inline-max-size value (440>230) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(896,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference ext(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(898,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(888,12):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_has_token_] comm_param_mod.f90:888

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      64
            Global    :      27
            Local     :      37
        Regenerable   :      11
        Spilled       :      11
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       3 [6.12e+00 ~ 3.8%]
            Writes    :       2 [2.00e+00 ~ 1.2%]
        Spills        :      48 bytes*
            Reads     :       7 [1.54e+01 ~ 9.5%]
            Writes    :       6 [5.92e+00 ~ 3.6%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::NUM_TOKENS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::NUM_TOKENS) [17/22=77.3%] comm_param_mod.f90(905,12)
  -> (913,10) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
     [[ Inlining would exceed -inline-max-size value (440>230) <1>]]
  -> (916,13) COMM_PARAM_MOD::TOKENIZE (isz = 421) (sz = 440)
     [[ Inlining would exceed -inline-max-size value (440>230) <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(911,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference ext(:) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 1.500 
   remark #15478: estimated potential speedup: 1.330 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 2  
LOOP END

LOOP BEGIN at comm_param_mod.f90(914,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15523: loop was not vectorized: loop control variable res was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(905,12):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_num_tokens_] comm_param_mod.f90:905

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      35
            Global    :      15
            Local     :      20
        Regenerable   :       5
        Spilled       :       8
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [6.44e+00 ~ 5.4%]
            Writes    :       2 [2.00e+00 ~ 1.7%]
        Spills        :      24 bytes*
            Reads     :       3 [1.63e+01 ~ 13.7%]
            Writes    :       3 [3.00e+00 ~ 2.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::VALIDATE_PARAMS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::VALIDATE_PARAMS) [18/22=81.8%] comm_param_mod.f90(996,14)
  -> EXTERN: (1004,5) for_concat
  -> EXTERN: (1004,16) for_trim
  -> EXTERN: (1005,5) for_concat
  -> EXTERN: (1005,16) for_trim
  -> (1009,13) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1009,13) __resetsp_inlined
  -> EXTERN: (1009,13) __getsp_inlined
  -> EXTERN: (1009,27) for_trim
  -> EXTERN: (1009,40) _alloca
  -> EXTERN: (1009,40) for_concat
  -> EXTERN: (1009,42) for_trim
  -> EXTERN: (1010,12) for_trim
  -> EXTERN: (1010,38) for_cpstr
  -> (1011,15) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1011,15) __getsp_inlined
  -> EXTERN: (1011,15) __resetsp_inlined
  -> EXTERN: (1011,34) for_trim
  -> EXTERN: (1011,47) for_concat
  -> EXTERN: (1011,47) _alloca
  -> EXTERN: (1011,49) for_trim
  -> EXTERN: (1012,12) for_trim
  -> EXTERN: (1012,42) for_cpstr
  -> (1013,15) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1013,15) __getsp_inlined
  -> EXTERN: (1013,15) __resetsp_inlined
  -> EXTERN: (1013,34) for_trim
  -> EXTERN: (1013,47) for_concat
  -> EXTERN: (1013,47) _alloca
  -> EXTERN: (1013,49) for_trim
  -> EXTERN: (1014,12) for_trim
  -> EXTERN: (1014,36) for_cpstr
  -> (1015,15) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1015,15) __getsp_inlined
  -> EXTERN: (1015,15) __resetsp_inlined
  -> EXTERN: (1015,34) for_trim
  -> EXTERN: (1015,47) for_concat
  -> EXTERN: (1015,47) _alloca
  -> EXTERN: (1015,49) for_trim
  -> EXTERN: (1016,13) __getsp_inlined
  -> (1016,13) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1016,13) __resetsp_inlined
  -> EXTERN: (1016,27) for_trim
  -> EXTERN: (1016,40) _alloca
  -> EXTERN: (1016,40) for_concat
  -> EXTERN: (1016,42) for_trim
  -> EXTERN: (1017,13) __getsp_inlined
  -> (1017,13) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1017,13) __resetsp_inlined
  -> EXTERN: (1017,27) for_trim
  -> EXTERN: (1017,40) _alloca
  -> EXTERN: (1017,40) for_concat
  -> EXTERN: (1017,42) for_trim
  -> EXTERN: (1018,12) for_trim
  -> EXTERN: (1018,41) for_cpstr
  -> (1019,15) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1019,15) __getsp_inlined
  -> EXTERN: (1019,15) __resetsp_inlined
  -> EXTERN: (1019,34) for_trim
  -> EXTERN: (1019,47) for_concat
  -> EXTERN: (1019,47) _alloca
  -> EXTERN: (1019,49) for_trim
  -> EXTERN: (1021,15) for_trim
  -> EXTERN: (1021,51) for_cpstr
  -> EXTERN: (1021,67) for_trim
  -> EXTERN: (1021,102) for_cpstr
  -> EXTERN: (1022,18) __resetsp_inlined
  -> (1022,18) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1022,18) __getsp_inlined
  -> EXTERN: (1022,37) for_trim
  -> EXTERN: (1022,50) for_concat
  -> EXTERN: (1022,50) _alloca
  -> EXTERN: (1022,52) for_trim
  -> EXTERN: (1027,9) for_trim
  -> EXTERN: (1027,36) for_cpstr
  -> (1028,12) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1028,12) __resetsp_inlined
  -> EXTERN: (1028,12) __getsp_inlined
  -> EXTERN: (1028,31) for_trim
  -> EXTERN: (1028,44) _alloca
  -> EXTERN: (1028,44) for_concat
  -> EXTERN: (1028,46) for_trim
  -> EXTERN: (1029,9) for_trim
  -> EXTERN: (1029,34) for_cpstr
  -> (1030,12) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1030,12) __resetsp_inlined
  -> EXTERN: (1030,12) __getsp_inlined
  -> EXTERN: (1030,31) for_trim
  -> EXTERN: (1030,44) _alloca
  -> EXTERN: (1030,44) for_concat
  -> EXTERN: (1030,46) for_trim
  -> EXTERN: (1031,9) for_trim
  -> EXTERN: (1031,32) for_cpstr
  -> (1032,12) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1032,12) __resetsp_inlined
  -> EXTERN: (1032,12) __getsp_inlined
  -> EXTERN: (1032,31) for_trim
  -> EXTERN: (1032,44) _alloca
  -> EXTERN: (1032,44) for_concat
  -> EXTERN: (1032,46) for_trim
  -> EXTERN: (1038,12) for_trim
  -> EXTERN: (1038,34) for_cpstr
  -> (1039,16) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1039,16) __getsp_inlined
  -> EXTERN: (1039,16) __resetsp_inlined
  -> EXTERN: (1039,30) for_trim
  -> EXTERN: (1039,43) for_concat
  -> EXTERN: (1039,43) _alloca
  -> EXTERN: (1039,45) for_trim
  -> EXTERN: (1040,17) for_trim
  -> EXTERN: (1040,40) for_cpstr
  -> EXTERN: (1041,15) for_trim
  -> EXTERN: (1041,42) for_cpstr
  -> (1042,16) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1042,16) __resetsp_inlined
  -> EXTERN: (1042,16) __getsp_inlined
  -> EXTERN: (1042,35) for_trim
  -> EXTERN: (1042,48) _alloca
  -> EXTERN: (1042,48) for_concat
  -> EXTERN: (1042,50) for_trim
  -> EXTERN: (1043,15) for_trim
  -> EXTERN: (1043,42) for_cpstr
  -> (1044,16) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1044,16) __resetsp_inlined
  -> EXTERN: (1044,16) __getsp_inlined
  -> EXTERN: (1044,35) for_trim
  -> EXTERN: (1044,48) _alloca
  -> EXTERN: (1044,48) for_concat
  -> EXTERN: (1044,50) for_trim
  -> EXTERN: (1045,15) for_trim
  -> EXTERN: (1045,39) for_cpstr
  -> (1046,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1046,19) __resetsp_inlined
  -> EXTERN: (1046,19) __getsp_inlined
  -> EXTERN: (1046,33) for_trim
  -> EXTERN: (1046,46) _alloca
  -> EXTERN: (1046,46) for_concat
  -> EXTERN: (1046,48) for_trim
  -> EXTERN: (1047,19) __getsp_inlined
  -> (1047,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1047,19) __resetsp_inlined
  -> EXTERN: (1047,33) for_trim
  -> EXTERN: (1047,46) _alloca
  -> EXTERN: (1047,46) for_concat
  -> EXTERN: (1047,48) for_trim
  -> EXTERN: (1049,15) for_trim
  -> EXTERN: (1049,37) for_cpstr
  -> (1050,16) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1050,16) __resetsp_inlined
  -> EXTERN: (1050,16) __getsp_inlined
  -> EXTERN: (1050,35) for_trim
  -> EXTERN: (1050,48) _alloca
  -> EXTERN: (1050,48) for_concat
  -> EXTERN: (1050,50) for_trim
  -> EXTERN: (1051,15) for_trim
  -> EXTERN: (1051,40) for_cpstr
  -> (1052,16) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1052,16) __resetsp_inlined
  -> EXTERN: (1052,16) __getsp_inlined
  -> EXTERN: (1052,35) for_trim
  -> EXTERN: (1052,48) _alloca
  -> EXTERN: (1052,48) for_concat
  -> EXTERN: (1052,50) for_trim
  -> EXTERN: (1054,24) memmove
  -> EXTERN: (1054,24) _alloca
  -> EXTERN: (1054,24) for_trim
  -> EXTERN: (1055,17) for_cpstr
  -> EXTERN: (1056,18) for_trim
  -> EXTERN: (1056,47) for_cpstr
  -> (1057,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1057,19) __resetsp_inlined
  -> EXTERN: (1057,19) __getsp_inlined
  -> EXTERN: (1057,38) for_trim
  -> EXTERN: (1057,51) _alloca
  -> EXTERN: (1057,51) for_concat
  -> EXTERN: (1057,53) for_trim
  -> EXTERN: (1058,17) for_cpstr
  -> EXTERN: (1059,18) for_trim
  -> EXTERN: (1059,47) for_cpstr
  -> (1060,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1060,19) __resetsp_inlined
  -> EXTERN: (1060,19) __getsp_inlined
  -> EXTERN: (1060,38) for_trim
  -> EXTERN: (1060,51) _alloca
  -> EXTERN: (1060,51) for_concat
  -> EXTERN: (1060,53) for_trim
  -> EXTERN: (1061,19) __resetsp_inlined
  -> (1061,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1061,19) __getsp_inlined
  -> EXTERN: (1061,33) for_trim
  -> EXTERN: (1061,46) for_concat
  -> EXTERN: (1061,46) _alloca
  -> EXTERN: (1061,48) for_trim
  -> EXTERN: (1062,19) __resetsp_inlined
  -> (1062,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1062,19) __getsp_inlined
  -> EXTERN: (1062,33) for_trim
  -> EXTERN: (1062,46) for_concat
  -> EXTERN: (1062,46) _alloca
  -> EXTERN: (1062,48) for_trim
  -> EXTERN: (1063,19) __resetsp_inlined
  -> (1063,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1063,19) __getsp_inlined
  -> EXTERN: (1063,33) for_trim
  -> EXTERN: (1063,46) for_concat
  -> EXTERN: (1063,46) _alloca
  -> EXTERN: (1063,48) for_trim
  -> EXTERN: (1064,19) __resetsp_inlined
  -> (1064,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1064,19) __getsp_inlined
  -> EXTERN: (1064,33) for_trim
  -> EXTERN: (1064,46) for_concat
  -> EXTERN: (1064,46) _alloca
  -> EXTERN: (1064,48) for_trim
  -> EXTERN: (1065,17) for_cpstr
  -> EXTERN: (1066,18) for_trim
  -> EXTERN: (1066,47) for_cpstr
  -> (1067,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1067,19) __resetsp_inlined
  -> EXTERN: (1067,19) __getsp_inlined
  -> EXTERN: (1067,38) for_trim
  -> EXTERN: (1067,51) _alloca
  -> EXTERN: (1067,51) for_concat
  -> EXTERN: (1067,53) for_trim
  -> EXTERN: (1068,19) __resetsp_inlined
  -> (1068,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1068,19) __getsp_inlined
  -> EXTERN: (1068,33) for_trim
  -> EXTERN: (1068,46) for_concat
  -> EXTERN: (1068,46) _alloca
  -> EXTERN: (1068,48) for_trim
  -> EXTERN: (1069,17) for_cpstr
  -> EXTERN: (1070,18) for_trim
  -> EXTERN: (1070,47) for_cpstr
  -> (1071,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1071,19) __resetsp_inlined
  -> EXTERN: (1071,19) __getsp_inlined
  -> EXTERN: (1071,38) for_trim
  -> EXTERN: (1071,51) _alloca
  -> EXTERN: (1071,51) for_concat
  -> EXTERN: (1071,53) for_trim
  -> EXTERN: (1072,18) for_trim
  -> EXTERN: (1072,47) for_cpstr
  -> (1073,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1073,19) __resetsp_inlined
  -> EXTERN: (1073,19) __getsp_inlined
  -> EXTERN: (1073,38) for_trim
  -> EXTERN: (1073,51) _alloca
  -> EXTERN: (1073,51) for_concat
  -> EXTERN: (1073,53) for_trim
  -> EXTERN: (1074,17) for_cpstr
  -> EXTERN: (1075,18) for_trim
  -> EXTERN: (1075,47) for_cpstr
  -> (1076,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1076,19) __resetsp_inlined
  -> EXTERN: (1076,19) __getsp_inlined
  -> EXTERN: (1076,38) for_trim
  -> EXTERN: (1076,51) _alloca
  -> EXTERN: (1076,51) for_concat
  -> EXTERN: (1076,53) for_trim
  -> EXTERN: (1077,18) for_trim
  -> EXTERN: (1077,47) for_cpstr
  -> (1078,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1078,19) __resetsp_inlined
  -> EXTERN: (1078,19) __getsp_inlined
  -> EXTERN: (1078,38) for_trim
  -> EXTERN: (1078,51) _alloca
  -> EXTERN: (1078,51) for_concat
  -> EXTERN: (1078,53) for_trim
  -> EXTERN: (1079,17) for_cpstr
  -> EXTERN: (1080,19) __resetsp_inlined
  -> (1080,19) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1080,19) __getsp_inlined
  -> EXTERN: (1080,19) __getsp_inlined
  -> EXTERN: (1080,19) __resetsp_inlined
  -> EXTERN: (1080,33) for_trim
  -> EXTERN: (1080,46) for_concat
  -> EXTERN: (1080,46) _alloca
  -> EXTERN: (1080,48) for_trim
  -> EXTERN: (1083,17) for_trim
  -> EXTERN: (1083,40) for_cpstr
  -> EXTERN: (1084,16) __resetsp_inlined
  -> (1084,16) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1084,16) __getsp_inlined
  -> EXTERN: (1084,30) for_trim
  -> EXTERN: (1084,43) for_concat
  -> EXTERN: (1084,43) _alloca
  -> EXTERN: (1084,45) for_trim
  -> (1085,16) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1085,16) __getsp_inlined
  -> EXTERN: (1085,16) __resetsp_inlined
  -> EXTERN: (1085,30) for_trim
  -> EXTERN: (1085,43) for_concat
  -> EXTERN: (1085,43) _alloca
  -> EXTERN: (1085,45) for_trim
  -> EXTERN: (1087,17) for_trim
  -> EXTERN: (1087,40) for_cpstr
  -> (1088,16) COMM_PARAM_MOD::VALIDATE_FILE (isz = 141) (sz = 150)
     [[ Inlining inhibited by overrideable criterion  <2>]]
  -> EXTERN: (1088,16) __getsp_inlined
  -> EXTERN: (1088,16) __resetsp_inlined
  -> EXTERN: (1088,30) for_trim
  -> EXTERN: (1088,43) for_concat
  -> EXTERN: (1088,43) _alloca
  -> EXTERN: (1088,45) for_trim


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(1008,5)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between at (1009:27) and at (1009:40)
   remark #17106: parallel dependence: assumed ANTI dependence between at (1009:40) and at (1009:27)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at comm_param_mod.f90(1020,8)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between at (1021:15) and at (1021:51)
      remark #17106: parallel dependence: assumed ANTI dependence between at (1021:51) and at (1021:15)
      remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1021,15) ]
      remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1021,67) ]
      remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1022,37) ]
      remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1022,52) ]
      remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1022,50) ]
      remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1022,18) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between at (1021:15) and at (1021:51)
      remark #15346: vector dependence: assumed ANTI dependence between at (1021:51) and at (1021:15)
   LOOP END
LOOP END

LOOP BEGIN at comm_param_mod.f90(1035,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between at (1038:12) and at (1038:34)
   remark #17106: parallel dependence: assumed ANTI dependence between at (1038:34) and at (1038:12)
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1038,12) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1039,30) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1039,45) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1039,43) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1039,16) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1040,17) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1041,15) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1042,35) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1042,50) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1042,48) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1042,16) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1043,15) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1044,35) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1044,50) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1044,48) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1044,16) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1045,15) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1046,33) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1046,48) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1046,46) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1046,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1047,33) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1047,48) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1047,46) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1047,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1049,15) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1050,35) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1050,50) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1050,48) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1050,16) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1051,15) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1052,35) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1052,50) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1052,48) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1052,16) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1054,24) ]
   remark #15382: vectorization support: call to function memmove cannot be vectorized   [ comm_param_mod.f90(1054,24) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1056,18) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1057,38) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1057,53) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1057,51) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1057,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1059,18) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1060,38) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1060,53) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1060,51) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1060,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1061,33) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1061,48) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1061,46) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1061,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1062,33) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1062,48) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1062,46) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1062,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1063,33) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1063,48) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1063,46) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1063,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1064,33) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1064,48) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1064,46) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1064,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1066,18) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1067,38) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1067,53) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1067,51) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1067,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1068,33) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1068,48) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1068,46) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1068,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1070,18) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1071,38) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1071,53) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1071,51) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1071,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1072,18) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1073,38) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1073,53) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1073,51) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1073,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1075,18) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1076,38) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1076,53) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1076,51) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1076,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1077,18) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1078,38) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1078,53) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1078,51) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1078,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1080,33) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1080,48) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1080,46) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1080,19) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1083,17) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1084,30) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1084,45) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1084,43) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1084,16) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1085,30) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1085,45) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1085,43) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1085,16) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1087,17) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1088,30) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(1088,45) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(1088,43) ]
   remark #15382: vectorization support: call to function COMM_PARAM_MOD::VALIDATE_FILE cannot be vectorized   [ comm_param_mod.f90(1088,16) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between at (1038:12) and at (1038:34)
   remark #15346: vector dependence: assumed ANTI dependence between at (1038:34) and at (1038:12)
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(1054,24):remark #34014: optimization advice for memmove: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
comm_param_mod.f90(1054,24):remark #34026: call to memmove implemented as a call to optimized library version
comm_param_mod.f90(996,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_validate_params_] comm_param_mod.f90:996

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :    1946
            Global    :     525
            Local     :    1421
        Regenerable   :     719
        Spilled       :      57
        
    Routine stack
        Variables     :   51332 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :     145 [1.13e+02 ~ 3.6%]
        Spills        :     416 bytes*
            Reads     :      60 [2.05e+01 ~ 0.7%]
            Writes    :      56 [1.68e+01 ~ 0.5%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::VALIDATE_FILE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::VALIDATE_FILE) [19/22=86.4%] comm_param_mod.f90(1095,14)
  -> EXTERN: (1101,13) __resetsp_inlined
  -> EXTERN: (1101,13) for_inquire
  -> EXTERN: (1101,13) __getsp_inlined
  -> EXTERN: (1101,18) for_trim
  -> EXTERN: (1101,23) _alloca
  -> EXTERN: (1104,16) __getsp_inlined
  -> EXTERN: (1104,16) REPORT_ERROR
  -> EXTERN: (1104,16) __resetsp_inlined
  -> EXTERN: (1104,60) _alloca
  -> EXTERN: (1104,60) for_concat
  -> EXTERN: (1104,62) for_trim
  -> EXTERN: (1104,67) _alloca
  -> EXTERN: (1106,16) __getsp_inlined
  -> EXTERN: (1106,16) REPORT_ERROR
  -> EXTERN: (1106,16) __resetsp_inlined
  -> EXTERN: (1106,60) _alloca
  -> EXTERN: (1106,60) for_concat
  -> EXTERN: (1106,62) for_trim
  -> EXTERN: (1106,67) _alloca


    Report from: Code generation optimizations [cg]

comm_param_mod.f90(1095,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_validate_file_] comm_param_mod.f90:1095

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   12[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15]
        
    Routine temporaries
        Total         :      87
            Global    :      32
            Local     :      55
        Regenerable   :      17
        Spilled       :       5
        
    Routine stack
        Variables     :     156 bytes*
            Reads     :       1 [1.00e+00 ~ 1.3%]
            Writes    :      12 [6.00e+00 ~ 7.8%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::PRINT_ASCII_PARAMETER_FILE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::PRINT_ASCII_PARAMETER_FILE) [20/22=90.9%] comm_param_mod.f90(1248,14)
  -> EXTERN: (1254,12) GETLUN
  -> EXTERN: (1256,5) for_open
  -> EXTERN: (1256,21) for_trim
  -> EXTERN: (1259,5) __resetsp_inlined
  -> EXTERN: (1259,5) for_write_seq_lis
  -> EXTERN: (1259,5) __getsp_inlined
  -> EXTERN: (1259,53) for_trim
  -> EXTERN: (1259,73) for_concat
  -> EXTERN: (1259,73) _alloca
  -> EXTERN: (1260,5) for_stop_core


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(1255,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15389: vectorization support: reference paramfile_out(Impl_lp+1) has unaligned access
   remark #15389: vectorization support: reference at (1255:19) has unaligned access   [ comm_param_mod.f90(1255,19) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 16
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 0.500 
   remark #15478: estimated potential speedup: 2.550 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at comm_param_mod.f90(1255,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference paramfile_out(Impl_lp+24) has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15305: vectorization support: vector length 2
   remark #15427: loop was completely unrolled
   remark #15399: vectorization support: unroll factor set to 4
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 2 
   remark #15477: vector cost: 3.000 
   remark #15478: estimated potential speedup: 0.660 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 8  
LOOP END

LOOP BEGIN at comm_param_mod.f90(1255,5)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 7  
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(1248,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_print_ascii_parameter_file_] comm_param_mod.f90:1248

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   10[ rax rdx rcx rbx rsi rdi r8 r12-r13 zmm0]
        
    Routine temporaries
        Total         :      66
            Global    :      21
            Local     :      45
        Regenerable   :      42
        Spilled       :       3
        
    Routine stack
        Variables     :     248 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      30 [3.00e+01 ~ 30.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::DUMP_EXPANDED_PARAMFILE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::DUMP_EXPANDED_PARAMFILE) [21/22=95.5%] comm_param_mod.f90(811,14)
  -> EXTERN: (820,13) GETLUN
  -> EXTERN: (821,5) for_open
  -> EXTERN: (822,5) for_write_seq_fmt
  -> EXTERN: (823,15) for_iargc
  -> EXTERN: (824,13) for_getarg
  -> EXTERN: (825,8) __getsp_inlined
  -> EXTERN: (825,8) for_write_seq_fmt
  -> EXTERN: (825,8) __resetsp_inlined
  -> EXTERN: (825,52) for_trim
  -> EXTERN: (825,62) _alloca
  -> EXTERN: (825,62) for_concat
  -> EXTERN: (827,5) for_write_seq_lis
  -> EXTERN: (829,20) GETLUN
  -> EXTERN: (830,5) for_open
  -> EXTERN: (832,8) for_read_seq_lis
  -> EXTERN: (833,18) for_backspace
  -> EXTERN: (834,15) for_cpstr
  -> EXTERN: (836,11) for_read_seq_lis_xmit
  -> EXTERN: (836,11) for_read_seq_lis
  -> EXTERN: (837,11) __resetsp_inlined
  -> EXTERN: (837,11) for_write_seq_fmt
  -> EXTERN: (837,11) __getsp_inlined
  -> EXTERN: (837,34) PAD
  -> EXTERN: (837,34) _alloca
  -> EXTERN: (837,34) for_len_trim
  -> EXTERN: (837,68) for_concat
  -> EXTERN: (837,68) _alloca
  -> EXTERN: (837,71) for_trim
  -> EXTERN: (839,26) GETLUN
  -> EXTERN: (840,11) for_open
  -> EXTERN: (842,11) for_read_seq_fmt
  -> EXTERN: (843,11) __getsp_inlined
  -> EXTERN: (843,11) for_write_seq_fmt
  -> EXTERN: (843,11) __resetsp_inlined
  -> EXTERN: (843,34) for_len_trim
  -> EXTERN: (843,34) _alloca
  -> EXTERN: (843,34) PAD
  -> EXTERN: (843,54) _alloca
  -> EXTERN: (843,54) for_concat
  -> EXTERN: (843,57) for_trim
  -> EXTERN: (846,14) for_close
  -> EXTERN: (849,11) for_close


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(823,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (824:20) and at (824:13)
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (824:13) and at (824:20)
   remark #15382: vectorization support: call to function for_getarg cannot be vectorized   [ comm_param_mod.f90(824,13) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ comm_param_mod.f90(825,52) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ comm_param_mod.f90(825,62) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt cannot be vectorized   [ comm_param_mod.f90(825,8) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (824:20) and at (824:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between at (824:13) and at (824:20)
LOOP END

LOOP BEGIN at comm_param_mod.f90(831,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(811,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_dump_expanded_paramfile_] comm_param_mod.f90:811

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   13[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15]
        
    Routine temporaries
        Total         :     278
            Global    :      74
            Local     :     204
        Regenerable   :     170
        Spilled       :      10
        
    Routine stack
        Variables     :    7652 bytes*
            Reads     :       5 [7.29e+02 ~ 3.1%]
            Writes    :      69 [4.10e+03 ~ 17.2%]
        Spills        :      40 bytes*
            Reads     :       9 [2.10e+02 ~ 0.9%]
            Writes    :       6 [5.90e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: COMM_PARAM_MOD::INITIALIZE_MPI_STRUCT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (COMM_PARAM_MOD::INITIALIZE_MPI_STRUCT) [22/22=100.0%] comm_param_mod.f90(194,14)
  -> EXTERN: (210,5) for_alloc_allocatable
  -> EXTERN: (210,5) for_check_mult_overflow64
  -> EXTERN: (225,10) mpi_comm_split_
  -> EXTERN: (226,10) mpi_comm_size_
  -> EXTERN: (230,13) RAND_INIT
  -> EXTERN: (232,15) f_ldnint_val
  -> EXTERN: (232,20) RAND_UNI
  -> EXTERN: (233,16) mpi_send_
  -> EXTERN: (236,13) mpi_recv_
  -> EXTERN: (237,13) RAND_INIT
  -> EXTERN: (240,5) for_dealloc_allocatable
  -> EXTERN: (242,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at comm_param_mod.f90(222,5)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ comm_param_mod.f90(220,5) ]
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between IND(:,1) (215:8) and IND(:,1) (215:8)
   remark #17106: parallel dependence: assumed OUTPUT dependence between IND(:,1) (215:8) and IND(:,1) (215:8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at comm_param_mod.f90(215,8)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(215,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference IND(:,1) has aligned access
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 4.333
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 2.460 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(215,8)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(216,8)
   <Peeled loop for vectorization, Distributed chunk1>
      remark #25015: Estimate of max trip count of loop=3
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(216,8)
   <Distributed chunk1>
      remark #25426: Loop Distributed (2 way) 
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference IND(n+j,2) has aligned access   [ comm_param_mod.f90(217,11) ]
      remark #15305: vectorization support: vector length 4
      remark #15309: vectorization support: normalized vectorization overhead 3.667
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 2 
      remark #15477: vector cost: 0.750 
      remark #15478: estimated potential speedup: 2.480 
      remark #15488: --- end vector cost summary ---
   LOOP END

   LOOP BEGIN at comm_param_mod.f90(216,8)
   <Remainder loop for vectorization, Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at comm_param_mod.f90(231,8)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

    Report from: Code generation optimizations [cg]

comm_param_mod.f90(200,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
comm_param_mod.f90(194,14):remark #34051: REGISTER ALLOCATION : [comm_param_mod_mp_initialize_mpi_struct_] comm_param_mod.f90:194

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     242
            Global    :      59
            Local     :     183
        Regenerable   :      54
        Spilled       :       9
        
    Routine stack
        Variables     :     116 bytes*
            Reads     :       8 [9.72e+00 ~ 0.6%]
            Writes    :      23 [2.49e+01 ~ 1.6%]
        Spills        :      40 bytes*
            Reads     :       5 [1.38e+01 ~ 0.9%]
            Writes    :       5 [4.90e+00 ~ 0.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> The subprogram is larger than the inliner would normally inline.  Use the
    option -inline-max-size to increase the size of any subprogram that would
    normally be inlined, add "!DIR$ATTRIBUTES FORCEINLINE" to the
    declaration of the called function, or add "!DIR$ FORCEINLINE" before
    the call site.

<2> The compiler's heuristics predict that it is not profitable to inline the
    call.  Add "!DIR$ATTRIBUTES FORCEINLINE" to the declaration of the called 
    subprogram, or add "!DIR$ FORCEINLINE" before the call site.

