Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 18.0.3.222 Build 20180410

Compiler options: -I/mn/stornext/u3/hke/owl/local/src/dagsshealpix/include -I/mn/stornext/u3/hke/owl/local/include -I/astro/local/opt/Intel/compilers_and_libraries_2018.3.222/linux/mpi/intel64/include -I/astro/local/opt/Intel/compilers_and_libraries_2018.3.222/linux/mpi/intel64/include -O3 -traceback -qopenmp -qopt-report=5 -parallel -c

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: spline_2d_mod._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (spline_2d_mod._) [1/7=14.3%] spline_2D_mod.f90(1,8)


    Report from: Code generation optimizations [cg]

spline_2D_mod.f90(1,8):remark #34051: REGISTER ALLOCATION : [spline_2d_mod._] spline_2D_mod.f90:1

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    0[ reg_null]
        
    Routine temporaries
        Total         :       6
            Global    :       0
            Local     :       6
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SPLINE_2D_MOD::SPLIE2_FULL_PRECOMP_MPI

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SPLINE_2D_MOD::SPLIE2_FULL_PRECOMP_MPI) [2/7=28.6%] spline_2D_mod.f90(15,14)
  -> EXTERN: (32,10) mpi_comm_rank_
  -> EXTERN: (33,10) mpi_comm_size_
  -> EXTERN: (39,10) wall_time_
  -> EXTERN: (40,5) for_alloc_allocatable
  -> EXTERN: (40,5) for_check_mult_overflow64
  -> EXTERN: (41,5) for_alloc_allocatable
  -> EXTERN: (41,5) for_check_mult_overflow64
  -> EXTERN: (44,13) SPLINE_PLAIN
  -> EXTERN: (45,13) SPLINT_DERIV_ALL_NODES
  -> EXTERN: (47,5) for_dealloc_allocatable
  -> EXTERN: (48,10) mpi_allreduce_
  -> EXTERN: (49,10) wall_time_
  -> EXTERN: (53,10) wall_time_
  -> EXTERN: (54,5) for_alloc_allocatable
  -> EXTERN: (54,5) for_check_mult_overflow64
  -> EXTERN: (55,5) for_alloc_allocatable
  -> EXTERN: (55,5) for_check_mult_overflow64
  -> EXTERN: (58,13) SPLINE_PLAIN
  -> EXTERN: (59,13) SPLINT_DERIV_ALL_NODES
  -> EXTERN: (61,5) for_dealloc_allocatable
  -> EXTERN: (62,10) mpi_allreduce_
  -> EXTERN: (63,10) wall_time_
  -> EXTERN: (68,10) wall_time_
  -> EXTERN: (69,5) for_alloc_allocatable
  -> EXTERN: (69,5) for_check_mult_overflow64
  -> EXTERN: (70,5) for_alloc_allocatable
  -> EXTERN: (70,5) for_check_mult_overflow64
  -> EXTERN: (73,13) SPLINE_PLAIN
  -> EXTERN: (74,13) SPLINT_DERIV_ALL_NODES
  -> EXTERN: (76,5) for_dealloc_allocatable
  -> EXTERN: (77,10) mpi_allreduce_
  -> EXTERN: (78,10) wall_time_
  -> EXTERN: (82,10) wall_time_
  -> EXTERN: (172,16) SOLVE_SYSTEM_REAL
  -> EXTERN: (181,10) wall_time_
  -> EXTERN: (184,10) wall_time_
  -> EXTERN: (189,16) __getsp_inlined
  -> EXTERN: (189,16) mpi_bcast_
  -> EXTERN: (189,16) __resetsp_inlined
  -> EXTERN: (189,26) _alloca
  -> EXTERN: (193,10) wall_time_
  -> EXTERN: (198,5) for_dealloc_allocatable
  -> EXTERN: (199,5) for_dealloc_allocatable
  -> EXTERN: (200,5) for_dealloc_allocatable
  -> EXTERN: (202,3) for_dealloc_allocatable
  -> EXTERN: (202,3) for_dealloc_allocatable
  -> EXTERN: (202,3) for_dealloc_allocatable
  -> EXTERN: (202,3) for_dealloc_allocatable
  -> EXTERN: (202,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at spline_2D_mod.f90(42,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spline_2D_mod.f90(42,5)
      remark #25408: memset generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between DF_DX(:,:) (42:5) and DF_DX(:,:) (42:5)
      remark #17106: parallel dependence: assumed OUTPUT dependence between DF_DX(:,:) (42:5) and DF_DX(:,:) (42:5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=1

      LOOP BEGIN at spline_2D_mod.f90(42,5)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference DF_DX(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.300
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.450 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(42,5)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=12
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at spline_2D_mod.f90(43,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (44:13) and DF_DX (45:13)
   remark #17106: parallel dependence: assumed OUTPUT dependence between DF_DX (45:13) and at (44:13)
   remark #15382: vectorization support: call to function SPLINE_PLAIN cannot be vectorized   [ spline_2D_mod.f90(44,13) ]
   remark #15382: vectorization support: call to function SPLINT_DERIV_ALL_NODES cannot be vectorized   [ spline_2D_mod.f90(45,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (44:13) and DF_DX (45:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between DF_DX (45:13) and at (44:13)
LOOP END

LOOP BEGIN at spline_2D_mod.f90(56,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spline_2D_mod.f90(56,5)
      remark #25408: memset generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between DF_DY(:,:) (56:5) and DF_DY(:,:) (56:5)
      remark #17106: parallel dependence: assumed OUTPUT dependence between DF_DY(:,:) (56:5) and DF_DY(:,:) (56:5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=1

      LOOP BEGIN at spline_2D_mod.f90(56,5)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference DF_DY(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.300
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.450 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(56,5)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=12
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at spline_2D_mod.f90(57,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (58:13) and DF_DY (59:13)
   remark #17106: parallel dependence: assumed OUTPUT dependence between DF_DY (59:13) and at (58:13)
   remark #15382: vectorization support: call to function SPLINE_PLAIN cannot be vectorized   [ spline_2D_mod.f90(58,13) ]
   remark #15382: vectorization support: call to function SPLINT_DERIV_ALL_NODES cannot be vectorized   [ spline_2D_mod.f90(59,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (58:13) and DF_DY (59:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between DF_DY (59:13) and at (58:13)
LOOP END

LOOP BEGIN at spline_2D_mod.f90(71,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spline_2D_mod.f90(71,5)
      remark #25408: memset generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between DDF_DXDY(:,:) (71:5) and DDF_DXDY(:,:) (71:5)
      remark #17106: parallel dependence: assumed OUTPUT dependence between DDF_DXDY(:,:) (71:5) and DDF_DXDY(:,:) (71:5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=1

      LOOP BEGIN at spline_2D_mod.f90(71,5)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference DDF_DXDY(:,:) has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.300
         remark #15300: LOOP WAS VECTORIZED
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 2.500 
         remark #15478: estimated potential speedup: 1.450 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=3
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(71,5)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=12
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at spline_2D_mod.f90(72,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between DF_DY_V%DF_DY_V(0) (73:13) and y2 (74:13)
   remark #17106: parallel dependence: assumed FLOW dependence between y2 (74:13) and DF_DY_V%DF_DY_V(0) (73:13)
   remark #15382: vectorization support: call to function SPLINE_PLAIN cannot be vectorized   [ spline_2D_mod.f90(73,13) ]
   remark #15382: vectorization support: call to function SPLINT_DERIV_ALL_NODES cannot be vectorized   [ spline_2D_mod.f90(74,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between DF_DY_V%DF_DY_V(0) (73:13) and y2 (74:13)
   remark #15346: vector dependence: assumed FLOW dependence between y2 (74:13) and DF_DY_V%DF_DY_V(0) (73:13)
LOOP END

LOOP BEGIN at spline_2D_mod.f90(84,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between j (85:8) and j (179:8)
   remark #17106: parallel dependence: assumed OUTPUT dependence between j (179:8) and j (85:8)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spline_2D_mod.f90(85,8)
      remark #17102: loop was not parallelized: not a parallelization candidate
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at spline_2D_mod.f90(88,11)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15306: loop was not vectorized: inner loop was transformed to memset or memcpy
         remark #25015: Estimate of max trip count of loop=16

         LOOP BEGIN at spline_2D_mod.f90(88,11)
            remark #25408: memset generated
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
            remark #25015: Estimate of max trip count of loop=1
         LOOP END
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(108,11)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(4,:)>, stride is 16
         remark #15305: vectorization support: vector length 2
         remark #15427: loop was completely unrolled
         remark #15399: vectorization support: unroll factor set to 8
         remark #15300: LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.330 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(126,11)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(8,k)>, stride is 16   [ spline_2D_mod.f90(127,14) ]
         remark #15305: vectorization support: vector length 2
         remark #15427: loop was completely unrolled
         remark #15399: vectorization support: unroll factor set to 8
         remark #15309: vectorization support: normalized vectorization overhead 0.002
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 6 
         remark #15477: vector cost: 39.500 
         remark #15478: estimated potential speedup: 0.150 
         remark #15482: vectorized math library calls: 1 
         remark #15487: type converts: 1 
         remark #15488: --- end vector cost summary ---
         remark #25436: completely unrolled by 16  
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(146,11)
         remark #25045: Fused Loops: ( 146 165 )

         remark #17108: loop was not parallelized: insufficient computational work
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(12,k)>, stride is 16   [ spline_2D_mod.f90(147,14) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(16,k)>, stride is 16   [ spline_2D_mod.f90(166,14) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.045
         remark #15453: unmasked strided stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 18 
         remark #15477: vector cost: 55.000 
         remark #15478: estimated potential speedup: 0.320 
         remark #15482: vectorized math library calls: 1 
         remark #15487: type converts: 2 
         remark #15488: --- end vector cost summary ---
         remark #25436: completely unrolled by 16  
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(165,11)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(176,14)
      <Multiversioned v1>
         remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15542: loop was not vectorized: inner loop was already vectorized
         remark #25015: Estimate of max trip count of loop=4

         LOOP BEGIN at spline_2D_mod.f90(176,14)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15388: vectorization support: reference coeff(:,k,i,j) has aligned access
            remark #15388: vectorization support: reference z(:) has aligned access
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.333
            remark #15300: LOOP WAS VECTORIZED
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 1.500 
            remark #15478: estimated potential speedup: 2.280 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=8
         LOOP END

         LOOP BEGIN at spline_2D_mod.f90(176,14)
         <Alternate Alignment Vectorized Loop>
            remark #25015: Estimate of max trip count of loop=8
         LOOP END

         LOOP BEGIN at spline_2D_mod.f90(176,14)
         <Remainder loop for vectorization>
            remark #25015: Estimate of max trip count of loop=16
         LOOP END
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(176,14)
      <Multiversioned v2>
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15542: loop was not vectorized: inner loop was already vectorized
         remark #25015: Estimate of max trip count of loop=4

         LOOP BEGIN at spline_2D_mod.f90(176,14)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15388: vectorization support: reference z(:) has aligned access
            remark #15329: vectorization support: non-unit strided store was emulated for the variable <coeff(:,k,i,j)>, stride is unknown to compiler
            remark #15305: vectorization support: vector length 2
            remark #15300: LOOP WAS VECTORIZED
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 3.000 
            remark #15478: estimated potential speedup: 1.330 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=8
         LOOP END

         LOOP BEGIN at spline_2D_mod.f90(176,14)
         <Remainder loop for vectorization>
            remark #25015: Estimate of max trip count of loop=16
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at spline_2D_mod.f90(187,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spline_2D_mod.f90(188,8)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between at (189:26) and at (189:26)
      remark #17106: parallel dependence: assumed ANTI dependence between at (189:26) and at (189:26)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at spline_2D_mod.f90(189,26)
         remark #25101: Loop Interchange not done due to: Original Order seems proper
         remark #25452: Original Order found to be proper, but by a close margin
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at spline_2D_mod.f90(189,26)
         <Multiversioned v1>
            remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at spline_2D_mod.f90(189,26)
            <Peeled loop for vectorization>
               remark #25015: Estimate of max trip count of loop=1
            LOOP END

            LOOP BEGIN at spline_2D_mod.f90(189,26)
               remark #17108: loop was not parallelized: insufficient computational work
               remark #15388: vectorization support: reference at (189:26) has aligned access
               remark #15388: vectorization support: reference coeff(:,:,i,:) has aligned access
               remark #15305: vectorization support: vector length 2
               remark #15309: vectorization support: normalized vectorization overhead 4.667
               remark #15300: LOOP WAS VECTORIZED
               remark #15448: unmasked aligned unit stride loads: 1 
               remark #15449: unmasked aligned unit stride stores: 1 
               remark #15475: --- begin vector cost summary ---
               remark #15476: scalar cost: 4 
               remark #15477: vector cost: 1.500 
               remark #15478: estimated potential speedup: 2.550 
               remark #15488: --- end vector cost summary ---
            LOOP END

            LOOP BEGIN at spline_2D_mod.f90(189,26)
            <Alternate Alignment Vectorized Loop>
            LOOP END

            LOOP BEGIN at spline_2D_mod.f90(189,26)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END

         LOOP BEGIN at spline_2D_mod.f90(189,26)
         <Multiversioned v2>
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at spline_2D_mod.f90(189,26)
            <Peeled loop for vectorization>
               remark #25015: Estimate of max trip count of loop=1
            LOOP END

            LOOP BEGIN at spline_2D_mod.f90(189,26)
               remark #17108: loop was not parallelized: insufficient computational work
               remark #15388: vectorization support: reference at (189:26) has aligned access
               remark #15328: vectorization support: non-unit strided load was emulated for the variable <coeff(:,:,i,:)>, stride is unknown to compiler
               remark #15305: vectorization support: vector length 2
               remark #15309: vectorization support: normalized vectorization overhead 2.000
               remark #15300: LOOP WAS VECTORIZED
               remark #15449: unmasked aligned unit stride stores: 1 
               remark #15452: unmasked strided loads: 1 
               remark #15475: --- begin vector cost summary ---
               remark #15476: scalar cost: 4 
               remark #15477: vector cost: 2.500 
               remark #15478: estimated potential speedup: 1.570 
               remark #15488: --- end vector cost summary ---
            LOOP END

            LOOP BEGIN at spline_2D_mod.f90(189,26)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(189,26)
         remark #25101: Loop Interchange not done due to: Original Order seems proper
         remark #25452: Original Order found to be proper, but by a close margin
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at spline_2D_mod.f90(189,26)
         <Multiversioned v1>
            remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at spline_2D_mod.f90(189,26)
            <Peeled loop for vectorization>
               remark #25015: Estimate of max trip count of loop=1
            LOOP END

            LOOP BEGIN at spline_2D_mod.f90(189,26)
               remark #17108: loop was not parallelized: insufficient computational work
               remark #15388: vectorization support: reference coeff(:,:,i,:) has aligned access
               remark #15388: vectorization support: reference at (189:26) has aligned access
               remark #15305: vectorization support: vector length 2
               remark #15309: vectorization support: normalized vectorization overhead 4.667
               remark #15300: LOOP WAS VECTORIZED
               remark #15442: entire loop may be executed in remainder
               remark #15448: unmasked aligned unit stride loads: 1 
               remark #15449: unmasked aligned unit stride stores: 1 
               remark #15475: --- begin vector cost summary ---
               remark #15476: scalar cost: 4 
               remark #15477: vector cost: 1.500 
               remark #15478: estimated potential speedup: 2.550 
               remark #15488: --- end vector cost summary ---
            LOOP END

            LOOP BEGIN at spline_2D_mod.f90(189,26)
            <Alternate Alignment Vectorized Loop>
            LOOP END

            LOOP BEGIN at spline_2D_mod.f90(189,26)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END

         LOOP BEGIN at spline_2D_mod.f90(189,26)
         <Multiversioned v2>
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at spline_2D_mod.f90(189,26)
            <Peeled loop for vectorization>
               remark #25015: Estimate of max trip count of loop=1
            LOOP END

            LOOP BEGIN at spline_2D_mod.f90(189,26)
               remark #17108: loop was not parallelized: insufficient computational work
               remark #15388: vectorization support: reference at (189:26) has aligned access
               remark #15329: vectorization support: non-unit strided store was emulated for the variable <coeff(:,:,i,:)>, stride is unknown to compiler
               remark #15305: vectorization support: vector length 2
               remark #15309: vectorization support: normalized vectorization overhead 1.667
               remark #15300: LOOP WAS VECTORIZED
               remark #15448: unmasked aligned unit stride loads: 1 
               remark #15453: unmasked strided stores: 1 
               remark #15475: --- begin vector cost summary ---
               remark #15476: scalar cost: 4 
               remark #15477: vector cost: 3.000 
               remark #15478: estimated potential speedup: 1.310 
               remark #15488: --- end vector cost summary ---
            LOOP END

            LOOP BEGIN at spline_2D_mod.f90(189,26)
            <Remainder loop for vectorization>
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

spline_2D_mod.f90(27,50):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
spline_2D_mod.f90(26,60):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
spline_2D_mod.f90(26,53):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
spline_2D_mod.f90(26,46):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
spline_2D_mod.f90(25,46):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
spline_2D_mod.f90(42,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
spline_2D_mod.f90(42,5):remark #34026: call to memset implemented as a call to optimized library version
spline_2D_mod.f90(56,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
spline_2D_mod.f90(56,5):remark #34026: call to memset implemented as a call to optimized library version
spline_2D_mod.f90(71,5):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
spline_2D_mod.f90(71,5):remark #34026: call to memset implemented as a call to optimized library version
spline_2D_mod.f90(88,11):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 0)
spline_2D_mod.f90(15,14):remark #34051: REGISTER ALLOCATION : [spline_2d_mod_mp_splie2_full_precomp_mpi_] spline_2D_mod.f90:15

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1213
            Global    :     289
            Local     :     924
        Regenerable   :     180
        Spilled       :      82
        
    Routine stack
        Variables     :    3792 bytes*
            Reads     :      91 [3.33e+02 ~ 0.2%]
            Writes    :     322 [4.02e+03 ~ 2.1%]
        Spills        :     616 bytes*
            Reads     :     190 [6.20e+03 ~ 3.2%]
            Writes    :     125 [1.42e+03 ~ 0.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SPLINE_2D_MOD::SPLIE2_FULL_PRECOMP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SPLINE_2D_MOD::SPLIE2_FULL_PRECOMP) [3/7=42.9%] spline_2D_mod.f90(205,14)
  -> EXTERN: (224,5) for_alloc_allocatable
  -> EXTERN: (224,5) for_check_mult_overflow64
  -> EXTERN: (225,5) for_alloc_allocatable
  -> EXTERN: (225,5) for_check_mult_overflow64
  -> EXTERN: (227,13) SPLINE_PLAIN
  -> EXTERN: (228,13) SPLINT_DERIV_ALL_NODES
  -> EXTERN: (230,5) for_dealloc_allocatable
  -> EXTERN: (233,5) for_alloc_allocatable
  -> EXTERN: (233,5) for_check_mult_overflow64
  -> EXTERN: (234,5) for_alloc_allocatable
  -> EXTERN: (234,5) for_check_mult_overflow64
  -> EXTERN: (236,13) SPLINE_PLAIN
  -> EXTERN: (237,13) SPLINT_DERIV_ALL_NODES
  -> EXTERN: (239,5) for_dealloc_allocatable
  -> EXTERN: (243,5) for_alloc_allocatable
  -> EXTERN: (243,5) for_check_mult_overflow64
  -> EXTERN: (244,5) for_alloc_allocatable
  -> EXTERN: (244,5) for_check_mult_overflow64
  -> EXTERN: (246,13) SPLINE_PLAIN
  -> EXTERN: (247,13) SPLINT_DERIV_ALL_NODES
  -> EXTERN: (249,5) for_dealloc_allocatable
  -> EXTERN: (341,16) SOLVE_SYSTEM_REAL
  -> EXTERN: (352,5) for_dealloc_allocatable
  -> EXTERN: (353,5) for_dealloc_allocatable
  -> EXTERN: (354,5) for_dealloc_allocatable
  -> EXTERN: (356,3) for_dealloc_allocatable
  -> EXTERN: (356,3) for_dealloc_allocatable
  -> EXTERN: (356,3) for_dealloc_allocatable
  -> EXTERN: (356,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at spline_2D_mod.f90(226,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (227:13) and DF_DX (228:13)
   remark #17106: parallel dependence: assumed OUTPUT dependence between DF_DX (228:13) and at (227:13)
   remark #15382: vectorization support: call to function SPLINE_PLAIN cannot be vectorized   [ spline_2D_mod.f90(227,13) ]
   remark #15382: vectorization support: call to function SPLINT_DERIV_ALL_NODES cannot be vectorized   [ spline_2D_mod.f90(228,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (227:13) and DF_DX (228:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between DF_DX (228:13) and at (227:13)
LOOP END

LOOP BEGIN at spline_2D_mod.f90(235,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (236:13) and DF_DY (237:13)
   remark #17106: parallel dependence: assumed OUTPUT dependence between DF_DY (237:13) and at (236:13)
   remark #15382: vectorization support: call to function SPLINE_PLAIN cannot be vectorized   [ spline_2D_mod.f90(236,13) ]
   remark #15382: vectorization support: call to function SPLINT_DERIV_ALL_NODES cannot be vectorized   [ spline_2D_mod.f90(237,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (236:13) and DF_DY (237:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between DF_DY (237:13) and at (236:13)
LOOP END

LOOP BEGIN at spline_2D_mod.f90(245,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (246:13) and DDF_DXDY (247:13)
   remark #17106: parallel dependence: assumed OUTPUT dependence between DDF_DXDY (247:13) and at (246:13)
   remark #15382: vectorization support: call to function SPLINE_PLAIN cannot be vectorized   [ spline_2D_mod.f90(246,13) ]
   remark #15382: vectorization support: call to function SPLINT_DERIV_ALL_NODES cannot be vectorized   [ spline_2D_mod.f90(247,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (246:13) and DDF_DXDY (247:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between DDF_DXDY (247:13) and at (246:13)
LOOP END

LOOP BEGIN at spline_2D_mod.f90(253,5)
   remark #25095: Loop Interchange not done due to: User Function Inside Loop Nest
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation : ( 1 2 ) --> ( 2 1 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between a(:,:) (257:11) and a (341:16)
   remark #17106: parallel dependence: assumed ANTI dependence between a (341:16) and a(:,:) (257:11)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at spline_2D_mod.f90(254,8)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between a(:,:) (257:11) and a (341:16)
      remark #17106: parallel dependence: assumed ANTI dependence between a (341:16) and a(:,:) (257:11)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at spline_2D_mod.f90(257,11)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15306: loop was not vectorized: inner loop was transformed to memset or memcpy
         remark #25015: Estimate of max trip count of loop=16

         LOOP BEGIN at spline_2D_mod.f90(257,11)
            remark #25408: memset generated
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
            remark #25015: Estimate of max trip count of loop=1
         LOOP END
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(277,11)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(4,:)>, stride is 16
         remark #15305: vectorization support: vector length 2
         remark #15427: loop was completely unrolled
         remark #15399: vectorization support: unroll factor set to 8
         remark #15300: LOOP WAS VECTORIZED
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 3.000 
         remark #15478: estimated potential speedup: 1.330 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(295,11)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(8,k)>, stride is 16   [ spline_2D_mod.f90(296,14) ]
         remark #15305: vectorization support: vector length 2
         remark #15427: loop was completely unrolled
         remark #15399: vectorization support: unroll factor set to 8
         remark #15309: vectorization support: normalized vectorization overhead 0.002
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 6 
         remark #15477: vector cost: 39.500 
         remark #15478: estimated potential speedup: 0.150 
         remark #15482: vectorized math library calls: 1 
         remark #15487: type converts: 1 
         remark #15488: --- end vector cost summary ---
         remark #25436: completely unrolled by 16  
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(315,11)
         remark #25045: Fused Loops: ( 315 334 )

         remark #17108: loop was not parallelized: insufficient computational work
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(12,k)>, stride is 16   [ spline_2D_mod.f90(316,14) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <a(16,k)>, stride is 16   [ spline_2D_mod.f90(335,14) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.045
         remark #15453: unmasked strided stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 18 
         remark #15477: vector cost: 55.000 
         remark #15478: estimated potential speedup: 0.320 
         remark #15482: vectorized math library calls: 1 
         remark #15487: type converts: 2 
         remark #15488: --- end vector cost summary ---
         remark #25436: completely unrolled by 16  
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(334,11)
         remark #25046: Loop lost in Fusion 
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(345,14)
      <Multiversioned v1>
         remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15542: loop was not vectorized: inner loop was already vectorized
         remark #25015: Estimate of max trip count of loop=4

         LOOP BEGIN at spline_2D_mod.f90(345,14)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15388: vectorization support: reference coeff(:,k,i,j) has aligned access
            remark #15388: vectorization support: reference z(:) has aligned access
            remark #15305: vectorization support: vector length 2
            remark #15309: vectorization support: normalized vectorization overhead 1.333
            remark #15300: LOOP WAS VECTORIZED
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 1.500 
            remark #15478: estimated potential speedup: 2.280 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=8
         LOOP END

         LOOP BEGIN at spline_2D_mod.f90(345,14)
         <Alternate Alignment Vectorized Loop>
            remark #25015: Estimate of max trip count of loop=8
         LOOP END

         LOOP BEGIN at spline_2D_mod.f90(345,14)
         <Remainder loop for vectorization>
            remark #25015: Estimate of max trip count of loop=16
         LOOP END
      LOOP END

      LOOP BEGIN at spline_2D_mod.f90(345,14)
      <Multiversioned v2>
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15542: loop was not vectorized: inner loop was already vectorized
         remark #25015: Estimate of max trip count of loop=4

         LOOP BEGIN at spline_2D_mod.f90(345,14)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15388: vectorization support: reference z(:) has aligned access
            remark #15329: vectorization support: non-unit strided store was emulated for the variable <coeff(:,k,i,j)>, stride is unknown to compiler
            remark #15305: vectorization support: vector length 2
            remark #15300: LOOP WAS VECTORIZED
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15453: unmasked strided stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 3.000 
            remark #15478: estimated potential speedup: 1.330 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=8
         LOOP END

         LOOP BEGIN at spline_2D_mod.f90(345,14)
         <Remainder loop for vectorization>
            remark #25015: Estimate of max trip count of loop=16
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

spline_2D_mod.f90(215,60):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
spline_2D_mod.f90(215,53):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
spline_2D_mod.f90(215,46):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
spline_2D_mod.f90(214,46):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
spline_2D_mod.f90(257,11):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (16, 0)
spline_2D_mod.f90(205,14):remark #34051: REGISTER ALLOCATION : [spline_2d_mod_mp_splie2_full_precomp_] spline_2D_mod.f90:205

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     779
            Global    :     147
            Local     :     632
        Regenerable   :     113
        Spilled       :      42
        
    Routine stack
        Variables     :    3600 bytes*
            Reads     :      50 [2.87e+02 ~ 1.4%]
            Writes    :     303 [4.60e+03 ~ 21.9%]
        Spills        :     296 bytes*
            Reads     :      67 [5.89e+02 ~ 2.8%]
            Writes    :      51 [1.64e+02 ~ 0.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SPLINE_2D_MOD::SPLIN2_FULL_PRECOMP

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SPLINE_2D_MOD::SPLIN2_FULL_PRECOMP) [4/7=57.1%] spline_2D_mod.f90(359,12)
  -> EXTERN: (384,8) for_write_seq_fmt
  -> EXTERN: (384,8) for_write_seq_fmt_xmit
  -> EXTERN: (384,8) for_write_seq_fmt_xmit
  -> EXTERN: (384,8) for_write_seq_fmt_xmit
  -> EXTERN: (384,8) for_write_seq_fmt_xmit
  -> EXTERN: (390,8) for_write_seq_fmt
  -> EXTERN: (390,8) for_write_seq_fmt_xmit
  -> EXTERN: (390,8) for_write_seq_fmt_xmit
  -> EXTERN: (390,8) for_write_seq_fmt_xmit


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at spline_2D_mod.f90(412,19)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference v_pow(j) has aligned access   [ spline_2D_mod.f90(412,38) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <coeff(i,j,b_x,b_y)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.643
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 11 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 0.860 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 4  

   LOOP BEGIN at spline_2D_mod.f90(411,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference coeff(i,j,b_x,b_y) has unaligned access   [ spline_2D_mod.f90(412,19) ]
      remark #15388: vectorization support: reference u_pow(i) has aligned access   [ spline_2D_mod.f90(412,19) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15427: loop was completely unrolled
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.208
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 6.000 
      remark #15478: estimated potential speedup: 1.510 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(411,8)
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(411,8)
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(411,8)
   LOOP END
LOOP END

LOOP BEGIN at spline_2D_mod.f90(412,19)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference v_pow(j) has aligned access   [ spline_2D_mod.f90(412,38) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <coeff(i,j,b_x,b_y)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.643
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 11 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 0.860 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 4  

   LOOP BEGIN at spline_2D_mod.f90(411,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference u_pow(i) has aligned access   [ spline_2D_mod.f90(412,19) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <coeff(i,j,b_x,b_y)>, stride is unknown to compiler   [ spline_2D_mod.f90(412,19) ]
      remark #15305: vectorization support: vector length 2
      remark #15427: loop was completely unrolled
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.077
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 6.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(411,8)
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(411,8)
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(411,8)
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

spline_2D_mod.f90(359,12):remark #34051: REGISTER ALLOCATION : [spline_2d_mod_mp_splin2_full_precomp_] spline_2D_mod.f90:359

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rsi rdi r8-r11 r13-r15 zmm0-zmm13]
        
    Routine temporaries
        Total         :     252
            Global    :      41
            Local     :     211
        Regenerable   :      62
        Spilled       :       9
        
    Routine stack
        Variables     :     152 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      13 [6.07e+00 ~ 5.1%]
        Spills        :      48 bytes*
            Reads     :       8 [3.29e+00 ~ 2.8%]
            Writes    :       6 [3.28e+00 ~ 2.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SPLINE_2D_MOD::SPLIN2_FULL_PRECOMP_IRREG

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SPLINE_2D_MOD::SPLIN2_FULL_PRECOMP_IRREG) [5/7=71.4%] spline_2D_mod.f90(421,12)
  -> EXTERN: (436,11) LOCATE_DP
  -> EXTERN: (437,11) LOCATE_DP
  -> EXTERN: (443,8) for_write_seq_fmt
  -> EXTERN: (443,8) for_write_seq_fmt_xmit
  -> EXTERN: (443,8) for_write_seq_fmt_xmit
  -> EXTERN: (443,8) for_write_seq_fmt_xmit
  -> EXTERN: (449,8) for_write_seq_fmt
  -> EXTERN: (449,8) for_write_seq_fmt_xmit
  -> EXTERN: (449,8) for_write_seq_fmt_xmit
  -> EXTERN: (449,8) for_write_seq_fmt_xmit


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at spline_2D_mod.f90(485,19)
<Multiversioned v1>
   remark #25233: Loop multiversioned for stride tests on Assumed shape arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference v_pow(j) has aligned access   [ spline_2D_mod.f90(485,38) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <coeff(i,j,b_x,b_y)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.643
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 11 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 0.860 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 4  

   LOOP BEGIN at spline_2D_mod.f90(484,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference coeff(i,j,b_x,b_y) has unaligned access   [ spline_2D_mod.f90(485,19) ]
      remark #15388: vectorization support: reference u_pow(i) has aligned access   [ spline_2D_mod.f90(485,19) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15305: vectorization support: vector length 2
      remark #15427: loop was completely unrolled
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.208
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 6.000 
      remark #15478: estimated potential speedup: 1.510 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(484,8)
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(484,8)
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(484,8)
   LOOP END
LOOP END

LOOP BEGIN at spline_2D_mod.f90(485,19)
<Multiversioned v2>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference v_pow(j) has aligned access   [ spline_2D_mod.f90(485,38) ]
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <coeff(i,j,b_x,b_y)>, stride is unknown to compiler
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 1.643
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15452: unmasked strided loads: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 11 
   remark #15477: vector cost: 7.000 
   remark #15478: estimated potential speedup: 0.860 
   remark #15488: --- end vector cost summary ---
   remark #25436: completely unrolled by 4  

   LOOP BEGIN at spline_2D_mod.f90(484,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference u_pow(i) has aligned access   [ spline_2D_mod.f90(485,19) ]
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <coeff(i,j,b_x,b_y)>, stride is unknown to compiler   [ spline_2D_mod.f90(485,19) ]
      remark #15305: vectorization support: vector length 2
      remark #15427: loop was completely unrolled
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.077
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15452: unmasked strided loads: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 11 
      remark #15477: vector cost: 6.500 
      remark #15478: estimated potential speedup: 1.570 
      remark #15488: --- end vector cost summary ---
      remark #25436: completely unrolled by 4  
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(484,8)
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(484,8)
   LOOP END

   LOOP BEGIN at spline_2D_mod.f90(484,8)
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

spline_2D_mod.f90(421,12):remark #34051: REGISTER ALLOCATION : [spline_2d_mod_mp_splin2_full_precomp_irreg_] spline_2D_mod.f90:421

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :     258
            Global    :      51
            Local     :     207
        Regenerable   :      56
        Spilled       :      15
        
    Routine stack
        Variables     :     144 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      12 [5.62e+00 ~ 5.6%]
        Spills        :      80 bytes*
            Reads     :      18 [3.81e+00 ~ 3.8%]
            Writes    :      12 [7.75e+00 ~ 7.7%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SPLINE_2D_MOD::SPLIN2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SPLINE_2D_MOD::SPLIN2) [6/7=85.7%] spline_2D_mod.f90(498,12)
  -> EXTERN: (512,5) for_alloc_allocatable
  -> EXTERN: (512,5) for_check_mult_overflow64
  -> EXTERN: (513,5) for_alloc_allocatable
  -> EXTERN: (513,5) for_check_mult_overflow64
  -> EXTERN: (516,19) SPLINT_PLAIN
  -> EXTERN: (519,10) SPLINE_PLAIN
  -> EXTERN: (520,14) SPLINT_PLAIN
  -> EXTERN: (522,5) for_dealloc_allocatable
  -> EXTERN: (523,5) for_dealloc_allocatable
  -> EXTERN: (525,3) for_dealloc_allocatable
  -> EXTERN: (525,3) for_dealloc_allocatable


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at spline_2D_mod.f90(515,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (516:19) and ya (516:19)
   remark #17106: parallel dependence: assumed OUTPUT dependence between ya (516:19) and at (516:19)
   remark #15382: vectorization support: call to function SPLINT_PLAIN cannot be vectorized   [ spline_2D_mod.f90(516,19) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (516:19) and ya (516:19)
   remark #15346: vector dependence: assumed OUTPUT dependence between ya (516:19) and at (516:19)
LOOP END

    Report from: Code generation optimizations [cg]

spline_2D_mod.f90(507,51):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
spline_2D_mod.f90(507,44):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (32, 0), and destination (alignment, offset): (16, 0)
spline_2D_mod.f90(498,12):remark #34051: REGISTER ALLOCATION : [spline_2d_mod_mp_splin2_] spline_2D_mod.f90:498

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm3]
        
    Routine temporaries
        Total         :     225
            Global    :      47
            Local     :     178
        Regenerable   :      38
        Spilled       :      15
        
    Routine stack
        Variables     :     304 bytes*
            Reads     :      10 [1.44e+01 ~ 3.1%]
            Writes    :      44 [1.15e+02 ~ 24.8%]
        Spills        :      80 bytes*
            Reads     :      10 [4.11e+01 ~ 8.8%]
            Writes    :      10 [9.88e+00 ~ 2.1%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: SPLINE_2D_MOD::SPLIE2

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SPLINE_2D_MOD::SPLIE2) [7/7=100.0%] spline_2D_mod.f90(528,14)
  -> EXTERN: (538,13) SPLINE_PLAIN


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at spline_2D_mod.f90(537,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between at (538:13) and ya (538:13)
   remark #17106: parallel dependence: assumed OUTPUT dependence between ya (538:13) and at (538:13)
   remark #15382: vectorization support: call to function SPLINE_PLAIN cannot be vectorized   [ spline_2D_mod.f90(538,13) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between at (538:13) and ya (538:13)
   remark #15346: vector dependence: assumed OUTPUT dependence between ya (538:13) and at (538:13)
LOOP END

    Report from: Code generation optimizations [cg]

spline_2D_mod.f90(528,14):remark #34051: REGISTER ALLOCATION : [spline_2d_mod_mp_splie2_] spline_2D_mod.f90:528

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   14[ rax rdx rcx rbx rsi rdi r8-r15]
        
    Routine temporaries
        Total         :      39
            Global    :      22
            Local     :      17
        Regenerable   :      10
        Spilled       :       9
        
    Routine stack
        Variables     :     144 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      16 [8.70e+01 ~ 33.5%]
        Spills        :      72 bytes*
            Reads     :       9 [2.67e+01 ~ 10.2%]
            Writes    :       9 [8.81e+00 ~ 3.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
